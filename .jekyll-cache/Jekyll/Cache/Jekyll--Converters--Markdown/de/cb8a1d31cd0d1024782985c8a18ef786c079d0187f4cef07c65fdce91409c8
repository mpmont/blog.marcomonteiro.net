I"Ä<p>Thereâ€™s a lot of ways to use Vagrant. Some people create a virtual machine per project. I donâ€™t like that idea. I think itâ€™s best to create a virtual machine for each different server you have to deploy. So if I have 2 projects that are going to be deployed to the same server why should I create two virtual machines? Makes no sense to me. Those two projects belong in the same virtual machine.</p>

<!--more-->

<p>In any case, I hope Iâ€™m not the only one trying to do that. If I am, then I must be wrong and you should stop reading this post. Anyway. If you want to do that, you have to create more than one virtual host so you can have something like:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>foobar.dev
nyancat.dev
blog.dev
</code></pre></div></div>

<p>Like when youâ€™re connecting to your database with sequelPro. You must treat your virtual machine like another computer. If youâ€™re using PHPupet itâ€™s quite easy. For this example my virtual machine has Ubuntu installed.</p>

<p><strong>Navigate to your project(s) folder</strong></p>

<p>mypath/puppet/hieradata</p>

<p><strong>Open common.yaml</strong></p>

<p>Under Vhosts youâ€™ll have something like this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>vhosts:
    VO6aT11EHJmL:
        servername: localhost
        docroot: /var/www/public
        port: '80'
        setenv:
            - 'APP_ENV dev'
        override:
            - All
    4yNJr1LpLJYA:
        servername: blog.dev
        docroot: /var/www/vhosts/blog
        port: '80'
        setenv:
            - 'APP_ENV dev'
        override:
            - all
</code></pre></div></div>

<p>Each vhost is given a unique identification name and it can be anything. The options for servername, docroot seem simple, so weâ€™ll modify these.</p>

<p>Next for the virtual machine to recognize your updates make sure your vagrant is stopped while making these changes. After youâ€™re done restart vagrant. Once vagrant is up go into your directories where your sites-available directory is. In my case iâ€™m using apache under ubuntu.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/etc/apache2/sites-available
</code></pre></div></div>

<p>The files that you will see there, their name will match the unique names that you have in the common.yaml file except there are numbers in them for example:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#-unique_name.conf
</code></pre></div></div>

<p>So in the common.yaml file if you created or modified settings under 4yNJr1LpLJYA you would need to look for #-4yNJr1LpLJYA.conf in this directory and match the settings as you have in your common.yaml file. Once you are done restart your server.</p>

<p>Also donâ€™t forget to add the virtual host into your local machines host file and match it with the same ip that puphet gave you (or that you configured).</p>

<p>Do this for each one that you want to add.</p>

<p>ps: if you know another way to manage vhosts quickly while using vagrant. Please, do comment and help a bother out.</p>
:ET