I"Ç<p>Yeah, thatâ€™s right. If youâ€™re like me you have a small compulsion to commit every small task you complete. In some cases that can be a good practice. However, when youâ€™re working with a large team, or even on a open source project that has lotâ€™s of contributors that can be a PITA in the long run. Imagine youâ€™re looking for all the changes done while creating a feature, and your history is full of small commits. Finding what youâ€™re looking for is not going to be easy.</p>

<!--more-->

<p>So I started digging a way so I can continue on my normal commit rate, but before I push things into my remote(s) I can decide if my code will go divide into all of those commits or if I want to â€¦mergeâ€œ them into a single commit.</p>

<p>Letâ€™s look at the rebase command and if youâ€™ll see that is one called â€”interactive. Apparently the most common use for this one is to squash commits. What I mean by that is that you can pick up all your commits and combine them into larger ones.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>-i, --interactive Let the user edit the list of commits to rebase
</code></pre></div></div>

<p>A word of caution: Only do this on commits that havenâ€™t been pushed an external repository. If others have based work off of the commits that youâ€™re going to delete, plenty of conflicts can occur. Just donâ€™t rewrite your history if itâ€™s been shared with others.</p>
:ET