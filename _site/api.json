{
    "website_title": "Blog++",
    "website_url": "http://localhost:4000/",
    "posts": [
        
            {
                "title": "Trying Manjaro Linux for a month",
                "content_text": "I’ve been a full time Linux user for the past 4 years. Until now, all I’ve used was Debian distributions. I never in my life even consider a Arch based distro because rolling release distros scared me.However, Manjaro Linux has been getting a lot of buzz in the last 2 or 3 years so I decided to try it out.The first thing I did was join r/ManjaroLinux and I lurked there for about a month or so. Never said anything during that time. Basically to see how many posts were about people saying that the system somehow broke.I then decided to make a post, this one to be precise.On that thread I got some good people on both sides of the fence. Some said they run Manjaro as their daily driver and some said they used it mostly in a secondary machine.After that thread I decided to install Manjaro on my laptop. I normally don’t use my laptop to work from 9 to 5. But I have all the tools installed on it if I need that for some reason. I also use it for browsing, answering some emails and I’m writing this post on it right now (already on Manjaro).My main concern was always stability, I always felt like Arch was mostly the beta testers in Linux, always living on the most recent software. However I found out that Manjaro even though its based on Arch, it doesn’t have the same release cycle.Here’s what’s actually happening:   My plan is to open my laptop everyday, update the system everytime there’s updates and see if during that month everything stays normal. After that month I’ll see if I like it better than the Debian based distros I’ve been using and see if I change or not.",
                "content_html": "<p>I’ve been a full time Linux user for the past 4 years. Until now, all I’ve used was Debian distributions. I never in my life even consider a Arch based distro because rolling release distros scared me.</p><!--more--><p>However, Manjaro Linux has been getting a lot of buzz in the last 2 or 3 years so I decided to try it out.</p><p>The first thing I did was join <a href=\"https://reddit.com/r/ManjaroLinux\">r/ManjaroLinux</a> and I lurked there for about a month or so. Never said anything during that time. Basically to see how many posts were about people saying that the system somehow broke.</p><p>I then decided to make a post, <a href=\"https://reddit.com/r/ManjaroLinux/comments/jj1kby/never_used_a_rolling_release_distribution/\">this one</a> to be precise.</p><p>On that thread I got some good people on both sides of the fence. Some said they run Manjaro as their daily driver and some said they used it mostly in a secondary machine.</p><p>After that thread I decided to install Manjaro on my laptop. I normally don’t use my laptop to work from 9 to 5. But I have all the tools installed on it if I need that for some reason. I also use it for browsing, answering some emails and I’m writing this post on it right now (already on Manjaro).</p><p>My main concern was always stability, I always felt like Arch was mostly the beta testers in Linux, always living on the most recent software. However I found out that Manjaro even though its based on Arch, it doesn’t have the same release cycle.</p><p>Here’s what’s actually happening:</p><center>   <img style=\"display: inline-table;\" src=\"https://manjaro.org/img/features/repositories.png\" /></center><p>My plan is to open my laptop everyday, update the system everytime there’s updates and see if during that month everything stays normal. After that month I’ll see if I like it better than the Debian based distros I’ve been using and see if I change or not.</p>",
                "url": "http://localhost:4000/post/trying-manjaro-linux-for-a-month/",
                
                
                "categories": ["linux","distro","security","pacman","manjaro","arch"],                
                
                "tags": ["linux, distro, security, pacman, manjaro, arch"],
                "date_published": "2020-10-29T00:00:00+00:00",
                "date_modified": "2020-10-29T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Permanent Record from Edward Snowden",
                "content_text": "Permanent Record is a 2019 autobiography by Edward Snowden, whose revelations sparked a global debate about surveillance. It was published on September 17, 2019, by Metropolitan Books, an imprint of Henry Holt and Company.In case you’ve been living under a rock and don’t know who Edward Snowden is then I don’t know what to tell you.Edward Snowden have been a hero of mine for a few years now, I really admire the courage it took from him to do what he did. Earlier this year to took uppon myself to listen to his book and my God, what a ride. The life this man is living is out of this world.The book describes Snowden’s childhood as well as his tenure at the Central Intelligence Agency and National Security Agency and his motivations for the leaking of highly classified information in 2013 that revealed global surveillance programs. Snowden also discusses his views on authoritarianism, democracy and privacy. The writer Joshua Cohen is credited by Snowden for “helping to transform my rambling reminiscences and capsule manifestoes into a book.If you really want to know more about im I advise you to read the book or listen to it like I did. If that’s not something that you’re incline to do, then just listen to these two podcasts when he was on Joe Rogan.",
                "content_html": "<p>Permanent Record is a 2019 autobiography by Edward Snowden, whose revelations sparked a global debate about surveillance. It was published on September 17, 2019, by Metropolitan Books, an imprint of Henry Holt and Company.</p><!--more--><p>In case you’ve been living under a rock and don’t know who Edward Snowden is then I don’t know what to tell you.</p><p>Edward Snowden have been a hero of mine for a few years now, I really admire the courage it took from him to do what he did. Earlier this year to took uppon myself to listen to his book and my God, what a ride. The life this man is living is out of this world.</p><p>The book describes Snowden’s childhood as well as his tenure at the Central Intelligence Agency and National Security Agency and his motivations for the leaking of highly classified information in 2013 that revealed global surveillance programs. Snowden also discusses his views on authoritarianism, democracy and privacy. The writer Joshua Cohen is credited by Snowden for “helping to transform my rambling reminiscences and capsule manifestoes into a book.</p><p>If you really want to know more about im I advise you to read the book or listen to it like I did. If that’s not something that you’re incline to do, then just listen to these two podcasts when he was on Joe Rogan.</p><iframe width=\"100%\" height=\"350\" src=\"https://www.youtube.com/embed/efs3QRr8LWw\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe><iframe width=\"100%\" height=\"350\" src=\"https://www.youtube.com/embed/_Rl82OQDoOc\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe>",
                "url": "http://localhost:4000/post/permanent-record-from-edward-snowden/",
                
                
                "categories": ["web privacy","security","standard","books"],                
                
                "tags": ["web privacy, security, standard, books"],
                "date_published": "2020-10-02T00:00:00+01:00",
                "date_modified": "2020-10-02T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "How to improve your privacy 1.1  Whatsapp",
                "content_text": "Whatsapp is one the most used chat apps, basically everyone uses it. Therefore, even if you don’t like it you’re kinda forced to use it if you want to stay in touch with friends and family. There’s a few setting that you might want to change to make it a bit more private. Understanding WhatsappWhatsapp is a part of the Facebook family, so that should be a huge red flag right there. However, since 2016 Whatsapp supports end-to-end encryption, that means that nobody on Facebook can read your messages. That’s a wonderful thing. However, Facebook can still access both phones in a conversation and mine some data about them. There’s actually nothing you can do about that besides stop using Whatsapp but that’s not the point. Turn on two-factor authenticationThis is very important, if you want to secure your messages this should be enabled. Actually this should be enable everywhere you can.The normal way two-factor authentication would work is by sending you a code that would allow you to access the app. But with you opening the app on an average of 50 to 100 times a day that would be impractical. So instead Whatsapp will ask you for a pin every other time and if your phone has fingerprint reader you can make Whatsapp only available after that scan too. Turn off cloud backupsSure cloud backups sound amazing, if you’re on Android you just connect to your Google Drive and you’re good to go. But there’s a catch. First you’re getting Whatsapp access to your Google Drive. Second the messages aren’t actually stored securely. This means, if your google account is hacked people will be able to see your messages. Stop people ouside our contacts from seeing your infoTwo things you need to turn off right now. First it’s your public profile the shows your information to everyone and can be mined at will. Second is stop people from outside your contact from adding you to group chats. This will stop those annoying spam messages we get from time to time. Stop using whatsapp and move to signalThis is obviously impossible for most people. I know it is form me. I actually only know a few people that uses signal and I don’t know anyone that only uses it. But if you can do that, good for you, you just made it one step forward protecting your data.",
                "content_html": "<p>Whatsapp is one the most used chat apps, basically everyone uses it. Therefore, even if you don’t like it you’re kinda forced to use it if you want to stay in touch with friends and family. There’s a few setting that you might want to change to make it a bit more private.</p><!--more--><h3 style=\"font-weight: 400; font-size: 26px;\"><strong><u> Understanding Whatsapp</u></strong></h3><p>Whatsapp is a part of the Facebook family, so that should be a huge red flag right there. However, since 2016 Whatsapp supports end-to-end encryption, that means that nobody on Facebook can read your messages. That’s a wonderful thing. However, Facebook can still access both phones in a conversation and mine some data about them. There’s actually nothing you can do about that besides stop using Whatsapp but that’s not the point.</p><h3 style=\"font-weight: 400; font-size: 26px;\"><strong><u> Turn on two-factor authentication</u></strong></h3><p>This is very important, if you want to secure your messages this should be enabled. Actually this should be enable everywhere you can.</p><p>The normal way two-factor authentication would work is by sending you a code that would allow you to access the app. But with you opening the app on an average of 50 to 100 times a day that would be impractical. So instead Whatsapp will ask you for a pin every other time and if your phone has fingerprint reader you can make Whatsapp only available after that scan too.</p><h3 style=\"font-weight: 400; font-size: 26px;\"><strong><u> Turn off cloud backups</u></strong></h3><p>Sure cloud backups sound amazing, if you’re on Android you just connect to your Google Drive and you’re good to go. But there’s a catch. First you’re getting Whatsapp access to your Google Drive. Second the messages aren’t actually stored securely. This means, if your google account is hacked people will be able to see your messages.</p><h3 style=\"font-weight: 400; font-size: 26px;\"><strong><u> Stop people ouside our contacts from seeing your info</u></strong></h3><p>Two things you need to turn off right now. First it’s your public profile the shows your information to everyone and can be mined at will. Second is stop people from outside your contact from adding you to group chats. This will stop those annoying spam messages we get from time to time.</p><h3 style=\"font-weight: 400; font-size: 26px;\"><strong><u> Stop using whatsapp and move to signal</u></strong></h3><p>This is obviously impossible for most people. I know it is form me. I actually only know a few people that uses signal and I don’t know anyone that only uses it. But if you can do that, good for you, you just made it one step forward protecting your data.</p>",
                "url": "http://localhost:4000/post/improve-your-privacy-part-2/",
                
                
                "categories": ["web privacy","security","standard"],                
                
                "tags": ["web privacy, security, standard"],
                "date_published": "2020-09-26T00:00:00+01:00",
                "date_modified": "2020-09-26T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "How to improve your privacy 1.0",
                "content_text": "For the last 6 months or so I made it my mission to improve my privacy on the web. This article shows you what changes I made so far and what you can also do to protect yourself. Stop using google.comOne of the first changed I made was stop myself from using google.com. Google tracks everything you do on the web, all your searchs, but most of all, instead of giving you the results that are more relevant based on their SEO score, they give you the result that they think are best for you. This keeps you from seeing different ideas or even getting into websites that might make more sense to what you look for.I started using DuckDuckGo.com instead. They don’t track your searches, and most of all you get unbiased results outside the Filter Bubble. They are committed to unbiased search that’s never based on your search history. I even made DuckDuckGo my default search engine on my blog. Give it a go. :) Stop Using google ChromeGoogle chrome has been my default browser for years now. Before that I used Firefox for a long time but I parted ways with it mostly because it was getting behind in features and it was way slower than Chrome.However, for the same reason I stopped using google.com I thought it was time to give Firefox a try once more. Boy or boy was I impressed.Firefox is fast, it has all the feature I need in a browser for web-development that I do everyday and in it I installed a bunch of addons that helped further with my quest.Firefox addons I installed realted to privacy.AdBlocker UltimateAdBlocker Ultimate is designed with a singular purpose: remove all ads so you can focus your attention on the content you want.DuckDuckGo Privacy EssentialsDuckDuckGo Privacy Essentials comes packed with best-in-class privacy essentials and makes browsing in Firefox even faster.Escape Online Tracking — automatically block hidden third-party trackers we can find lurking on websites you visit, which stops the companies behind those trackers from collecting and selling your data.Search Privately — our private search engine comes built-in so you can search the Internet without being tracked.Enforce Encryption — force sites to use an encrypted (HTTPS) connection where available, protecting your data from prying eyes, like from unwanted snoopers and Internet service providers.Decode Privacy — each site you visit gets a Privacy Grade (A-F) so you can see how protected you are at a glance, and you can even dig into the details to see who we caught trying to track you.Firefox Multi-Account Containers (This is a must have)The Firefox Multi-Account Containers extension lets you carve out a separate box for each of your online lives – no more opening a different browser just to check your work email! Here is a quick video showing you how it works.Under the hood, it separates website storage into tab-specific Containers. Cookies downloaded by one Container are not available to other Containers. With the Firefox Multi-Account Containers extension, you can…Sign in to two different accounts on the same site for example, you could sign in to work email and home email in two different Container tabs. Keep different kinds of browsing far away from each other (for example, you might use one Container tab for managing your Checking Account and a different Container tab for searching for new songs by your favorite band).Avoid leaving social-network footprints all over the web (for example, you could use a Container tab for signing in to a social network, and use a different tab for visiting online news sites, keeping your social identity separate from tracking scripts on news sites).Next time I’ll tell you all about the changes I made on my phone.",
                "content_html": "<p>For the last 6 months or so I made it my mission to improve my privacy on the web. This article shows you what changes I made so far and what you can also do to protect yourself.</p><!--more--><h3 style=\"font-weight: 400; font-size: 26px;\"><strong><u> Stop using google.com</u></strong></h3><p>One of the first changed I made was stop myself from using google.com. Google tracks everything you do on the web, all your searchs, but most of all, instead of giving you the results that are more relevant based on their SEO score, they give you the result that they think are best for you. This keeps you from seeing different ideas or even getting into websites that might make more sense to what you look for.</p><p>I started using <a href=\"https://duckduckgo.com/\">DuckDuckGo.com instead</a>. They don’t track your searches, and most of all you get unbiased results outside the Filter Bubble. They are committed to unbiased search that’s never based on your search history. I even made DuckDuckGo my default search engine on my blog. Give it a go. :)</p><h3 style=\"font-weight: 400; font-size: 26px;\"><strong><u> Stop Using google Chrome</u></strong></h3><p>Google chrome has been my default browser for years now. Before that I used Firefox for a long time but I parted ways with it mostly because it was getting behind in features and it was way slower than Chrome.</p><p>However, for the same reason I stopped using google.com I thought it was time to give Firefox a try once more. Boy or boy was I impressed.</p><p>Firefox is fast, it has all the feature I need in a browser for web-development that I do everyday and in it I installed a bunch of addons that helped further with my quest.</p><p><br /><br /></p><p><strong>Firefox addons I installed realted to privacy.</strong></p><p><strong>AdBlocker Ultimate</strong></p><p>AdBlocker Ultimate is designed with a singular purpose: remove all ads so you can focus your attention on the content you want.</p><p><br /></p><p><strong>DuckDuckGo Privacy Essentials</strong></p><p>DuckDuckGo Privacy Essentials comes packed with best-in-class privacy essentials and makes browsing in Firefox even faster.</p><p>Escape Online Tracking — automatically block hidden third-party trackers we can find lurking on websites you visit, which stops the companies behind those trackers from collecting and selling your data.Search Privately — our private search engine comes built-in so you can search the Internet without being tracked.Enforce Encryption — force sites to use an encrypted (HTTPS) connection where available, protecting your data from prying eyes, like from unwanted snoopers and Internet service providers.Decode Privacy — each site you visit gets a Privacy Grade (A-F) so you can see how protected you are at a glance, and you can even dig into the details to see who we caught trying to track you.</p><p><br /></p><p><strong>Firefox Multi-Account Containers (This is a must have)</strong></p><p>The Firefox Multi-Account Containers extension lets you carve out a separate box for each of your online lives – no more opening a different browser just to check your work email! Here is a quick video showing you how it works.</p><p>Under the hood, it separates website storage into tab-specific Containers. Cookies downloaded by one Container are not available to other Containers. With the Firefox Multi-Account Containers extension, you can…</p><p>Sign in to two different accounts on the same site for example, you could sign in to work email and home email in two different Container tabs. Keep different kinds of browsing far away from each other (for example, you might use one Container tab for managing your Checking Account and a different Container tab for searching for new songs by your favorite band).</p><p>Avoid leaving social-network footprints all over the web (for example, you could use a Container tab for signing in to a social network, and use a different tab for visiting online news sites, keeping your social identity separate from tracking scripts on news sites).</p><p>Next time I’ll tell you all about the changes I made on my phone.</p>",
                "url": "http://localhost:4000/post/improve-your-privacy-part-1/",
                
                
                "categories": ["web privacy","security","standard"],                
                
                "tags": ["web privacy, security, standard"],
                "date_published": "2020-09-19T00:00:00+01:00",
                "date_modified": "2020-09-19T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Using the Codeigniter 4 standard on your projects with Sublime Text",
                "content_text": "We moved to Codeigniter 4 for our new projects. Until now, we’ve using phpfmt so everyone in the team can use the same standard while coding.However Codeigniter 4 has it’s own standard and it just makes sense for us to move to that new standard.For this we need:  PHP_CodeSniffer  Codeigniter4-Standard  PHP-CS-Fixer  Sublime-phpcsThere’s a few ways we can go about this, but since this was something that we actually need to use on a bunch of projects I going with installing all this globally.1. PHP Code SnifferPHP_CodeSniffer requires PHP version 5.4.0 or greater, although individual sniffs may have additional requirements such as external applications and scripts. See the Configuration Options manual page for a list of these requirements.If you’re using PHP_CodeSniffer as part of a team, or you’re running it on a CI server, you may want to configure your project’s settings using a configuration file.$ composer global require \"squizlabs/php_codesniffer=*\"2. Codeigniter 4 - Coding StandardUsing composer this can also be installed globally.$ composer global require codeigniter4/codeigniter4-standard3. PHP CS FixerTo install PHP CS Fixer, install Composer and issue the following command:$ composer global require friendsofphp/php-cs-fixerThen make sure you have the global Composer binaries directory in your PATH. This directory is platform-dependent, see Composer documentation for details. Example for some Unix systems:$ export PATH=\"$PATH:$HOME/.composer/vendor/bin\"4. Sublime-phpcs packageOpen your sublime text and install this package. After that you want to to open the user setting and change the following:You should pay special attention to the following setting:\"phpcs_executable_path\": \"/home/marco/.config/composer/vendor/squizlabs/php_codesniffer/bin/phpcs\",\"phpcs_additional_args\": {    \"--standard\": \"/home/marco/.config/composer/vendor/codeigniter4/codeigniter4-standard/CodeIgniter4\",    \"-n\": \"\"},\"php_cs_fixer_executable_path\": \"/home/marco/.config/composer/vendor/friendsofphp/php-cs-fixer/php-cs-fixer\",\"phpcbf_executable_path\": \"/home/marco/.config/composer/vendor/squizlabs/php_codesniffer/bin/phpcbf\",\"phpcbf_additional_args\": {    \"--standard\": \"/home/marco/.config/composer/vendor/codeigniter4/codeigniter4-standard/CodeIgniter4\",    \"-n\": \"\"},The paths should be the ones you have on your system. I’m on linux, so the composer installed globally are in my .config. If you’re on windows or mac your paths might differ.",
                "content_html": "<p>We moved to Codeigniter 4 for our new projects. Until now, we’ve using phpfmt so everyone in the team can use the same standard while coding.</p><p>However Codeigniter 4 has it’s own standard and it just makes sense for us to move to that new standard.</p><p>For this we need:</p><ol>  <li><a href=\"https://github.com/squizlabs/PHP_CodeSniffer/\">PHP_CodeSniffer</a></li>  <li><a href=\"https://github.com/codeigniter4/coding-standard\">Codeigniter4-Standard</a></li>  <li><a href=\"https://github.com/FriendsOfPhp/PHP-CS-Fixer\">PHP-CS-Fixer</a></li>  <li><a href=\"https://packagecontrol.io/packages/Phpcs\">Sublime-phpcs</a></li></ol><p>There’s a few ways we can go about this, but since this was something that we actually need to use on a bunch of projects I going with installing all this globally.</p><h3 id=\"1-php-code-sniffer\"><strong>1. PHP Code Sniffer</strong></h3><p>PHP_CodeSniffer requires PHP version 5.4.0 or greater, although individual sniffs may have additional requirements such as external applications and scripts. See the Configuration Options manual page for a list of these requirements.</p><p>If you’re using PHP_CodeSniffer as part of a team, or you’re running it on a CI server, you may want to configure your project’s settings using a configuration file.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ composer global require \"squizlabs/php_codesniffer=*\"</code></pre></div></div><h3 id=\"2-codeigniter-4---coding-standard\"><strong>2. Codeigniter 4 - Coding Standard</strong></h3><p>Using composer this can also be installed globally.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ composer global require codeigniter4/codeigniter4-standard</code></pre></div></div><h3 id=\"3-php-cs-fixer\"><strong>3. PHP CS Fixer</strong></h3><p>To install PHP CS Fixer, install Composer and issue the following command:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ composer global require friendsofphp/php-cs-fixer</code></pre></div></div><p>Then make sure you have the global Composer binaries directory in your PATH. This directory is platform-dependent, see Composer documentation for details. Example for some Unix systems:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ export PATH=\"$PATH:$HOME/.composer/vendor/bin\"</code></pre></div></div><h3 id=\"4-sublime-phpcs-package\"><strong>4. Sublime-phpcs package</strong></h3><p>Open your sublime text and install this package. After that you want to to open the user setting and change the following:</p><p>You should pay special attention to the following setting:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\"phpcs_executable_path\": \"/home/marco/.config/composer/vendor/squizlabs/php_codesniffer/bin/phpcs\",\"phpcs_additional_args\": {    \"--standard\": \"/home/marco/.config/composer/vendor/codeigniter4/codeigniter4-standard/CodeIgniter4\",    \"-n\": \"\"},\"php_cs_fixer_executable_path\": \"/home/marco/.config/composer/vendor/friendsofphp/php-cs-fixer/php-cs-fixer\",\"phpcbf_executable_path\": \"/home/marco/.config/composer/vendor/squizlabs/php_codesniffer/bin/phpcbf\",\"phpcbf_additional_args\": {    \"--standard\": \"/home/marco/.config/composer/vendor/codeigniter4/codeigniter4-standard/CodeIgniter4\",    \"-n\": \"\"},</code></pre></div></div><p>The paths should be the ones you have on your system. I’m on linux, so the composer installed globally are in my .config. If you’re on windows or mac your paths might differ.</p>",
                "url": "http://localhost:4000/post/using-codeigniter4-standard-on-your-projects-with-sublime-text/",
                
                
                "categories": ["blog","codeigniter 4","standard"],                
                
                "tags": ["blog,codeigniter 4, standard"],
                "date_published": "2020-09-01T00:00:00+01:00",
                "date_modified": "2020-09-01T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Moved my blog to jekyll and hosting it on github",
                "content_text": "I had my blog on wardrobe and using a normal shared hosting for a long time. Worked out great for my blog and website. However later I’ve been playing more and more with static website generators and see what can be done with them.With that in mind I decided to move both my website and blog to github hosting, for freeI might say and just use Jekyll to generate the static websites that I need.The blog is really fast now, and everything works exactly like I want it.I even used duckduckgo for the search functionality and it works amazing and with that I’m even supporting a really cool project.",
                "content_html": "<p>I had my blog on wardrobe and using a normal shared hosting for a long time. Worked out great for my blog and website. However later I’ve been playing more and more with static website generators and see what can be done with them.</p><p>With that in mind I decided to move both my website and blog to github hosting, for freeI might say and just use Jekyll to generate the static websites that I need.</p><p>The blog is really fast now, and everything works exactly like I want it.</p><p>I even used duckduckgo for the search functionality and it works amazing and with that I’m even supporting a really cool project.</p>",
                "url": "http://localhost:4000/post/moved-my-blog-to-jekyll-hosted-in-github/",
                
                
                "categories": ["blog",2020,"2020"],                
                
                "tags": ["blog,2020"],
                "date_published": "2020-08-22T00:00:00+01:00",
                "date_modified": "2020-08-22T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "How to setup Codeigniter 4",
                "content_text": "I started a brand new youtube channel. It’s called TIL Things. As in Today I Learned Things. The idea is to share kinda the same thing I normally do here but in a video format.To start things, I decided to do a video series about Codeigniter 4, from how to install it, how it works and building a small blog application with it.Here’s the first video. I hope you can enjoy it and if you do please consider liking and subscribing.All the code that will exist in these series will live in the following github repository.Github",
                "content_html": "<p>I started a brand new <a href=\"https://www.youtube.com/channel/UC9HQjernJPHN-RoKMwtYQ4w\">youtube channel</a>. It’s called <a href=\"https://www.youtube.com/channel/UC9HQjernJPHN-RoKMwtYQ4w\">TIL Things</a>. As in Today I Learned Things. The idea is to share kinda the same thing I normally do here but in a video format.</p><p>To start things, I decided to do a video series about Codeigniter 4, from how to install it, how it works and building a small blog application with it.</p><!--more--><p>Here’s the first video. I hope you can enjoy it and if you do please consider liking and subscribing.</p><iframe width=\"100%\" height=\"400\" src=\"https://www.youtube.com/embed/tSdbT0GMEqU\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe><p>All the code that will exist in these series will live in the following github repository.</p><p><a href=\"https://github.com/mpmont/ci4-screencasts\">Github</a></p>",
                "url": "http://localhost:4000/post/how-to-setup-codeigniter-4/",
                
                
                "categories": ["codeigniter 4","docker","linux","php",2020,"2020"],                
                
                "tags": ["codeigniter 4, docker, linux, php,2020"],
                "date_published": "2020-07-04T00:00:00+01:00",
                "date_modified": "2020-07-04T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "My work setup - 2020 update",
                "content_text": "It’s mid 2020, Ubuntu has a new LTS release and with it its time to try a few things and actually update. As you know I’m now using Pop!OS a distro based on Ubuntu. I already wrote an entire blog post about it. Now I’m going to show you the actual tools I use at the moment.OPERATING SYSTEMPop!OS is designed for fast navigation, easy workspace organization, and fluid, convenient workflow. Your operating system should encourage discovery, not obstruct it. It uses gnome by default and that’s what I use.Here’s the look of it when I load it.Here’s the theme and icons that I’m using.TERMINAL EMULATORAs you can see from that neofech print, I’m now using Alacritty, I’ve been a long term terminator user, but ever since I discovered Alacritty I never went back.Alacritty is a terminal emulator with a strong focus on simplicity and performance. With such a strong focus on performance, included features are carefully considered and you can always expect Alacritty to be blazingly fast. By making sane choices for defaults, Alacritty requires no additional setup. However, it does allow configuration of many aspects of the terminal.The software is considered to be at a beta level of readiness – there are a few missing features and bugs to be fixed, but it is already used by many as a daily driver, Including me.TEXT EDITORYes I’m still using Sublime Text 3 and I don’t plan on changing that. However, when I need to use a terminal based text editor I’m actually using Micro. Micro is easy to use ans it’s number one feature is being easy to install (it’s just a static binary with no dependencies) and easy to use.Uses a simple json format to configure your options and rebind keys to your liking. If you need more power, you can use Lua to configure the editor further.SHELLI’ve been a ZSH user for so long, used it for probably 6 years. However at the start of this year and started to try something new. The one I ended up with was fish. And then I obviously installed oh-my-fish. Fish is a smart and user-friendly command line shell for Linux, macOS, and the rest of the family..DOT FILESWant to take a look at my dotfiles? Sure I have them all on my github. Get on it.",
                "content_html": "<p>It’s mid 2020, Ubuntu has a new LTS release and with it its time to try a few things and actually update. As you know I’m now using Pop!OS a distro based on Ubuntu. I already wrote an entire blog post about it. Now I’m going to show you the actual tools I use at the moment.</p><!--more--><h3 id=\"operating-system\"><strong>OPERATING SYSTEM</strong></h3><p><a href=\"https://pop.system76.com/\">Pop!OS</a> is designed for fast navigation, easy workspace organization, and fluid, convenient workflow. Your operating system should encourage discovery, not obstruct it. It uses gnome by default and that’s what I use.</p><p>Here’s the look of it when I load it.</p><p><img src=\"https://i.imgur.com/mXV0OZx.png\" alt=\"Desktop\" /></p><p>Here’s the theme and icons that I’m using.</p><p><img src=\"https://i.imgur.com/WDLwzXl.png\" alt=\"neofetch\" /></p><h3 id=\"terminal-emulator\"><strong>TERMINAL EMULATOR</strong></h3><p>As you can see from that neofech print, I’m now using <a href=\"https://github.com/alacritty/alacritty\">Alacritty</a>, I’ve been a long term terminator user, but ever since I discovered Alacritty I never went back.</p><p><img src=\"https://i.imgur.com/ABbhg8a.png\" alt=\"Alacritty\" /></p><p>Alacritty is a terminal emulator with a strong focus on simplicity and performance. With such a strong focus on performance, included features are carefully considered and you can always expect Alacritty to be blazingly fast. By making sane choices for defaults, Alacritty requires no additional setup. However, it does allow configuration of many aspects of the terminal.</p><p>The software is considered to be at a beta level of readiness – there are a few missing features and bugs to be fixed, but it is already used by many as a daily driver, Including me.</p><h3 id=\"text-editor\"><strong>TEXT EDITOR</strong></h3><p>Yes I’m still using <a href=\"https://www.sublimetext.com/\">Sublime Text 3</a> and I don’t plan on changing that. However, when I need to use a terminal based text editor I’m actually using Micro. <a href=\"https://micro-editor.github.io\">Micro</a> is easy to use ans it’s number one feature is being easy to install (it’s just a static binary with no dependencies) and easy to use.</p><p><img src=\"https://i.imgur.com/qDwzk0n.png\" alt=\"Sublime and micro\" /></p><p>Uses a simple json format to configure your options and rebind keys to your liking. If you need more power, you can use Lua to configure the editor further.</p><h3 id=\"shell\"><strong>SHELL</strong></h3><p>I’ve been a ZSH user for so long, used it for probably 6 years. However at the start of this year and started to try something new. The one I ended up with was fish. And then I obviously installed oh-my-fish. <a href=\"https://fishshell.com/\">Fish</a> is a smart and user-friendly command line shell for Linux, macOS, and the rest of the family.</p><p><img src=\"https://i.imgur.com/VPaI1c1.png\" alt=\"A simple LS\" /></p><h3 id=\"dot-files\"><strong>.DOT FILES</strong></h3><p>Want to take a look at my <a href=\"https://github.com/mpmont/dotFiles\">dotfiles</a>? Sure I have them all on my <a href=\"https://github.com/mpmont/dotFiles\">github</a>. Get on it.</p>",
                "url": "http://localhost:4000/post/my-work-setup-2020-update/",
                
                
                "categories": ["alacritty","fish","linux","micro","popOS","shell","sublime text","work",2020,"2020"],                
                
                "tags": ["alacritty, fish, linux, micro, popOS, shell, sublime text, work,2020"],
                "date_published": "2020-06-18T00:00:00+01:00",
                "date_modified": "2020-06-18T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Why I moved from Ubuntu to PopOS!",
                "content_text": "PopOS! really made a big splash with its new 20.04 release and many long terms Ubuntu users like myself are now considering the change or actually changing. And there’s good reason why this is happening.For those who don’t know PopOs! is actually based on Ubuntu, so you might be like: - If that’s the case why don’t you just stick with Ubuntu? - That’s a good question. So here’s why.IT’S MADE FROM THE GUYS AT SYSTEM76If you don’t know what system76 is, they are a hardware company that is focussed on shipping their laptops and desktops with linux based systems. So much so, that they started their own distro to make the experience better. Why is this important? Because their distro is focussed on the hardware. Not that I ever had anything bad to say against Canonical, I just like system76 more.THEY DON’T CHANGE THE DEFAULT GNOME EXPERIENCEOne of the things that always bothered me in Ubuntu was the changes they make to gnome. Specially because they only do it for one reason, for the desktop environment to look more like the one that was created by them, Unity. And we all hated Unity right?I hated this so much that my Ubuntu installs on both personal desktop, laptop and work computer always have the default gnome desktop instaled instead of the one that comes with Ubuntu.FLATPAKI never had anything against snaps. Canonical had a problem at the time and they solved it. However, now that we have flatpaks that have become more and more popular I really don’t see the point of using snaps. PopOs! has the same philosophy and they ship their system already supporting flatpaks and even the shop that comes with it supports it, giving me the choice if I want to install a .deb or a flatpak.DISK ENCRYPTION BY DEFAULTPopOs! takes your privacy and files very seriously, that’s why during the instalation proccess you actually have to opt out the disk encryption if that’s something you don’t want. But why wouldn’t you want it right?WINDOW TILING INSIDE GNOMEOne of the things that had me intrigged even when popOs! was still in beta was the option to tile windows inside gnome. I always had a passion about window managers like i3 and others. Just never made the change because there’s a lot of stuff I want from a desktop environment like gnome that a window manager doesn’t have. When they started showing the demos about this feature I was blown away. Sure you can even install it on ubuntu.STEAM AND LITRUSNot that I do any more gaming besides minecraft on Linux, but if you plan on doing so, popOs! comes with almost everything pre-configured for you so that your gaming experience can be as easy as possible.",
                "content_html": "<p>PopOS! really made a big splash with its new 20.04 release and many long terms Ubuntu users like myself are now considering the change or actually changing. And there’s good reason why this is happening.</p><p>For those who don’t know PopOs! is actually based on Ubuntu, so you might be like: - If that’s the case why don’t you just stick with Ubuntu? - That’s a good question. So here’s why.</p><!--more--><h3 id=\"its-made-from-the-guys-at-system76\"><strong>IT’S MADE FROM THE GUYS AT SYSTEM76</strong></h3><p>If you don’t know what <a href=\"https://system76.com/\">system76</a> is, they are a hardware company that is focussed on shipping their laptops and desktops with linux based systems. So much so, that they started their own distro to make the experience better. Why is this important? Because their distro is focussed on the hardware. Not that I ever had anything bad to say against Canonical, I just like system76 more.</p><h3 id=\"they-dont-change-the-default-gnome-experience\"><strong>THEY DON’T CHANGE THE DEFAULT GNOME EXPERIENCE</strong></h3><p>One of the things that always bothered me in Ubuntu was the changes they make to gnome. Specially because they only do it for one reason, for the desktop environment to look more like the one that was created by them, <a href=\"https://en.wikipedia.org/wiki/Unity_%28user_interface%29\">Unity</a>. And we all hated Unity right?</p><p>I hated this so much that my Ubuntu installs on both personal desktop, laptop and work computer always have the default <a href=\"https://www.gnome.org/\">gnome</a> desktop instaled instead of the one that comes with Ubuntu.</p><h3 id=\"flatpak\"><strong>FLATPAK</strong></h3><p>I never had anything against snaps. Canonical had a problem at the time and they solved it. However, now that we have <a href=\"https://www.flatpak.org/\">flatpaks</a> that have become more and more popular I really don’t see the point of using <a href=\"https://snapcraft.io/\">snaps</a>. PopOs! has the same philosophy and they ship their system already supporting flatpaks and even the shop that comes with it supports it, giving me the choice if I want to install a .deb or a flatpak.</p><h3 id=\"disk-encryption-by-default\"><strong>DISK ENCRYPTION BY DEFAULT</strong></h3><p>PopOs! takes your privacy and files very seriously, that’s why during the instalation proccess you actually have to opt out the disk encryption if that’s something you don’t want. But why wouldn’t you want it right?</p><h3 id=\"window-tiling-inside-gnome\"><strong>WINDOW TILING INSIDE GNOME</strong></h3><iframe width=\"100%\" height=\"438\" src=\"https://www.youtube.com/embed/-fltwBKsMY0\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe><p>One of the things that had me intrigged even when popOs! was still in beta was the option to tile windows inside gnome. I always had a passion about window managers like i3 and others. Just never made the change because there’s a lot of stuff I want from a desktop environment like gnome that a window manager doesn’t have. When they started showing the demos about this feature I was blown away. Sure you can even install it on ubuntu.</p><h3 id=\"steam-and-litrus\"><strong>STEAM AND LITRUS</strong></h3><p>Not that I do any more gaming besides minecraft on Linux, but if you plan on doing so, popOs! comes with almost everything pre-configured for you so that your gaming experience can be as easy as possible.</p>",
                "url": "http://localhost:4000/post/why-i-moved-from-ubuntu-to-popos!/",
                
                
                "categories": ["linux"],                
                
                "tags": ["20.04, 2020, lts, popOs!,linux"],
                "date_published": "2020-06-06T00:00:00+01:00",
                "date_modified": "2020-06-06T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "$ exa A modern replacement for ls",
                "content_text": "You list files hundreds of times a day. Why spend your time squinting at black and white text?exa is an improved file lister with more features and better defaults. It uses colours to distinguish file types and metadata. It knows about symlinks, extended attributes, and Git. And it’s small, fast, and just one single binary.exa is written in Rust. So you’ll need that first in case you don’t already have it.Run the following command (assuming you have curl installedo on your system) to get started with the installation of Rust in your ubuntu based server/pc:$ curl https://sh.rustup.rs -sSf | shNow you need to download the lattest version of exa. Head on to their github page and download the lattest version.Just copy the download link and download the zip using wget, for example with the v0.9.0 you can download the binary with the following command (you can switch to a temporary directory and download the zip in there):# You should check your own version of this.$ wget -c https://github.com/ogham/exa/releases/download/v0.9.0/exa-linux-x86_64-0.8.0.zipThen, unzip the binary:$ unzip exa-linux-x86_64-0.8.0.zipThe zip contains a single file, namely the binary exa-linux-x86_64. So the last step is to move it to the bin directory of the local user so it will be accesible later in the cli as exa with the following instruction:$ sudo mv exa-linux-x86_64 /usr/local/bin/exaTo use this all you need is to type exa on your terminal. However what you can do to make the change even more perminante is to alias ls to axa.To do that I went to my .zshrc file and added the following:alias ls='exa --long --header --git'This way you can use your ls command like you always did and it will be translated into exa.Exa supports the following main features:ColoursDifferent types of file and data will be coloured differently, and the user and group columns will be highlighted for the current user.All the informationexa can display a file’s extended attributes, as well as standard filesystem information such as the inode, the number of blocks, and a file’s various dates and times.It’s fastexa queries files in parallel, giving you performance on par with ls.Tree viewNot only is the standard tree tool built-in, but it’ll show you your files’ information alongside the hierarchy.Git supportView the staged and unstaged status of every file, right there in the standard view. Also works in tree view for a high-level overview of your repository.Wide viewHow many columns can you display in your terminal at once? How many do you need?",
                "content_html": "<p>You list files hundreds of times a day. Why spend your time squinting at black and white text?</p><p>exa is an improved file lister with more features and better defaults. It uses colours to distinguish file types and metadata. It knows about symlinks, extended attributes, and Git. And it’s small, fast, and just one single binary.</p><!--more--><p>exa is written in Rust. So you’ll need that first in case you don’t already have it.</p><p>Run the following command (assuming you have curl installedo on your system) to get started with the installation of Rust in your ubuntu based server/pc:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ curl https://sh.rustup.rs -sSf | sh</code></pre></div></div><p>Now you need to download the lattest version of exa. Head on to <a href=\"https://github.com/ogham/exa/releases\">their github page</a> and download the lattest version.</p><p>Just copy the download link and download the zip using wget, for example with the v0.9.0 you can download the binary with the following command (you can switch to a temporary directory and download the zip in there):</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># You should check your own version of this.$ wget -c https://github.com/ogham/exa/releases/download/v0.9.0/exa-linux-x86_64-0.8.0.zip</code></pre></div></div><p>Then, unzip the binary:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ unzip exa-linux-x86_64-0.8.0.zip</code></pre></div></div><p>The zip contains a single file, namely the binary exa-linux-x86_64. So the last step is to move it to the bin directory of the local user so it will be accesible later in the cli as exa with the following instruction:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo mv exa-linux-x86_64 /usr/local/bin/exa</code></pre></div></div><p>To use this all you need is to type exa on your terminal. However what you can do to make the change even more perminante is to alias ls to axa.</p><p>To do that I went to my .zshrc file and added the following:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>alias ls='exa --long --header --git'</code></pre></div></div><p>This way you can use your ls command like you always did and it will be translated into exa.</p><p><img src=\"https://i.imgur.com/VXTYKQl.png\" alt=\"exa\" /></p><p>Exa supports the following main features:</p><p><strong>Colours</strong></p><p>Different types of file and data will be coloured differently, and the user and group columns will be highlighted for the current user.</p><p><strong>All the information</strong></p><p>exa can display a file’s extended attributes, as well as standard filesystem information such as the inode, the number of blocks, and a file’s various dates and times.</p><p><strong>It’s fast</strong></p><p>exa queries files in parallel, giving you performance on par with ls.</p><p><strong>Tree view</strong></p><p>Not only is the standard tree tool built-in, but it’ll show you your files’ information alongside the hierarchy.</p><p><strong>Git support</strong></p><p>View the staged and unstaged status of every file, right there in the standard view. Also works in tree view for a high-level overview of your repository.</p><p><strong>Wide view</strong></p><p>How many columns can you display in your terminal at once? How many do you need?</p>",
                "url": "http://localhost:4000/post/meet-exa-a-modern-replacement-for-ls/",
                
                
                "categories": [2020,"linux","terminal","ubuntu","2020"],                
                
                "tags": ["2020,linux,terminal,ubuntu"],
                "date_published": "2020-04-17T00:00:00+01:00",
                "date_modified": "2020-04-17T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Covid-19 made us more productive",
                "content_text": "I manage a small team of 6 including myself. I mostly do quality control stuff at work and I’ve been programming less and less in the past few months, mainly because I’m more involved in the project management side of things. However, there were always a few things that I knew we could do better and wanted to change but it was really hard to find the right time.Then COVID-19 came about and we had to change and adapt to this new reality. Specially with everyone now working from home. There were 3 things that I wanted to change but still didn’t have the time to. Let’s talk about them.###**PROJECT MANAGEMENT**One of the things that I talked about with management many times was my difficult to do project management, specially because the tools we were using were not built to do project management for real.We were basically using a mix of google docs spreadsheets, gitlab issues and boards to get us going. I know it makes no sense but it was perfect when it was just me. At the time Gitlab was the right choice since I could create kanban boards and use them to manage my project.Problem is, when you do this with several projects you get sidetracked and just can’t get the big picture on how things are going with all of your projects. This is something extremely important specially when everyone is working remotely.I decided to use Clickup. It has everything we need at the moment and more. You can create your own dashboards with project status and tasks per user. You can create boards per project and calendar view among other things. Most important of all it has gitlab integration.Want to know more? I found this YouTube video about it:This was a big bost in our productivity, it makes my life way easier when I have to answer to management on how the projects are going. I can answer problems easily and the team feels more productive because they can look at all their tasks in one place, despite the project.###**COMMUNICATION**The other problem we had was how we communicated at the office. We used to use fucking whatsapp and I always hated it. Now we finally changed to slack and my life is so much better now. I have channels like I used to have on IRC and I can create threads there. I really love threads. And better than that, I can have my work related chats all in one place. I don’t need to have my family group chats mixed up with my work stuff.###**CONTINUOUS INTEGRATION**This is something that I still plan on getting better during this quarantine time. I think I’m able to make things work way better with gitlab, docker and our production servers. If you don’t know what I’m talking about you can read more about it here.Was everything great with this change into a completly remote work environment? No, far from it. The lack of personal relationships at the office, the solitude of being inside 24/7 and time management were a big problem at first. When it started I worked way more at home than I did at the office, mostly because I worked since I woke up until I went to bed.These days I try to do my normal schedule and work 9 to 5 even though I’m still in front of the computer most of the time.",
                "content_html": "<p>I manage a small team of 6 including myself. I mostly do quality control stuff at work and I’ve been programming less and less in the past few months, mainly because I’m more involved in the project management side of things. However, there were always a few things that I knew we could do better and wanted to change but it was really hard to find the right time.</p><!--more--><p>Then COVID-19 came about and we had to change and adapt to this new reality. Specially with everyone now working from home. There were 3 things that I wanted to change but still didn’t have the time to. Let’s talk about them.</p><p>###<strong>**PROJECT MANAGEMENT**</strong></p><p>One of the things that I talked about with management many times was my difficult to do project management, specially because the tools we were using were not built to do project management for real.We were basically using a mix of google docs spreadsheets, gitlab issues and boards to get us going. I know it makes no sense but it was perfect when it was just me. At the time Gitlab was the right choice since I could create kanban boards and use them to manage my project.Problem is, when you do this with several projects you get sidetracked and just can’t get the big picture on how things are going with all of your projects. This is something extremely important specially when everyone is working remotely.</p><p>I decided to use Clickup. It has everything we need at the moment and more. You can create your own dashboards with project status and tasks per user. You can create boards per project and calendar view among other things. Most important of all it has gitlab integration.Want to know more? I found this YouTube video about it:</p><iframe width=\"100%\" height=\"370\" src=\"https://www.youtube.com/embed/LibP_KTUK8I\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe><p>This was a big bost in our productivity, it makes my life way easier when I have to answer to management on how the projects are going. I can answer problems easily and the team feels more productive because they can look at all their tasks in one place, despite the project.</p><p>###<strong>**COMMUNICATION**</strong></p><p>The other problem we had was how we communicated at the office. We used to use fucking whatsapp and I always hated it. Now we finally changed to slack and my life is so much better now. I have channels like I used to have on IRC and I can create threads there. I really love threads. And better than that, I can have my work related chats all in one place. I don’t need to have my family group chats mixed up with my work stuff.</p><iframe width=\"100%\" height=\"370\" src=\"https://www.youtube.com/embed/276Sz-fcxck\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe><p>###<strong>**CONTINUOUS INTEGRATION**</strong></p><p>This is something that I still plan on getting better during this quarantine time. I think I’m able to make things work way better with gitlab, docker and our production servers. If you don’t know what I’m talking about you can read more about it <a href=\"https://about.gitlab.com/stages-devops-lifecycle/continuous-integration/\">here</a>.</p><p><img src=\"https://about.gitlab.com/images/ci/ci-cd-test-deploy-illustration_2x.png\" alt=\"CI — Gitlab\" /></p><p>Was everything great with this change into a completly remote work environment? No, far from it. The lack of personal relationships at the office, the solitude of being inside 24/7 and time management were a big problem at first. When it started I worked way more at home than I did at the office, mostly because I worked since I woke up until I went to bed.</p><p>These days I try to do my normal schedule and work 9 to 5 even though I’m still in front of the computer most of the time.</p>",
                "url": "http://localhost:4000/post/covid-19-made-us-more-productive/",
                
                
                "categories": [2020,"covid-19","productivity","quarantine","2020"],                
                
                "tags": ["2020,covid-19,productivity,quarantine"],
                "date_published": "2020-04-01T00:00:00+01:00",
                "date_modified": "2020-04-01T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Installing SQLsrv extension for PHP 7.2 on Ubuntu 18.04 LTS",
                "content_text": "One of our windows servers got updated to a more recent version of windows and SQLServer. Until then I was using the msSQL extension and was still on PHP 5.6 on our intranet at work.Since this update I decided to upgrade our servers too and move to PHP 7.2 and obviously to the SQLsrv extension.Let’s assume that you already have PHP install and apache, so after that you should just do the following to get your microsoft packages.On your server type the following commands:curl -s https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -sudo bash -c \"curl -s https://packages.microsoft.com/config/ubuntu/18.04/prod.list &gt; /etc/apt/sources.list.d/mssql-release.list\"sudo apt-get updatesudo ACCEPT_EULA=Y apt-get -y install msodbcsql17 mssql-toolssudo apt-get -y install unixodbc-devAfter this, you most likelly don’t have the  the pecl7.X-sp command working. To solve this I did the following:sudo apt-get -y install gcc g++ make autoconf libc-dev pkg-configsudo apt-get install php-pear php-devsudo pecl install sqlsrvsudo pecl install pdo_sqlsrvAfter this all you need to do is create the necessary .ini file so that PHP can do its magic.sudo bash -c \"echo extension=sqlsrv.so &gt; /etc/php/7.2/mods-available/sqlsrv.ini\"sudo ln -s /etc/php/7.2/mods-available/sqlsrv.ini /etc/php/7.2/apache2/conf.d/sqlsrv.inisudo ln -s /etc/php/7.2/mods-available/sqlsrv.ini /etc/php/7.2/cli/conf.d/sqlsrv.inisudo bash -c \"echo extension=pdo_sqlsrv.so &gt; /etc/php/7.2/mods-available/pdo_sqlsrv.ini\"sudo ln -s /etc/php/7.2/mods-available/pdo_sqlsrv.ini /etc/php/7.2/apache2/conf.d/pdo_sqlsrv.inisudo ln -s /etc/php/7.2/mods-available/pdo_sqlsrv.ini /etc/php/7.2/cli/conf.d/pdo_sqlsrv.iniAfter this all you need to do is restart your apache:sudo service apache2 restartThat’s it!",
                "content_html": "<p>One of our windows servers got updated to a more recent version of windows and SQLServer. Until then I was using the msSQL extension and was still on PHP 5.6 on our intranet at work.</p><p>Since this update I decided to upgrade our servers too and move to PHP 7.2 and obviously to the SQLsrv extension.</p><!--more--><p>Let’s assume that you already have PHP install and apache, so after that you should just do the following to get your microsoft packages.</p><p>On your server type the following commands:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>curl -s https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -sudo bash -c \"curl -s https://packages.microsoft.com/config/ubuntu/18.04/prod.list &gt; /etc/apt/sources.list.d/mssql-release.list\"sudo apt-get updatesudo ACCEPT_EULA=Y apt-get -y install msodbcsql17 mssql-toolssudo apt-get -y install unixodbc-dev</code></pre></div></div><p>After this, you most likelly don’t have the  the pecl7.X-sp command working. To solve this I did the following:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>sudo apt-get -y install gcc g++ make autoconf libc-dev pkg-configsudo apt-get install php-pear php-devsudo pecl install sqlsrvsudo pecl install pdo_sqlsrv</code></pre></div></div><p>After this all you need to do is create the necessary .ini file so that PHP can do its magic.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>sudo bash -c \"echo extension=sqlsrv.so &gt; /etc/php/7.2/mods-available/sqlsrv.ini\"sudo ln -s /etc/php/7.2/mods-available/sqlsrv.ini /etc/php/7.2/apache2/conf.d/sqlsrv.inisudo ln -s /etc/php/7.2/mods-available/sqlsrv.ini /etc/php/7.2/cli/conf.d/sqlsrv.inisudo bash -c \"echo extension=pdo_sqlsrv.so &gt; /etc/php/7.2/mods-available/pdo_sqlsrv.ini\"sudo ln -s /etc/php/7.2/mods-available/pdo_sqlsrv.ini /etc/php/7.2/apache2/conf.d/pdo_sqlsrv.inisudo ln -s /etc/php/7.2/mods-available/pdo_sqlsrv.ini /etc/php/7.2/cli/conf.d/pdo_sqlsrv.ini</code></pre></div></div><p>After this all you need to do is restart your apache:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>sudo service apache2 restart</code></pre></div></div><p>That’s it!</p>",
                "url": "http://localhost:4000/post/installing-sqlsrv-extension-for-php-7.2-on-ubuntu-18.04-lts/",
                
                
                "categories": [2020,"apache","linux","mssql","php","sqlsrv","ubuntu","2020"],                
                
                "tags": ["2020,apache,linux,mssql,php,sqlsrv,ubuntu"],
                "date_published": "2020-03-18T00:00:00+00:00",
                "date_modified": "2020-03-18T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Codeigniter 4 snippets for sublime text is here",
                "content_text": "Codeigniter 4 has been in the works since 2015. It took almost 3 years to have a basic framework working and 2 more to document everything so we can use it in production. This is very exciting news, since codeigniter still holds a place in me. It was PHP framework that I use the most and I still use version 3 at work.With this new version up its time to make a new snippets package for Sublime Text 3. I’ve been maintaning the first version of that package for some years now. Back then it had 6400+ installs and I thought that was big, now it has more than 126k.Let’s make the new one has big as the first one. I made a repo here, and I already have a pull request to have it avaiable to everyone via package control. Until then you can just install it manually. To do that you just have to make a clone of this repository into your packages folder (Preferences &gt; Browse packages…), like so:git clone https://github.com/mpmont/ci4-snippets ci4-snippetsIf you feel like helping, you can just send me a pull request and we can sort something out.You can know more about Codeigniter 4 by checking the docs. And the official release post in the forums.Github repo with the ci4 snippets.",
                "content_html": "<p>Codeigniter 4 has been in the works since 2015. It took almost 3 years to have a basic framework working and 2 more to document everything so we can use it in production. This is very exciting news, since codeigniter still holds a place in me. It was PHP framework that I use the most and I still use version 3 at work.</p><!--more--><p>With this new version up its time to make a new snippets package for Sublime Text 3. I’ve been maintaning the first version of that package for some years now. <a href=\"https://blog.marcomonteiro.net/post/thank-you!\">Back then it had 6400+ installs</a> and I thought that was big, now it has<a href=\"https://packagecontrol.io/packages/CodeIgniter%20Snippets\"> more than 126k</a>.</p><p>Let’s make the new one has big as the first one. I made a repo here, and I already have a <a href=\"https://github.com/wbond/package_control_channel/pull/7845\">pull request</a> to have it avaiable to everyone via package control. Until then you can just install it manually. To do that you just have to make a clone of this repository into your packages folder <strong>(Preferences &gt; Browse packages…)</strong>, like so:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>git clone https://github.com/mpmont/ci4-snippets ci4-snippets</code></pre></div></div><p>If you feel like helping, you can just send me a pull request and we can sort something out.</p><p>You can know more about Codeigniter 4 by <a href=\"https://codeigniter4.github.io/userguide/\">checking the docs</a>. And the <a href=\"https://forum.codeigniter.com/thread-75581.html\">official release post</a> in the forums.</p><p><a href=\"https://github.com/mpmont/ci4-snippets\">Github repo</a> with the ci4 snippets.</p>",
                "url": "http://localhost:4000/post/codeigniter-4-snippets-for-sublime-text-is-here/",
                
                
                "categories": [2020,"codeigniter","github","open-source","php","programming","2020"],                
                
                "tags": ["2020,codeigniter,github,open-source,php,programming"],
                "date_published": "2020-03-15T00:00:00+00:00",
                "date_modified": "2020-03-15T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Dealing with technical debt",
                "content_text": "Technical debt is just a fancy way of saying that something will bite you in the ass in the long term. However, in every project this is something very real that every Lead Developer has to deal with almost in a daily basis.Here I’ll try to describe on how to avoid it it, or at least identify it as soon as possible so you can plan ahead.First of all, if we’re talking about technical debt, there’s something that you can be sure, you’ll have to pay it in the future, in one way or another. However I’m not here to say that this is something that should be avoided at all costs. It’s not! There’s some really good reasons  to accept some form of technical debt. Maybe there’s a deadline, or the dreadfull marketing team made some promisses that you’ll have to deal with. Or worst of all, management just made some crazy demands that you have to follow. These are just some examples. There’s many more, but I think these everyone can relate to.With this in mind you should always accept some form of technical debt with a deadline in mind, but if you do so, make sure you have a backup plan to fix it in the future. This is how you balance business and your codebase. Never ever, accept technical debt without a backup plan on how to solve it in the future.I’m going to quote Martin Fowler here:  If you have this kind of exponential relationship, then if you do it more frequently, you can drastically reduce the pain. And this is what happens with Continuous Integration - by integrating every day, the pain of integration almost vanishes. It did hurt, so you did it more often, and now it no longer hurts. - In Frequency Reduces Difficulty![graph](https://martinfowler.com/bliki/images/frequency-reduces-difficulty/graph.png)What I mean is, managing technical debt is something that you’ll learn to do once you start acknowledge is that this is something that you do often. What normally tends to happen is that us, Lead Developers are quite good at identifying these technical debts, however we tend to slack on solve them. Sure this might be ok on smaller projects, where you just have to be sure to avoid them on the next project. But what about big projects? That is just something that you can’t avoid, that will probably mean that somewhere in the future you’ll have a very dificult conversation with management saying that your app needs a complet re-write. I know! I’ve been there and it’s not pleasent.How to better understand your codebase so you can identify your technical debt easly?First you need to check your version control often. Try and see how your developers interact with your code. See what part of your code is being used most of the time. With this you can identify these key areas:            Hotspots = where most developers are working                  Refactoring targets = prioritize change                  Change coupling = implicit change in patters                  Code biomarkers = aim to indicate specific properties at very low code base      Then you should ask yourself the following questions:            Where should we focus improvements?                  Where are the risk areas?                  Is team productivity a problem?      When you answer those questions, then there’s time for the walk of shame and start paying your debt.But how?You have many options here and you should pick the one that aplies to your case.You can allocate more time into the development of said feature and that might solve it because this were rushed. This can be done by making a that a team priority and thats what everyone will be doing until things are solved.Another way of paying it is actually making a rulle of having a technical debt day per week or month, were you pick days where everyone in the team will do it.You can just choose to educate your team about it, this can be an option with just small debts in small projects, otherwise education can only go so far.Should definetly have a talk with management and marketing about it so in the future deadlines wont afect the project as much.There’s only one thing that you might be tempted to do, but maybe it’s not really an answer. Hire more developers. This seems like a great idea at first, but sometimes you want to solve these issues with your team before bringing more people into the mix.",
                "content_html": "<p>Technical debt is just a fancy way of saying that something will bite you in the ass in the long term. However, in every project this is something very real that every Lead Developer has to deal with almost in a daily basis.</p><p>Here I’ll try to describe on how to avoid it it, or at least identify it as soon as possible so you can plan ahead.</p><!--more--><p>First of all, if we’re talking about technical debt, there’s something that you can be sure, you’ll have to pay it in the future, in one way or another. However I’m not here to say that this is something that should be avoided at all costs. It’s not! There’s some really good reasons  to accept some form of technical debt. Maybe there’s a deadline, or the dreadfull marketing team made some promisses that you’ll have to deal with. Or worst of all, management just made some crazy demands that you have to follow. These are just some examples. There’s many more, but I think these everyone can relate to.</p><p>With this in mind you should always accept some form of technical debt with a deadline in mind, but if you do so, make sure you have a backup plan to fix it in the future. This is how you balance business and your codebase. Never ever, accept technical debt without a backup plan on how to solve it in the future.</p><p>I’m going to quote Martin Fowler here:</p><blockquote>  <p>If you have this kind of exponential relationship, then if you do it more frequently, you can drastically reduce the pain. And this is what happens with Continuous Integration - by integrating every day, the pain of integration almost vanishes. It did hurt, so you did it more often, and now it no longer hurts. - In <a href=\"https://martinfowler.com/bliki/FrequencyReducesDifficulty.html\">Frequency Reduces Difficulty</a></p></blockquote><center>![graph](https://martinfowler.com/bliki/images/frequency-reduces-difficulty/graph.png)</center><p>What I mean is, managing technical debt is something that you’ll learn to do once you start acknowledge is that this is something that you do often. What normally tends to happen is that us, Lead Developers are quite good at identifying these technical debts, however we tend to slack on solve them. Sure this might be ok on smaller projects, where you just have to be sure to avoid them on the next project. But what about big projects? That is just something that you can’t avoid, that will probably mean that somewhere in the future you’ll have a very dificult conversation with management saying that your app needs a complet re-write. I know! I’ve been there and it’s not pleasent.</p><p>How to better understand your codebase so you can identify your technical debt easly?</p><p>First you need to check your version control often. Try and see how your developers interact with your code. See what part of your code is being used most of the time. With this you can identify these key areas:</p><ul>  <li>    <blockquote>      <p><strong>Hotspots</strong> = where most developers are working</p>    </blockquote>  </li>  <li>    <blockquote>      <p><strong>Refactoring targets</strong> = prioritize change</p>    </blockquote>  </li>  <li>    <blockquote>      <p><strong>Change coupling</strong> = implicit change in patters</p>    </blockquote>  </li>  <li>    <blockquote>      <p><strong>Code biomarkers</strong> = aim to indicate specific properties at very low code base</p>    </blockquote>  </li></ul><p>Then you should ask yourself the following questions:</p><ul>  <li>    <blockquote>      <p>Where should we focus improvements?</p>    </blockquote>  </li>  <li>    <blockquote>      <p>Where are the risk areas?</p>    </blockquote>  </li>  <li>    <blockquote>      <p>Is team productivity a problem?</p>    </blockquote>  </li></ul><p>When you answer those questions, then there’s time for the walk of shame and start paying your debt.</p><center><iframe src=\"https://giphy.com/embed/vX9WcCiWwUF7G\" width=\"100%\" height=\"270\" frameborder=\"0\" class=\"giphy-embed\" allowfullscreen=\"\"></iframe></center><p>But how?</p><p>You have many options here and you should pick the one that aplies to your case.</p><p>You can allocate more time into the development of said feature and that might solve it because this were rushed. This can be done by making a that a team priority and thats what everyone will be doing until things are solved.</p><p>Another way of paying it is actually making a rulle of having a technical debt day per week or month, were you pick days where everyone in the team will do it.</p><p>You can just choose to educate your team about it, this can be an option with just small debts in small projects, otherwise education can only go so far.</p><p>Should definetly have a talk with management and marketing about it so in the future deadlines wont afect the project as much.</p><p>There’s only one thing that you might be tempted to do, but maybe it’s not really an answer. Hire more developers. This seems like a great idea at first, but sometimes you want to solve these issues with your team before bringing more people into the mix.</p>",
                "url": "http://localhost:4000/post/dealing-with-technical-debt/",
                
                
                "categories": [2020,"management","programming","team","2020"],                
                
                "tags": ["2020,management,programming,team"],
                "date_published": "2020-03-05T00:00:00+00:00",
                "date_modified": "2020-03-05T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "A better man page for your terminal, tldr",
                "content_text": "I always hated the man pages, I always have a hard time to understand stuff and mostly I have a really hard time finding the option I need.The TLDR pages are a community effort to simplify the beloved man pages with practical examples.Here’s how it works:InstallationAs of now, our most mature client is the node.js one, which you can easily install from NPM:$ npm install -g tldr",
                "content_html": "<p>I always hated the man pages, I always have a hard time to understand stuff and mostly I have a really hard time finding the option I need.</p><p>The TLDR pages are a community effort to simplify the beloved man pages with practical examples.</p><!--more--><p>Here’s how it works:</p><iframe src=\"https://tldr.ostera.io/tar\" width=\"100%\" height=\"500px\" style=\"border: 1px solid\"></iframe><p><strong>Installation</strong></p><p>As of now, our most mature client is the node.js one, which you can easily install from NPM:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ npm install -g tldr</code></pre></div></div>",
                "url": "http://localhost:4000/post/a-better-man-page-for-your-terminal,-tldr/",
                
                
                "categories": [2020,"linux","terminal","2020"],                
                
                "tags": ["2020,linux,terminal"],
                "date_published": "2020-01-25T00:00:00+00:00",
                "date_modified": "2020-01-25T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Prime OS an android based system for your laptop needs",
                "content_text": "A few months back I got me a cheap chinese laptop mostly for email, browsing the web, some light reading and watching some videos.The laptop came with windows, so the first thing I did was remove it and install Ubuntu. However, performance wise it wasn’t the best. So I tried Lubuntu, but then I found out about Prime OS.If you already use Android, you’ll love what you can do with PrimeOS. PrimeOS operating system gives a complete desktop experience similar to Windows, MacOS or even Çinux with access to millions of Android apps. It is designed to bring you the best of both worlds - a complete fusion of Android and PC.You install it just like any other Linux distro, just create a bootable USB stick and you’re good to go. Even has live option so you can try it before installing and check if it’s going to perform well on your machine.For my everyday laptop use it’s perfect, I already have all my documents on google docs. My main email account is a Google Apps account.",
                "content_html": "<p>A few months back I got me a cheap chinese laptop mostly for email, browsing the web, some light reading and watching some videos.</p><p>The laptop came with windows, so the first thing I did was remove it and install Ubuntu. However, performance wise it wasn’t the best. So I tried Lubuntu, but then I found out about Prime OS.</p><!--more--><p>If you already use Android, you’ll love what you can do with PrimeOS. PrimeOS operating system gives a complete desktop experience similar to Windows, MacOS or even Çinux with access to millions of Android apps. It is designed to bring you the best of both worlds - a complete fusion of Android and PC.</p><p><img src=\"https://primeos.in/assets/homepage/One.png\" alt=\"Prime OS\" /></p><p>You install it just like any other Linux distro, just create a bootable USB stick and you’re good to go. Even has live option so you can try it before installing and check if it’s going to perform well on your machine.</p><p>For my everyday laptop use it’s perfect, I already have all my documents on google docs. My main email account is a Google Apps account.</p>",
                "url": "http://localhost:4000/post/prime-os-an-android-based-system-for-your-laptop-needs/",
                
                
                "categories": [2019,"android","laptop","linux","primeOS","2019"],                
                
                "tags": ["2019,android,laptop,linux,primeOS"],
                "date_published": "2019-03-17T00:00:00+00:00",
                "date_modified": "2019-03-17T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "git refusing to merge unrelated histories",
                "content_text": "One of the things that happens to me a lot is when I start a new project on my computer that someone else started on our main repo  is this error saying that I’m trying to merge unrelated histories.This happens mostly because someone on the other side already started the master and develop branch and made some commits to it.However what I normally do is:$ git init$ git flow init$ git remote add origin [insert url here]$ git pull origin developThis is when everything turns to shit and I get the following output:$ fatal: refusing to merge unrelated histories$ Error redoing merge 1234deadbeef1234deadbeefHowever this is quite easy to solve. All you have to do is shove a –allow-unrelated-histories into your pull command. Like so:$ git pull origin develop --allow-unrelated-historiesThis will also work if you’re trying to merge or rebase code.",
                "content_html": "<p>One of the things that happens to me a lot is when I start a new project on my computer that someone else started on our main repo  is this error saying that I’m trying to merge unrelated histories.</p><p>This happens mostly because someone on the other side already started the master and develop branch and made some commits to it.</p><!--more--><p>However what I normally do is:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ git init$ git flow init$ git remote add origin [insert url here]$ git pull origin develop</code></pre></div></div><p>This is when everything turns to shit and I get the following output:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ fatal: refusing to merge unrelated histories$ Error redoing merge 1234deadbeef1234deadbeef</code></pre></div></div><p>However this is quite easy to solve. All you have to do is shove a <em>–allow-unrelated-histories</em> into your pull command. Like so:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ git pull origin develop --allow-unrelated-histories</code></pre></div></div><p>This will also work if you’re trying to merge or rebase code.</p>",
                "url": "http://localhost:4000/post/git-refusing-to-merge-unrelated-histories/",
                
                
                "categories": [2019,"Git","git-flow","Version-control","2019"],                
                
                "tags": ["2019,Git,git-flow,Version-control"],
                "date_published": "2019-03-12T00:00:00+00:00",
                "date_modified": "2019-03-12T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "How to clean up your environment when using docker",
                "content_text": "After a few projects we all know that you can have a real mess on your rig. Specially when it comes to saving space. So how to do that?For this purpose you can use following command:$ docker system prune -aThis will give you the following output:WARNING! This will remove:\t\t- all stopped containers\t\t- all networks not used by at least one container\t\t- all images without at least one container associated to them\t\t- all build cacheAre you sure you want to continue? [y/N]You can be even a bit more hardcore and shove a -a command in there, that will remove everything, not just the images.If your purpose is just to force Docker to rebuild images without using cache then use following combination:$ docker system prune$ docker-compose build --no-cacheThen run up command as usual:$ docker-compose upStay clean!",
                "content_html": "<p>After a few projects we all know that you can have a real mess on your rig. Specially when it comes to saving space. So how to do that?</p><!--more--><p>For this purpose you can use following command:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ docker system prune -a</code></pre></div></div><p>This will give you the following output:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>WARNING! This will remove:\t\t- all stopped containers\t\t- all networks not used by at least one container\t\t- all images without at least one container associated to them\t\t- all build cacheAre you sure you want to continue? [y/N]</code></pre></div></div><p>You can be even a bit more hardcore and shove a <strong>-a</strong> command in there, that will remove everything, not just the images.</p><p>If your purpose is just to force Docker to rebuild images without using cache then use following combination:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ docker system prune$ docker-compose build --no-cache</code></pre></div></div><p>Then run up command as usual:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ docker-compose up</code></pre></div></div><p>Stay clean!</p>",
                "url": "http://localhost:4000/post/how-to-clean-up-your-environment-when-using-docker/",
                
                
                "categories": [2019,"docker","linux","Webdev","2019"],                
                
                "tags": ["2019,docker,linux,Webdev"],
                "date_published": "2019-03-10T00:00:00+00:00",
                "date_modified": "2019-03-10T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Getting started with Docker part 3 - Create your own lamp stack",
                "content_text": "Let’s work on the following scenario. You are a PHP developer and need a Lamp stack environment to work with.That means you need Linux, Apache, MariaDB or Mysql and PHP.So let’s get this show on the road and create our own lamp stack.First lets create a project forlder, this can be in any place you want.$ mkdir -p lamp-stack/DocumentRoot$ echo \"&lt;?php phpinfo(); ?&gt;\" &gt; lamp-stack/DocumentRoot/index.phpBasically your DocumentRoot will be your working environment. Now we must create two files, those will be placed on your root project folder.  docker-compose.yml  ./php-apache/DockerfileLet’s start with the docker-compose.yml file.version: '3'services:\tphp-apache:\t\tbuild:\t\t\tcontext: ./php-apache\t\tports:\t\t\t- 80:80\t\tvolumes:\t\t\t- ./DocumentRoot:/var/www/html\t\tlinks:\t\t\t- 'mysql'\tmysql:\t\timage: mysql\t\tvolumes:\t\t\t- ./db:/var/lib/mysql\t\tcommand: --default-authentication-plugin=mysql_native_password\t\trestart: always\t\tports:\t\t\t- 3306:3306\t\tenvironment:\t\t\tMYSQL_ROOT_PASSWORD: root1st line we need to define the sintax version we’re working with.2nd We have the list of our services. These are php-apache and mysql (you can name these however you want).For the “php-apache” we have 3 items, build (where we reference the folder php-apache where the dockerfile is);Ports basically telling it to map your port 80 to the exact same port inside the docker container.Volumes, this is where we map our own projecto folder to the docker container one.Links, this basically tells it to run the second service as a dependent one from the php-apache.The mysql is basically a direct copy from the https://hub.docker.com you should really get familiar with this service.Finally our dockerfile. This has all the comands you want to run for your php environment.FROM php:7.2.1-apacheMAINTAINER egidio docileRUN docker-php-ext-install pdo pdo_mysql mysqliRUN a2enmod rewriteFirs we define our php version (this can be whatever you want to work with). The maintainer of it and then the list of php extensions we need. You can add as many as you like.Here’s your final folder structure:All you need to do now is start your docker container. You do this by going inside your project folder and running the following command.$ sudo docker-compose upThe first time you do it, this may take a while.Now to access your project just go to http://localhost. And to access your mysql server just connect as usual using your application of choice.",
                "content_html": "<p>Let’s work on the following scenario. You are a PHP developer and need a Lamp stack environment to work with.</p><p>That means you need Linux, Apache, MariaDB or Mysql and PHP.</p><p>So let’s get this show on the road and create our own lamp stack.</p><!--more--><p>First lets create a project forlder, this can be in any place you want.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ mkdir -p lamp-stack/DocumentRoot$ echo \"&lt;?php phpinfo(); ?&gt;\" &gt; lamp-stack/DocumentRoot/index.php</code></pre></div></div><p>Basically your DocumentRoot will be your working environment. Now we must create two files, those will be placed on your root project folder.</p><ul>  <li>docker-compose.yml</li>  <li>./php-apache/Dockerfile</li></ul><p>Let’s start with the docker-compose.yml file.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>version: '3'services:\tphp-apache:\t\tbuild:\t\t\tcontext: ./php-apache\t\tports:\t\t\t- 80:80\t\tvolumes:\t\t\t- ./DocumentRoot:/var/www/html\t\tlinks:\t\t\t- 'mysql'\tmysql:\t\timage: mysql\t\tvolumes:\t\t\t- ./db:/var/lib/mysql\t\tcommand: --default-authentication-plugin=mysql_native_password\t\trestart: always\t\tports:\t\t\t- 3306:3306\t\tenvironment:\t\t\tMYSQL_ROOT_PASSWORD: root</code></pre></div></div><p>1st line we need to define the sintax version we’re working with.2nd We have the list of our services. These are php-apache and mysql (you can name these however you want).</p><p>For the “php-apache” we have 3 items, <strong>build</strong> (where we reference the folder php-apache where the dockerfile is);</p><p><strong>Ports</strong> basically telling it to map your port 80 to the exact same port inside the docker container.</p><p><strong>Volumes</strong>, this is where we map our own projecto folder to the docker container one.</p><p><strong>Links</strong>, this basically tells it to run the second service as a dependent one from the php-apache.</p><p>The mysql is basically a direct copy from the <a href=\"https://hub.docker.com/_/mysql\">https://hub.docker.com</a> you should really get familiar with this service.</p><p>Finally our dockerfile. This has all the comands you want to run for your php environment.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>FROM php:7.2.1-apacheMAINTAINER egidio docileRUN docker-php-ext-install pdo pdo_mysql mysqliRUN a2enmod rewrite</code></pre></div></div><p>Firs we define our php version (this can be whatever you want to work with). The maintainer of it and then the list of php extensions we need. You can add as many as you like.</p><p>Here’s your final folder structure:</p><p><img src=\"https://i.imgur.com/4MxbwGV.png\" alt=\"Folder structure\" /></p><p>All you need to do now is start your docker container. You do this by going inside your project folder and running the following command.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo docker-compose up</code></pre></div></div><p>The first time you do it, this may take a while.</p><p>Now to access your project just go to http://localhost. And to access your mysql server just connect as usual using your application of choice.</p>",
                "url": "http://localhost:4000/post/getting-started-with-docker-part-3-create-your-own-lamp-stack/",
                
                
                "categories": ["docker"],                
                
                "tags": ["docker"],
                "date_published": "2019-03-10T00:00:00+00:00",
                "date_modified": "2019-03-10T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "How to use vanilla gnome session in Ubuntu 18.04",
                "content_text": "Gnome if basically my favourite desktop environment, since I moved away from Mac OS and started using Linux full time I tried a lot of flavours. But always ended up back into gnome.However, I never really liked the Ubuntu implementation of it. I always preffer the vanilla version. But Ubuntu its still my favourite distribution so how to get both?To get that vanilla gnome experience, open a terminal and enter the following line:$ sudo snap remove gnome-3-26-1604 gnome-calculator gnome-characters gnome-logs gnome-system-monitorYou’ll be asked for your password and after the process is complete you should run the following:$ sudo apt install gnome-sessionAfter this step you want to reboot your system. Then at the login screen, click on the small gear icon and select “Gnome on Xorg” to get to the vanilla session.After that you need to run the following:$ sudo apt install vanilla-gnome-desktop vanilla-gnome-default-settingsThis might take a while, but after all these packages are installed you need to reboot once more.Once you login you’re now in the default gnome session.",
                "content_html": "<p>Gnome if basically my favourite desktop environment, since I moved away from Mac OS and started using Linux full time I tried a lot of flavours. But always ended up back into gnome.</p><p>However, I never really liked the Ubuntu implementation of it. I always preffer the vanilla version. But Ubuntu its still my favourite distribution so how to get both?</p><p>To get that vanilla gnome experience, open a terminal and enter the following line:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo snap remove gnome-3-26-1604 gnome-calculator gnome-characters gnome-logs gnome-system-monitor</code></pre></div></div><p>You’ll be asked for your password and after the process is complete you should run the following:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo apt install gnome-session</code></pre></div></div><p>After this step you want to reboot your system. Then at the login screen, click on the small gear icon and select “Gnome on Xorg” to get to the vanilla session.</p><p>After that you need to run the following:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo apt install vanilla-gnome-desktop vanilla-gnome-default-settings</code></pre></div></div><p>This might take a while, but after all these packages are installed you need to reboot once more.</p><p>Once you login you’re now in the default gnome session.</p>",
                "url": "http://localhost:4000/post/how-to-use-vanilla-gnome-session-in-ubuntu-18.04/",
                
                
                "categories": [2019,"desktop environment","gnome","linux","ubuntu","2019"],                
                
                "tags": ["2019,desktop environment,gnome,linux,ubuntu"],
                "date_published": "2019-03-09T00:00:00+00:00",
                "date_modified": "2019-03-09T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Conky the light-weight system monitor for X",
                "content_text": "Conky can display more than 300 built-in objects, including support for:            A plethora of OS stats (uname, uptime, CPU usage, mem usage, disk usage, “top” like process stats, and network monitoring, just to name a few).                  Built-in IMAP and POP3 support.                  Built-in support for many popular music players (MPD, XMMS2, Audacious).                  Can be extended using built-in Lua support, or any of your own scripts and programs (more).                  Built-in Imlib2 and Cairo bindings for arbitrary drawing with Lua (more).                  Runs on Linux, FreeBSD, OpenBSD, DragonFlyBSD, NetBSD, Solaris, Haiku OS, and macOS!      … and much much more.Conky can display information either as text, or using simple progress bars and graph widgets, with different fonts and colours.Having said this lets install the thing and get it going.$ sudo apt-get update$ sudo apt-get install conky-allYou might want to install sensorr, curl and hddtemp.$ sudo apt-get install conky curl lm-sensors hddtempCreate a config file.$ touch ~/.conkyAll that is left is to just shove your config file in there. Here’s mine!conky.config = {\tupdate_interval = 1,\tcpu_avg_samples = 2,\tnet_avg_samples = 2,\tout_to_console = false,\toverride_utf8_locale = true,\tdouble_buffer = true,\tno_buffers = true,\ttext_buffer_size = 32768,\timlib_cache_size = 0,\town_window = true,\town_window_type = 'normal',\town_window_argb_visual = true,\town_window_argb_value = 50,\town_window_hints = 'undecorated,below,sticky,skip_taskbar,skip_pager',\tborder_inner_margin = 5,\tborder_outer_margin = 0,\txinerama_head = 1,\talignment = 'bottom_right',\tgap_x = -1920,\tgap_y = 0,\tdraw_shades = false,\tdraw_outline = false,\tdraw_borders = false,\tdraw_graph_borders = false,\tuse_xft = true,\tfont = 'Ubuntu Mono:size=12',\txftalpha = 0.8,\tuppercase = false,\tdefault_color = 'white',\town_window_colour = '#000000',\tminimum_width = 300, minimum_height = 1035,\talignment = 'top_right',};conky.text = [[${time %H:%M:%S}${alignr}${time %d-%m-%y}${voffset -16}${font sans-serif:bold:size=18}${alignc}${time %H:%M}${font}${voffset 4}${alignc}${time %A %B %d, %Y}${font}${voffset -4}${font sans-serif:bold:size=10}SYSTEM ${hr 2}${font sans-serif:normal:size=8}$sysname $kernel $alignr $machineHost:$alignr$nodenameUptime:$alignr$uptimeFile System: $alignr${fs_type}Processes: $alignr ${execi 1000 ps aux | wc -l}${font sans-serif:bold:size=10}CPU ${hr 2}${font sans-serif:normal:size=8}${execi 1000 grep model /proc/cpuinfo | cut -d : -f2 | tail -1 | sed 's/\\s//'}${font sans-serif:normal:size=8}${cpugraph cpu1}CPU: ${cpu cpu1}% ${cpubar cpu1}${font sans-serif:bold:size=10}MEMORY ${hr 2}${font sans-serif:normal:size=8}RAM $alignc $mem / $memmax $alignr $memperc%$membarSWAP $alignc ${swap} / ${swapmax} $alignr ${swapperc}%${swapbar}${font sans-serif:bold:size=10}DISK USAGE ${hr 2}${font sans-serif:normal:size=8}/ $alignc ${fs_used /} / ${fs_size /} $alignr ${fs_used_perc /}%${fs_bar /}${font Ubuntu:bold:size=10}NETWORK ${hr 2}${font sans-serif:normal:size=8}Local IPs:${alignr}External IP:${execi 1000 ip a | grep inet | grep -vw lo | grep -v inet6 | cut -d \\/ -f1 | sed 's/[^0-9\\.]*//g'}  ${alignr}${execi 1000  wget -q -O- http://ipecho.net/plain; echo}${font sans-serif:normal:size=8}Down: ${downspeed enp0s3}  ${alignr}Up: ${upspeed enp0s3}${color lightgray}${downspeedgraph enp0s3 80,130 } ${alignr}${upspeedgraph enp0s3 80,130 }$color${font sans-serif:bold:size=10}TOP PROCESSES ${hr 2}${font sans-serif:normal:size=8}Name $alignr PID   CPU%   MEM%${font sans-serif:normal:size=8}${top name 1} $alignr ${top pid 1} ${top cpu 1}% ${top mem 1}%${top name 2} $alignr ${top pid 2} ${top cpu 2}% ${top mem 2}%${top name 3} $alignr ${top pid 3} ${top cpu 3}% ${top mem 3}%${top name 4} $alignr ${top pid 4} ${top cpu 4}% ${top mem 4}%${top name 5} $alignr ${top pid 5} ${top cpu 5}% ${top mem 5}%${top name 6} $alignr ${top pid 6} ${top cpu 6}% ${top mem 6}%${top name 7} $alignr ${top pid 7} ${top cpu 7}% ${top mem 7}%${top name 8} $alignr ${top pid 8} ${top cpu 8}% ${top mem 8}%${top name 9} $alignr ${top pid 9} ${top cpu 9}% ${top mem 9}%${top name 10} $alignr ${top pid 10} ${top cpu 10}% ${top mem 10}%]];Here’s how that looks.",
                "content_html": "<p>Conky can display more than 300 built-in objects, including support for:</p><ul>  <li>    <blockquote>      <p>A plethora of OS stats (uname, uptime, CPU usage, mem usage, disk usage, “top” like process stats, and network monitoring, just to name a few).</p>    </blockquote>  </li>  <li>    <blockquote>      <p>Built-in IMAP and POP3 support.</p>    </blockquote>  </li>  <li>    <blockquote>      <p>Built-in support for many popular music players (MPD, XMMS2, Audacious).</p>    </blockquote>  </li>  <li>    <blockquote>      <p>Can be extended using built-in Lua support, or any of your own scripts and programs (more).</p>    </blockquote>  </li>  <li>    <blockquote>      <p>Built-in Imlib2 and Cairo bindings for arbitrary drawing with Lua (more).</p>    </blockquote>  </li>  <li>    <blockquote>      <p>Runs on Linux, FreeBSD, OpenBSD, DragonFlyBSD, NetBSD, Solaris, Haiku OS, and macOS!</p>    </blockquote>  </li></ul><!--more--><p>… and much much more.</p><p>Conky can display information either as text, or using simple progress bars and graph widgets, with different fonts and colours.</p><p>Having said this lets install the thing and get it going.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo apt-get update$ sudo apt-get install conky-all</code></pre></div></div><p>You might want to install sensorr, curl and hddtemp.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo apt-get install conky curl lm-sensors hddtemp</code></pre></div></div><p>Create a config file.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ touch ~/.conky</code></pre></div></div><p>All that is left is to just shove your config file in there. Here’s mine!</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>conky.config = {\tupdate_interval = 1,\tcpu_avg_samples = 2,\tnet_avg_samples = 2,\tout_to_console = false,\toverride_utf8_locale = true,\tdouble_buffer = true,\tno_buffers = true,\ttext_buffer_size = 32768,\timlib_cache_size = 0,\town_window = true,\town_window_type = 'normal',\town_window_argb_visual = true,\town_window_argb_value = 50,\town_window_hints = 'undecorated,below,sticky,skip_taskbar,skip_pager',\tborder_inner_margin = 5,\tborder_outer_margin = 0,\txinerama_head = 1,\talignment = 'bottom_right',\tgap_x = -1920,\tgap_y = 0,\tdraw_shades = false,\tdraw_outline = false,\tdraw_borders = false,\tdraw_graph_borders = false,\tuse_xft = true,\tfont = 'Ubuntu Mono:size=12',\txftalpha = 0.8,\tuppercase = false,\tdefault_color = 'white',\town_window_colour = '#000000',\tminimum_width = 300, minimum_height = 1035,\talignment = 'top_right',};conky.text = [[${time %H:%M:%S}${alignr}${time %d-%m-%y}${voffset -16}${font sans-serif:bold:size=18}${alignc}${time %H:%M}${font}${voffset 4}${alignc}${time %A %B %d, %Y}${font}${voffset -4}${font sans-serif:bold:size=10}SYSTEM ${hr 2}${font sans-serif:normal:size=8}$sysname $kernel $alignr $machineHost:$alignr$nodenameUptime:$alignr$uptimeFile System: $alignr${fs_type}Processes: $alignr ${execi 1000 ps aux | wc -l}${font sans-serif:bold:size=10}CPU ${hr 2}${font sans-serif:normal:size=8}${execi 1000 grep model /proc/cpuinfo | cut -d : -f2 | tail -1 | sed 's/\\s//'}${font sans-serif:normal:size=8}${cpugraph cpu1}CPU: ${cpu cpu1}% ${cpubar cpu1}${font sans-serif:bold:size=10}MEMORY ${hr 2}${font sans-serif:normal:size=8}RAM $alignc $mem / $memmax $alignr $memperc%$membarSWAP $alignc ${swap} / ${swapmax} $alignr ${swapperc}%${swapbar}${font sans-serif:bold:size=10}DISK USAGE ${hr 2}${font sans-serif:normal:size=8}/ $alignc ${fs_used /} / ${fs_size /} $alignr ${fs_used_perc /}%${fs_bar /}${font Ubuntu:bold:size=10}NETWORK ${hr 2}${font sans-serif:normal:size=8}Local IPs:${alignr}External IP:${execi 1000 ip a | grep inet | grep -vw lo | grep -v inet6 | cut -d \\/ -f1 | sed 's/[^0-9\\.]*//g'}  ${alignr}${execi 1000  wget -q -O- http://ipecho.net/plain; echo}${font sans-serif:normal:size=8}Down: ${downspeed enp0s3}  ${alignr}Up: ${upspeed enp0s3}${color lightgray}${downspeedgraph enp0s3 80,130 } ${alignr}${upspeedgraph enp0s3 80,130 }$color${font sans-serif:bold:size=10}TOP PROCESSES ${hr 2}${font sans-serif:normal:size=8}Name $alignr PID   CPU%   MEM%${font sans-serif:normal:size=8}${top name 1} $alignr ${top pid 1} ${top cpu 1}% ${top mem 1}%${top name 2} $alignr ${top pid 2} ${top cpu 2}% ${top mem 2}%${top name 3} $alignr ${top pid 3} ${top cpu 3}% ${top mem 3}%${top name 4} $alignr ${top pid 4} ${top cpu 4}% ${top mem 4}%${top name 5} $alignr ${top pid 5} ${top cpu 5}% ${top mem 5}%${top name 6} $alignr ${top pid 6} ${top cpu 6}% ${top mem 6}%${top name 7} $alignr ${top pid 7} ${top cpu 7}% ${top mem 7}%${top name 8} $alignr ${top pid 8} ${top cpu 8}% ${top mem 8}%${top name 9} $alignr ${top pid 9} ${top cpu 9}% ${top mem 9}%${top name 10} $alignr ${top pid 10} ${top cpu 10}% ${top mem 10}%]];</code></pre></div></div><p>Here’s how that looks.</p><p><img src=\"https://i.imgur.com/AxPFRyI.jpg\" alt=\"Conky\" /></p>",
                "url": "http://localhost:4000/post/conky-the-light-weight-system-monitor-for-x/",
                
                
                "categories": [2019,"linux","ubuntu","2019"],                
                
                "tags": ["2019,linux,ubuntu"],
                "date_published": "2019-01-31T00:00:00+00:00",
                "date_modified": "2019-01-31T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "What is Git LFS?",
                "content_text": "I rarely use a Git UI. I mostly use within my text editor or in terminal. However when I do, I use gitkraken. I actually used source tree for a long time but ever since I moved to Linux this is my number one choice. Anyhow, this week I got a newsletter from the guys a gitkraken talking about LFS and I decided to show you guys what it’s used for.Git LFS stands for Large File Storage and is a tool many developers use to save space when working with binary files.Here’s a small video explaining the concept and how to use it in gitkraken.If you never used gitkraken I really recomend you give it a go.",
                "content_html": "<p>I rarely use a Git UI. I mostly use within my text editor or in terminal. However when I do, I use gitkraken. I actually used source tree for a long time but ever since I moved to Linux this is my number one choice. Anyhow, this week I got a newsletter from the guys a gitkraken talking about LFS and I decided to show you guys what it’s used for.</p><!--more--><p>Git LFS stands for Large File Storage and is a tool many developers use to save space when working with binary files.</p><p>Here’s a small video explaining the concept and how to use it in gitkraken.</p><iframe width=\"100%\" height=\"320px\" src=\"https://www.youtube.com/embed/S03EEusFxoI\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen=\"\"></iframe><p>If you never used <a href=\"https://www.gitkraken.com/\">gitkraken</a> I really recomend you give it a go.</p>",
                "url": "http://localhost:4000/post/what-is-git-lfs/",
                
                
                "categories": [2019,"Git","gitkraken","linux","2019"],                
                
                "tags": ["2019,Git,gitkraken,linux"],
                "date_published": "2019-01-19T00:00:00+00:00",
                "date_modified": "2019-01-19T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Tired of signatures that can't be verified when running apt-get update?",
                "content_text": "If everytime you run sudo apt-get update   you get the following error “Err:14 URL HERE The following signatures couldn’t be verified because the public key is not available: NO_PUBKEY PUBLIC_KEY_HERE” and like me you want to fix that. Don’t worry, I got your back.I got this error with the ppa related to the vivaldi browser, so my error was like this:Err:14 http://repo.vivaldi.com/stable/deb stable Release.gpg The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 8D04CE49EFB20B23The fixBy far the simplest way to handle this now is with Y-PPA-Manager (which now integrates the launchpad-getkeys script with a graphical interface).To install it, first add the webupd8 repository for this program:$ sudo add-apt-repository ppa:webupd8team/y-ppa-managerUpdate your software list and install Y-PPA-Manager:$ sudo apt-get update$ sudo apt-get install y-ppa-managerRun y-ppa-manager (i.e. type y-ppa-manager then press enter key).When the main y-ppa-manager window appears, click on “Advanced.”From the list of advanced tasks, select “Try to import all missing GPG keys” and click OK.You’re done! As the warning dialog says when you start the operation, it may take quite a while (about 30 seconds for me) depending on how many PPA’s you have and the speed of your connection.",
                "content_html": "<p>If everytime you run <em>sudo apt-get update</em>   you get the following error “Err:14 URL HERE The following signatures couldn’t be verified because the public key is not available: NO_PUBKEY PUBLIC_KEY_HERE” and like me you want to fix that. Don’t worry, I got your back.</p><!--more--><p>I got this error with the ppa related to the vivaldi browser, so my error was like this:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Err:14 http://repo.vivaldi.com/stable/deb stable Release.gpg The following signatures couldn't be verified because the public key is not available: NO_PUBKEY 8D04CE49EFB20B23</code></pre></div></div><p>The fix</p><p>By far the simplest way to handle this now is with Y-PPA-Manager (which now integrates the launchpad-getkeys script with a graphical interface).</p><p>To install it, first add the webupd8 repository for this program:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo add-apt-repository ppa:webupd8team/y-ppa-manager</code></pre></div></div><p>Update your software list and install Y-PPA-Manager:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo apt-get update$ sudo apt-get install y-ppa-manager</code></pre></div></div><p>Run y-ppa-manager (i.e. type y-ppa-manager then press enter key).</p><p>When the main y-ppa-manager window appears, click on “Advanced.”</p><p>From the list of advanced tasks, select “Try to import all missing GPG keys” and click OK.</p><p>You’re done! As the warning dialog says when you start the operation, it may take quite a while (about 30 seconds for me) depending on how many PPA’s you have and the speed of your connection.</p>",
                "url": "http://localhost:4000/post/tired-of-signatures-that-cant-be-verified-when-running-apt-get-update/",
                
                
                "categories": [2019,"apt-get","linux","ppa","snap","2019"],                
                
                "tags": ["2019,apt-get,linux,ppa,snap"],
                "date_published": "2019-01-17T00:00:00+00:00",
                "date_modified": "2019-01-17T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Getting started with Docker part 2 - Install Docker Compose",
                "content_text": "You can run Compose on macOS, Windows, and 64-bit Linux.Docker Compose relies on Docker Engine for any meaningful work, so make sure you have Docker Engine installed either locally or remote, depending on your setup.On Linux systems, first install the Docker for your OS as described on the Get Docker page, then come back here for instructions on installing Compose on Linux systems.To run Compose as a non-root user, see Manage Docker as a non-root user.On Linux, you can download the Docker Compose binary from the Compose repository release page on GitHub. Follow the instructions from the link, which involve running the curl command in your terminal to download the binaries. These step by step instructions are also included below.Run this command to download the latest version of Docker Compose:sudo curl -L \"https://github.com/docker/compose/releases/download/1.23.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-composeApply executable permissions to the binary:sudo chmod +x /usr/local/bin/docker-composeOptionally, install command completion for the bash and zsh shell.I use zsh so here’s what to do:Place the completion script in your /path/to/zsh/completion (typically ~/.zsh/completion/):mkdir -p ~/.zsh/completion$ curl -L https://raw.githubusercontent.com/docker/compose/1.23.2/contrib/completion/zsh/_docker-compose &gt; ~/.zsh/completion/_docker-composeInclude the directory in your $fpath by adding in ~/.zshrc:fpath=(~/.zsh/completion $fpath)Make sure compinit is loaded or do it by adding in ~/.zshrc:autoload -Uz compinit &amp;&amp; compinit -iThen reload your shell:exec $SHELL -lAvailable completionsDepending on what you typed on the command line so far, it completes:Available docker-compose commands            Options that are available for a particular command                  Service names that make sense in a given context, such as services with running or stopped instances or services based on images vs. services based on Dockerfiles. For docker-compose scale, completed service names automatically have “=” appended.                  Arguments for selected options. For example, docker-compose kill -s completes some signals like SIGHUP and SIGUSR1.                  Enjoy working with Compose faster and with fewer typos!      Test the installation.$ docker-compose --versiondocker-compose version 1.23.2, build 1110ad01Docker documentation for reference.",
                "content_html": "<p>You can run Compose on macOS, Windows, and 64-bit Linux.</p><p>Docker Compose relies on Docker Engine for any meaningful work, so make sure you have Docker Engine installed either locally or remote, depending on your setup.</p><p>On Linux systems, first install the Docker for your OS as described on the Get Docker page, then come back here for instructions on installing Compose on Linux systems.</p><!--more--><p>To run Compose as a non-root user, see <a href=\"https://docs.docker.com/install/linux/linux-postinstall/\">Manage Docker as a non-root user</a>.</p><p>On Linux, you can download the Docker Compose binary from the Compose repository release page on GitHub. Follow the instructions from the link, which involve running the curl command in your terminal to download the binaries. These step by step instructions are also included below.</p><p>Run this command to download the latest version of Docker Compose:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>sudo curl -L \"https://github.com/docker/compose/releases/download/1.23.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose</code></pre></div></div><p>Apply executable permissions to the binary:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>sudo chmod +x /usr/local/bin/docker-compose</code></pre></div></div><p>Optionally, install command completion for the bash and zsh shell.</p><p>I use zsh so here’s what to do:</p><p>Place the completion script in your /path/to/zsh/completion (typically ~/.zsh/completion/):</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>mkdir -p ~/.zsh/completion$ curl -L https://raw.githubusercontent.com/docker/compose/1.23.2/contrib/completion/zsh/_docker-compose &gt; ~/.zsh/completion/_docker-compose</code></pre></div></div><p>Include the directory in your $fpath by adding in ~/.zshrc:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>fpath=(~/.zsh/completion $fpath)</code></pre></div></div><p>Make sure compinit is loaded or do it by adding in ~/.zshrc:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>autoload -Uz compinit &amp;&amp; compinit -i</code></pre></div></div><p>Then reload your shell:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>exec $SHELL -l</code></pre></div></div><p><strong>Available completions</strong></p><p>Depending on what you typed on the command line so far, it completes:</p><p><strong>Available docker-compose commands</strong></p><ul>  <li>    <ul>      <li>Options that are available for a particular command</li>    </ul>  </li>  <li>    <ul>      <li>Service names that make sense in a given context, such as services with running or stopped instances or services based on images vs. services based on Dockerfiles. For docker-compose scale, completed service names automatically have “=” appended.</li>    </ul>  </li>  <li>    <ul>      <li>Arguments for selected options. For example, docker-compose kill -s completes some signals like SIGHUP and SIGUSR1.</li>    </ul>  </li>  <li>    <ul>      <li>Enjoy working with Compose faster and with fewer typos!</li>    </ul>  </li></ul><p><strong>Test the installation.</strong></p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ docker-compose --versiondocker-compose version 1.23.2, build 1110ad01</code></pre></div></div><p><a href=\"https://docs.docker.com/\">Docker documentation</a> for reference.</p>",
                "url": "http://localhost:4000/post/getting-started-with-docker-part-2-install-docker-compose/",
                
                
                "categories": [2019,"docker","linux","2019"],                
                
                "tags": ["2019,docker,linux"],
                "date_published": "2019-01-15T00:00:00+00:00",
                "date_modified": "2019-01-15T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "How to get started with Docker part 1 - Installing Docker",
                "content_text": "Yes, I know! Everyone has been using docker for the last few years but I’m late on that hype train. At work we’re still using vagrant like assholes, that’s my own fault really. I decided to dip my dick into that docker pool and blog the entire process. Here’s the first part.I’m using Ubuntu now. So the docs for it is right here.1. Uninstall old versionsOlder versions of Docker were called docker or docker-engine. If these are installed, uninstall them:$ sudo apt-get remove docker docker-engine docker.io containerd runc2. Setup the repositoryUpdate the apt package index:$ sudo apt-get updateInstall packages to allow apt to use a repository over HTTPS:$ sudo apt-get install \\    apt-transport-https \\    ca-certificates \\    curl \\    software-properties-commonAdd Docker’s official GPG key:$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -Verify that you now have the key with the fingerprint 9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88, by searching for the last 8 characters of the fingerprint.$ sudo apt-key fingerprint 0EBFCD88pub   4096R/0EBFCD88 2017-02-22      Key fingerprint = 9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88uid                  Docker Release (CE deb) &lt;docker@docker.com&gt;sub   4096R/F273FCD8 2017-02-22Use the following command to set up the stable repository. You always need the stable repository, even if you want to install builds from the edge or test repositories as well. To add the edge or test repository, add the word edge or test (or both) after the word stable in the commands below.Note: The lsb_release -cs sub-command below returns the name of your Ubuntu distribution, such as xenial. Sometimes, in a distribution like Linux Mint, you might need to change $(lsb_release -cs) to your parent Ubuntu distribution. For example, if you are using Linux Mint Rafaela, you could use trusty.$ sudo add-apt-repository \\   \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\   $(lsb_release -cs) \\   stable\"3. Install Docker CEUpdate the apt package index.$ sudo apt-get updateInstall the latest version of Docker CE, or go to the next step to install a specific version:$ sudo apt-get install docker-ceNow, let’s just test if everything is working as it should.Verify that Docker CE is installed correctly by running the hello-world image.$ sudo docker container run hello-worldThis should be your output.Unable to find image 'hello-world:latest' locallylatest: Pulling from library/hello-world1b930d010525: Pull completeDigest: sha256:2557e3c07ed1e38f26e389462d03ed943586f744621577a99efb77324b0fe535Status: Downloaded newer image for hello-world:latestHello from Docker!This message shows that your installation appears to be working correctly.To generate this message, Docker took the following steps: 1. The Docker client contacted the Docker daemon. 2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.    (amd64) 3. The Docker daemon created a new container from that image which runs the    executable that produces the output you are currently reading. 4. The Docker daemon streamed that output to the Docker client, which sent it    to your terminal.To try something more ambitious, you can run an Ubuntu container with: $ docker run -it ubuntu bashShare images, automate workflows, and more with a free Docker ID: https://hub.docker.com/For more examples and ideas, visit: https://docs.docker.com/get-started/On the next article we’re going to look into installing Docker compose.Docker documentation for reference.",
                "content_html": "<p>Yes, I know! Everyone has been using docker for the last few years but I’m late on that hype train. At work we’re still using vagrant like assholes, that’s my own fault really. I decided to dip my dick into that docker pool and blog the entire process. Here’s the first part.</p><!--more--><p>I’m using Ubuntu now. So the docs for it is right <a href=\"https://docs.docker.com/install/linux/docker-ce/ubuntu/\">here</a>.</p><p><strong>1. Uninstall old versions</strong></p><p>Older versions of Docker were called docker or docker-engine. If these are installed, uninstall them:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo apt-get remove docker docker-engine docker.io containerd runc</code></pre></div></div><p><strong>2. Setup the repository</strong></p><p>Update the apt package index:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo apt-get update</code></pre></div></div><p>Install packages to allow apt to use a repository over HTTPS:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo apt-get install \\    apt-transport-https \\    ca-certificates \\    curl \\    software-properties-common</code></pre></div></div><p>Add Docker’s official GPG key:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</code></pre></div></div><p>Verify that you now have the key with the fingerprint 9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88, by searching for the last 8 characters of the fingerprint.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo apt-key fingerprint 0EBFCD88pub   4096R/0EBFCD88 2017-02-22      Key fingerprint = 9DC8 5822 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88uid                  Docker Release (CE deb) &lt;docker@docker.com&gt;sub   4096R/F273FCD8 2017-02-22</code></pre></div></div><p>Use the following command to set up the stable repository. You always need the stable repository, even if you want to install builds from the edge or test repositories as well. To add the edge or test repository, add the word edge or test (or both) after the word stable in the commands below.</p><p>Note: The lsb_release -cs sub-command below returns the name of your Ubuntu distribution, such as xenial. Sometimes, in a distribution like Linux Mint, you might need to change $(lsb_release -cs) to your parent Ubuntu distribution. For example, if you are using Linux Mint Rafaela, you could use trusty.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo add-apt-repository \\   \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\   $(lsb_release -cs) \\   stable\"</code></pre></div></div><p><strong>3. Install Docker CE</strong></p><p>Update the apt package index.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo apt-get update</code></pre></div></div><p>Install the latest version of Docker CE, or go to the next step to install a specific version:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo apt-get install docker-ce</code></pre></div></div><p>Now, let’s just test if everything is working as it should.</p><p>Verify that Docker CE is installed correctly by running the hello-world image.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo docker container run hello-world</code></pre></div></div><p>This should be your output.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Unable to find image 'hello-world:latest' locallylatest: Pulling from library/hello-world1b930d010525: Pull completeDigest: sha256:2557e3c07ed1e38f26e389462d03ed943586f744621577a99efb77324b0fe535Status: Downloaded newer image for hello-world:latestHello from Docker!This message shows that your installation appears to be working correctly.To generate this message, Docker took the following steps: 1. The Docker client contacted the Docker daemon. 2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.    (amd64) 3. The Docker daemon created a new container from that image which runs the    executable that produces the output you are currently reading. 4. The Docker daemon streamed that output to the Docker client, which sent it    to your terminal.To try something more ambitious, you can run an Ubuntu container with: $ docker run -it ubuntu bashShare images, automate workflows, and more with a free Docker ID: https://hub.docker.com/For more examples and ideas, visit: https://docs.docker.com/get-started/</code></pre></div></div><p>On the next article we’re going to look into installing Docker compose.</p><p><a href=\"https://docs.docker.com/\">Docker documentation</a> for reference.</p>",
                "url": "http://localhost:4000/post/how-to-get-started-with-docker/",
                
                
                "categories": [2019,"containers","docker","linux","ubuntu","2019"],                
                
                "tags": ["2019,containers,docker,linux,ubuntu"],
                "date_published": "2019-01-13T00:00:00+00:00",
                "date_modified": "2019-01-13T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Ulauncher the application luncher for Linux",
                "content_text": "Ever since I moved away from mac and started using Linux as my daily driver there’s been a few minor things that I miss obviously. One of the things is that I never really liked the default application launcher for ubuntu. I always loved the default one mac os has that has a lot of built in functionality. Or if you wanted more on mac you could even install Alfred and that was awesome too.So I looked a bit more and found out that you can have the exact same thin on Linux and its called Ulauncher.It was basic feature like:Fuzzy searchType in an application name without worrying about spelling. Ulauncher will figure out what you meant. It also remembers your previous choices and automatically selects the best option for you.Custom color themesUlauncher provides 4 themes built in. But if you need something different you can always create a custom color theme. Docs are here.Shortcuts &amp; extensionsImprove your workflow with customizable shortcuts and extensions. Create a shortcut for web search or your scripts or install a 3rd party extension.Fast directory browserBrowse files and directories with ease.  Type ~ or / to start. Press Alt+Enter to access an alt menu.Assuming you’re using debian you can just download the .deb file and install the thing.",
                "content_html": "<p>Ever since I moved away from mac and started using Linux as my daily driver there’s been a few minor things that I miss obviously. One of the things is that I never really liked the default application launcher for ubuntu. I always loved the default one mac os has that has a lot of built in functionality. Or if you wanted more on mac you could even install Alfred and that was awesome too.</p><p>So I looked a bit more and found out that you can have the exact same thin on Linux and its called Ulauncher.</p><!--more--><p><img src=\"https://ulauncher.io/assets/images/demo.gif\" alt=\"Uluncher demo\" /></p><p>It was basic feature like:</p><p><strong>Fuzzy search</strong></p><p>Type in an application name without worrying about spelling. Ulauncher will figure out what you meant. It also remembers your previous choices and automatically selects the best option for you.</p><p><strong>Custom color themes</strong></p><p>Ulauncher provides 4 themes built in. But if you need something different you can always <a href=\"https://gist.github.com/gornostal/02a232e6e560da7946c053555ced6cce\">create a custom color theme</a>. Docs are <a href=\"http://docs.ulauncher.io/en/latest/themes/themes.html\">here</a>.</p><p><strong>Shortcuts &amp; extensions</strong></p><p>Improve your workflow with customizable shortcuts and extensions. Create a shortcut for web search or your scripts or install a 3rd party extension.</p><p><strong>Fast directory browser</strong>Browse files and directories with ease.  Type ~ or / to start. Press Alt+Enter to access an alt menu.</p><p>Assuming you’re using debian you can just download the .deb file and install the thing.</p>",
                "url": "http://localhost:4000/post/ulauncher-the-application-luncher-for-linux/",
                
                
                "categories": [2018,"app","fuzzy search","linux","ubuntu","2018"],                
                
                "tags": ["2018,app,fuzzy search,linux,ubuntu"],
                "date_published": "2018-11-03T00:00:00+00:00",
                "date_modified": "2018-11-03T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Problems pairing Mazda 3 2017 model with Xiaomi ma2 Lite",
                "content_text": "A few weeks ago I bought me a new phone, the Xiaomi Ma2 Lite. Crazy good phone for the price. More on that here. However, I had a small problem with the phone that was actually driving me nuts. I couldn’t get it to recognize my car.Took me a week to solve this problem, tried almost everything. Soft reset on the phone, soft reset on the car. Hard reset on the phone. I even did a hard reset to the car infotaiment system. But still, my phone could see all my bluetooth devices at home without exeception. But my car? Nope!Then I came across this article on xda-developers. Basically what worked was this:  Enable developer options;  Go to Settings &gt; System &gt; Developer Options  Enble “Show Bluetooth devices without name”This way wen you want to connecto to a device you’ll be presented with the mac-address and not the device name. This worked like a charm.",
                "content_html": "<p>A few weeks ago I bought me a new phone, the Xiaomi Ma2 Lite. Crazy good phone for the price. More on that <a href=\"https://www.youtube.com/watch?v=ZSUWV7yBK8Q\">here</a>. However, I had a small problem with the phone that was actually driving me nuts. I couldn’t get it to recognize my car.</p><!--more--><p>Took me a week to solve this problem, tried almost everything. Soft reset on the phone, soft reset on the car. Hard reset on the phone. I even did a hard reset to the car infotaiment system. But still, my phone could see all my bluetooth devices at home without exeception. But my car? Nope!</p><p>Then I came across <a href=\"https://forum.xda-developers.com/mi-a2-lite/help/mi-a2-lite-bluetooth-wont-pair-car-t3828878\">this article</a> on xda-developers. Basically what worked was this:</p><ol>  <li>Enable developer options;</li>  <li>Go to Settings &gt; System &gt; Developer Options</li>  <li>Enble “Show Bluetooth devices without name”</li></ol><p>This way wen you want to connecto to a device you’ll be presented with the mac-address and not the device name. This worked like a charm.</p>",
                "url": "http://localhost:4000/post/problems-paring-mazda-3-2017-model-with-xiaomi-ma2-lite/",
                
                
                "categories": [2018,"android","bluetooth","ma2 lite","mazda 3","xiaomi","2018"],                
                
                "tags": ["2018,android,bluetooth,ma2 lite,mazda 3,xiaomi"],
                "date_published": "2018-11-03T00:00:00+00:00",
                "date_modified": "2018-11-03T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Javascript is basically cancer!",
                "content_text": "Most of us these days have loads of RAM to spare on our laptops and desktops. But do you remember a time when you had a computer just to do some web browsing and just 2GB of ram was what you needed?These days you have just a few tabs open on your browser and you can see the ram just going up and up.A good example on this is reddit. Reddit was a lightweight website (client side) but these days if you have a thread open and looking at the contents of your RAM you can see that the page alone claims around 236MB of data. The majority of it is objects that the various JS scripts on the webpage created long after the page was actually downloaded.I normally never have more than 15 chrome tabs open and this is what that looks.Websites are getting heavy and JS frameworks are a core problem of it. Turn off JavaScript in your browser and watch how quickly the RAM usage drops to near nothing, and that’s the core issue here. JavaScript has become this massive beast that just gets worse each year that goes by as devs pile more and more “features”. Just as a test I turned JavaScript off, opened 38 tabs (different news sites, tech companies like Apple/Microsoft/Dell… and a few programming sites python, w3, etc…) Total weight of Chome in RAM, ~650MB.To say JavaScript is getting out of hand really undersales the issue. JavaScript has reached nightmarishly abusive levels. Heck a lot of sites (imgur) won’t even do anything unless you turn on JavaScript and then when you do, the site by itself wrecks havoc with your RAM. To compound issues, some sites will load into memory eight different fuzzy fonts that’s specific to just that site that you are on, and the worst are when that font is used for at most 400 bytes worth of text. You are left saying to yourself, “Seriously website? You downloaded a 3.8MB font file and loaded into memory just so you could render 400 bytes in foo-foo font? You could have just made a 1.8KB jpeg for 100 different languages and loaded the one image or FFS all 100 images, and it would still be more lightweight than 3.8MB of font that I’ll more than likely never notice!”I’m not trying to make excuses for browsers, they ought to release resources a bit quicker or at least provide a slider that allows the user to make that call (because web browsers aren’t exactly sure if you’ll hit the back button or not, so it holds on to those resources for a good deal of time because reloading those resources could be a significant performance hit) and then sometimes folks get into the apologist stance and say, “well unused RAM is bad RAM.” But the bigger point folks should focus on is how absolutely insanely ginormous webpages have become, and the abusive JS frameworks that are massive and create 1000s of objects just to do a simple task is single handedly the biggest reason your web browser is eating RAM faster than Charlie Sheen can snort cocaine.Now I’m not saying that we should stick to website that are just plain text to cut on some ram. There’s use cases where that heavy usage of javascript is just amazing. Take a look at websites like Twitch, Netflix or even something like Google Drive.Do me a big favor, next time you just npm install the latest framework and all associated dependencies if you don’t understand the overhead and runtime consequences of implementing that code in an objectively shitty language you are basically ruining the web. It needs to be stripped back again. When your bundle.js ginormous you need to rethink your strategy.",
                "content_html": "<p>Most of us these days have loads of RAM to spare on our laptops and desktops. But do you remember a time when you had a computer just to do some web browsing and just 2GB of ram was what you needed?</p><p>These days you have just a few tabs open on your browser and you can see the ram just going up and up.</p><!--more--><p>A good example on this is reddit. Reddit was a lightweight website (client side) but these days if you have a thread open and looking at the contents of your RAM you can see that the page alone claims around 236MB of data. The majority of it is objects that the various JS scripts on the webpage created long after the page was actually downloaded.</p><p>I normally never have more than 15 chrome tabs open and this is what that looks.</p><p><img src=\"https://i.imgur.com/M8mG9BN.png\" alt=\"htop\" /></p><p>Websites are getting heavy and JS frameworks are a core problem of it. Turn off JavaScript in your browser and watch how quickly the RAM usage drops to near nothing, and that’s the core issue here. JavaScript has become this massive beast that just gets worse each year that goes by as devs pile more and more “features”. Just as a test I turned JavaScript off, opened 38 tabs (different news sites, tech companies like Apple/Microsoft/Dell… and a few programming sites python, w3, etc…) Total weight of Chome in RAM, ~650MB.</p><p>To say JavaScript is getting out of hand really undersales the issue. JavaScript has reached nightmarishly abusive levels. Heck a lot of sites (imgur) won’t even do anything unless you turn on JavaScript and then when you do, the site by itself wrecks havoc with your RAM. To compound issues, some sites will load into memory eight different fuzzy fonts that’s specific to just that site that you are on, and the worst are when that font is used for at most 400 bytes worth of text. You are left saying to yourself, “Seriously website? You downloaded a 3.8MB font file and loaded into memory just so you could render 400 bytes in foo-foo font? You could have just made a 1.8KB jpeg for 100 different languages and loaded the one image or FFS all 100 images, and it would still be more lightweight than 3.8MB of font that I’ll more than likely never notice!”</p><p>I’m not trying to make excuses for browsers, they ought to release resources a bit quicker or at least provide a slider that allows the user to make that call (because web browsers aren’t exactly sure if you’ll hit the back button or not, so it holds on to those resources for a good deal of time because reloading those resources could be a significant performance hit) and then sometimes folks get into the apologist stance and say, “well unused RAM is bad RAM.” But the bigger point folks should focus on is how absolutely insanely ginormous webpages have become, and the abusive JS frameworks that are massive and create 1000s of objects just to do a simple task is single handedly the biggest reason your web browser is eating RAM faster than Charlie Sheen can snort cocaine.</p><p>Now I’m not saying that we should stick to website that are just plain text to cut on some ram. There’s use cases where that heavy usage of javascript is just amazing. Take a look at websites like Twitch, Netflix or even something like Google Drive.</p><p>Do me a big favor, next time you just npm install the latest framework and all associated dependencies if you don’t understand the overhead and runtime consequences of implementing that code in an objectively shitty language you are basically ruining the web. It needs to be stripped back again. When your bundle.js ginormous you need to rethink your strategy.</p>",
                "url": "http://localhost:4000/post/javascript-is-basically-cancer/",
                
                
                "categories": [2018,"cancer","chrome","internet","javascript","2018"],                
                
                "tags": ["2018,cancer,chrome,internet,javascript"],
                "date_published": "2018-09-11T00:00:00+01:00",
                "date_modified": "2018-09-11T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Custumize your grub with Grub Customizer",
                "content_text": "For those who need to modify the default Grub boot-loader settings, Grub Customizer is a useful tool with a graphical user interface.Main features:  Move, remove or rename menuentries (they stey updatable by update-grub)  Edit the contents of menuentries or create new ones (internally it edits the 40_custom)  Support for GRUB2 and BURG  Reinstallation of the bootloader to MBR  Settings like default operating system, kernel params, background image and text colors etc.  Changing the installed operating system by running on a live cdTo install Grub Customizer in Ubuntu:The software has an official PPA repository contains the packages for all current Ubuntu releases.      Open terminal either via Ctrl+Alt+T or by searching for ‘terminal’ from app launcher. When it opens, run command to add the PPA:     sudo add-apt-repository ppa:danielrichter2007/grub-customizer            After added the PPA, run commands one by one to refresh package cache and install Grub Customizer:     sudo apt-get update sudo apt-get install grub-customizer      Once installed, launch the software from your application launcher and enjoy!",
                "content_html": "<p>For those who need to modify the default Grub boot-loader settings, <a href=\"https://launchpad.net/grub-customizer\">Grub Customizer</a> is a useful tool with a graphical user interface.</p><p><strong>Main features:</strong></p><blockquote>  <p>Move, remove or rename menuentries (they stey updatable by update-grub)</p></blockquote><blockquote>  <p>Edit the contents of menuentries or create new ones (internally it edits the 40_custom)</p></blockquote><blockquote>  <p>Support for GRUB2 and BURG</p></blockquote><blockquote>  <p>Reinstallation of the bootloader to MBR</p></blockquote><blockquote>  <p>Settings like default operating system, kernel params, background image and text colors etc.</p></blockquote><blockquote>  <p>Changing the installed operating system by running on a live cd</p></blockquote><p><strong>To install Grub Customizer in Ubuntu:</strong></p><p>The software has an official PPA repository contains the packages for all current Ubuntu releases.</p><ol>  <li>    <p>Open terminal either via Ctrl+Alt+T or by searching for ‘terminal’ from app launcher. When it opens, run command to add the PPA:</p>    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> sudo add-apt-repository ppa:danielrichter2007/grub-customizer</code></pre></div>    </div>  </li>  <li>    <p>After added the PPA, run commands one by one to refresh package cache and install Grub Customizer:</p>    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> sudo apt-get update sudo apt-get install grub-customizer</code></pre></div>    </div>  </li></ol><p>Once installed, launch the software from your application launcher and enjoy!</p>",
                "url": "http://localhost:4000/post/custumize-your-grub-with-grub-customizer/",
                
                
                "categories": [2018,"grub","linux","ubuntu","2018"],                
                
                "tags": ["2018,grub,linux,ubuntu"],
                "date_published": "2018-08-25T00:00:00+01:00",
                "date_modified": "2018-08-25T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "I think I just found my favorite icon pack for gnome",
                "content_text": "Presenting Flat Remix. Flat remix is a pretty simple icon theme inspired on material design. It is mostly flat with some shadows, highlights and gradients for some depth and uses a colorful palette with nice contrasts.Flat Remix icon theme is available in three variants:  Flat Remix - main icon theme  Flat Remix Dark - for dark interfaces  Flat Remix Light - for light interfacesTerminal installation$ cd /tmp &amp;&amp; rm -rf flat-remix &amp;&amp;git clone https://github.com/daniruiz/flat-remix &amp;&amp;mkdir -p ~/.icons &amp;&amp; cp -r flat-remix/Flat-Remix* ~/.icons/ &amp;&amp;gsettings set org.gnome.desktop.interface icon-theme \"Flat-Remix\"Ubuntu based distributions$ sudo add-apt-repository ppa:daniruiz/flat-remix$ sudo apt-get update$ sudo apt-get install flat-remix",
                "content_html": "<p>Presenting <a href=\"https://github.com/daniruiz/flat-remix\">Flat Remix</a>. Flat remix is a pretty simple icon theme inspired on material design. It is mostly flat with some shadows, highlights and gradients for some depth and uses a colorful palette with nice contrasts.</p><!--more--><p><img src=\"https://raw.githubusercontent.com/daniruiz/Flat-Remix/master/preview.png\" alt=\"Flat remix\" /></p><p>Flat Remix icon theme is available in three variants:</p><ol>  <li>Flat Remix - main icon theme</li>  <li>Flat Remix Dark - for dark interfaces</li>  <li>Flat Remix Light - for light interfaces</li></ol><p><strong>Terminal installation</strong></p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ cd /tmp &amp;&amp; rm -rf flat-remix &amp;&amp;git clone https://github.com/daniruiz/flat-remix &amp;&amp;mkdir -p ~/.icons &amp;&amp; cp -r flat-remix/Flat-Remix* ~/.icons/ &amp;&amp;gsettings set org.gnome.desktop.interface icon-theme \"Flat-Remix\"</code></pre></div></div><p><strong>Ubuntu based distributions</strong></p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo add-apt-repository ppa:daniruiz/flat-remix$ sudo apt-get update$ sudo apt-get install flat-remix</code></pre></div></div>",
                "url": "http://localhost:4000/post/i-think-i-just-found-my-favourite-icon-pack-for-gnome/",
                
                
                "categories": [2018,"gnome","iconpack","linux","ubuntu","2018"],                
                
                "tags": ["2018,gnome,iconpack,linux,ubuntu"],
                "date_published": "2018-08-08T00:00:00+01:00",
                "date_modified": "2018-08-08T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "How to Create ‘System Restore’ Points in Ubuntu 18.04",
                "content_text": "Since I moved up all my work stuff into Linux (mostly Ubuntu 18.04) I’ve been exploring more and more on how to perfect my work environment. Last thing we all need is to not have backups in place. Specially if its a work environment. For that we have TimeShift.Timeshift for Linux is an application that provides functionality similar to the System Restore feature in Windows and the Time Machine tool in Mac OS. Timeshift protects your system by taking incremental snapshots of the file system at regular intervals. These snapshots can be restored at a later date to undo all changes to the system.Basically you have two modes:In RSYNC mode, snapshots are taken using rsync and hard-links. Common files are shared between snapshots which saves disk space. Each snapshot is a full system backup that can be browsed with a file manager.In BTRFS mode, snapshots are taken using the in-built features of the BTRFS filesystem. BTRFS snapshots are supported only on BTRFS systems having an Ubuntu-type subvolume layout (with @ and @home subvolumes).Snapshots are saved by default on the system (root) partition in path /timeshift. Other linux partitions can also be selected. For best results the snapshots should be saved to an external (non-system) partition.Multiple levels of snapshots can be enabled - Hourly, Daily, Weekly, Monthly and BootInstallationUbuntu, Linux Mint, Elementary OS, etc.Packages are available in the Launchpad PPA for supported Ubuntu releases. Run the following commands in a terminal window:$ sudo add-apt-repository -y ppa:teejee2008/ppa$ sudo apt-get update$ sudo apt-get install timeshiftThat was easy right? :)",
                "content_html": "<p>Since I moved up all my work stuff into Linux (mostly Ubuntu 18.04) I’ve been exploring more and more on how to perfect my work environment. Last thing we all need is to not have backups in place. Specially if its a work environment. For that we have <a href=\"https://github.com/teejee2008/timeshift/\">TimeShift</a>.</p><!--more--><p>Timeshift for Linux is an application that provides functionality similar to the System Restore feature in Windows and the Time Machine tool in Mac OS. Timeshift protects your system by taking incremental snapshots of the file system at regular intervals. These snapshots can be restored at a later date to undo all changes to the system.</p><p><img src=\"https://raw.githubusercontent.com/teejee2008/timeshift/master/images/main_window.png\" alt=\"Timeshift\" /></p><p>Basically you have two modes:</p><p>In RSYNC mode, snapshots are taken using rsync and hard-links. Common files are shared between snapshots which saves disk space. Each snapshot is a full system backup that can be browsed with a file manager.</p><p>In BTRFS mode, snapshots are taken using the in-built features of the BTRFS filesystem. BTRFS snapshots are supported only on BTRFS systems having an Ubuntu-type subvolume layout (with @ and @home subvolumes).</p><p>Snapshots are saved by default on the system (root) partition in path /timeshift. Other linux partitions can also be selected. For best results the snapshots should be saved to an external (non-system) partition.</p><p><img src=\"https://raw.githubusercontent.com/teejee2008/timeshift/master/images/settings_location.png\" alt=\"timeshift\" /></p><p>Multiple levels of snapshots can be enabled - Hourly, Daily, Weekly, Monthly and Boot</p><p><img src=\"https://raw.githubusercontent.com/teejee2008/timeshift/master/images/settings_schedule.png\" alt=\"timeshift\" /></p><h3 id=\"installation\">Installation</h3><p>Ubuntu, Linux Mint, Elementary OS, etc.</p><p>Packages are available in the Launchpad PPA for supported Ubuntu releases. Run the following commands in a terminal window:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo add-apt-repository -y ppa:teejee2008/ppa$ sudo apt-get update$ sudo apt-get install timeshift</code></pre></div></div><p>That was easy right? :)</p>",
                "url": "http://localhost:4000/post/how-to-create-system-restore-points-in-ubuntu-18.04/",
                
                
                "categories": [2018,"backups","linux","tools","ubuntu","2018"],                
                
                "tags": ["2018,backups,linux,tools,ubuntu"],
                "date_published": "2018-08-06T00:00:00+01:00",
                "date_modified": "2018-08-06T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Spotify snap broken with Nvidia driver 396.24.02? I got your back.",
                "content_text": "Upgraded my Nvidia driver just now from 396.24.0 to 396.24.02, rebooted, and Spotify no longer works. It opens a window but never draws anything but a black screen.$ snap run spotifyGtk-Message: Failed to load module \"gail\"Gtk-Message: Failed to load module \"atk-bridge\"Gtk-Message: Failed to load module \"canberra-gtk-module\"ATTENTION: default value of option force_s3tc_enable overridden by environment.libGL error: No matching fbConfigs or visuals foundlibGL error: failed to load driver: swrast[0604/185738.869585:ERROR:gl_context_glx.cc(227)] Couldn't make context current with X drawable.[0604/185738.869619:ERROR:gpu_info_collector.cc(62)] gl::GLContext::MakeCurrent() failed[0604/185746.603499:ERROR:browser_gpu_channel_host_factory.cc(120)] Failed to launch GPU process.The solution is quite simple. Until fixed snaps are available, you can start spotify without GPU accelerated graphics.$ snap run spotify --disable-gpuUpdate: Since 06/08/2018 spotify is working fine with the new drivers!",
                "content_html": "<p>Upgraded my Nvidia driver just now from 396.24.0 to 396.24.02, rebooted, and Spotify no longer works. It opens a window but never draws anything but a black screen.</p><!--more--><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ snap run spotifyGtk-Message: Failed to load module \"gail\"Gtk-Message: Failed to load module \"atk-bridge\"Gtk-Message: Failed to load module \"canberra-gtk-module\"ATTENTION: default value of option force_s3tc_enable overridden by environment.libGL error: No matching fbConfigs or visuals foundlibGL error: failed to load driver: swrast[0604/185738.869585:ERROR:gl_context_glx.cc(227)] Couldn't make context current with X drawable.[0604/185738.869619:ERROR:gpu_info_collector.cc(62)] gl::GLContext::MakeCurrent() failed[0604/185746.603499:ERROR:browser_gpu_channel_host_factory.cc(120)] Failed to launch GPU process.</code></pre></div></div><p><img src=\"https://i.imgur.com/p0yeYFe.png\" alt=\"screenshot\" /></p><p>The solution is quite simple. Until fixed snaps are available, you can start spotify without GPU accelerated graphics.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ snap run spotify --disable-gpu</code></pre></div></div><p><small><strong>Update:</strong> Since 06/08/2018 spotify is working fine with the new drivers!</small></p>",
                "url": "http://localhost:4000/post/spotify-snap-broken-with-nvidia-driver-396.24.02-i-got-your-back/",
                
                
                "categories": [2018,"nvidea","spotify","ubuntu","2018"],                
                
                "tags": ["2018,nvidea,spotify,ubuntu"],
                "date_published": "2018-07-24T00:00:00+01:00",
                "date_modified": "2018-07-24T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Start using CLI more and more with mycli",
                "content_text": "Ever since I moved into Linux I started using the CLI even more. Don’t get me wrong, I used it quite a lot on Mac. However if there was one thing that I normally didn’t use it for was for mySQL. However a few days ago I discovered mycli. Since then I gotta say. Love it!Here’s a bit more about the tool.Install the thing first:$ sudo apt-get install mycliUsage:$ mycli --helpUsage: mycli [OPTIONS] [DATABASE]  \tA MySQL terminal client with auto-completion and syntax highlighting.  \tExamples:\t- mycli my_database\t- mycli -u my_user -h my_host.com my_database\t- mycli mysql://my_user@my_host.com:3306/my_databaseOptions:  \t\t-h, --host TEXT               Host address of the database.  \t\t-P, --port INTEGER            Port number to use for connection. Honors $MYSQL_TCP_PORT.  \t\t-u, --user TEXT               User name to connect to the database.  \t\t-S, --socket TEXT             The socket file to use for connection.  \t\t-p, --password TEXT           Password to connect to the database.  \t\t--pass TEXT                   Password to connect to the database.  \t\t--ssl-ca PATH                 CA file in PEM format.  \t\t--ssl-capath TEXT             CA directory.  \t\t--ssl-cert PATH               X509 cert in PEM format.  \t--ssl-key PATH                X509 key in PEM format.  \t--ssl-cipher TEXT             SSL cipher to use.  \t\t--ssl-verify-server-cert      Verify server's \"Common Name\" in its cert against hostname used when connecting. This option is disabled by default.\t-V, --version                 Output mycli's version.\t-v, --verbose                 Verbose output.\t-D, --database TEXT           Database to use.\t-d, --dsn TEXT                Use DSN configured into the [alias_dsn] section of myclirc file.\t--list-dsn                    list of DSN configured into the [alias_dsn] section of myclirc file.\t-R, --prompt TEXT             Prompt format (Default: \"\\t \\u@\\h:\\d&gt; \").\t-l, --logfile FILENAME        Log every query and its results to a file.\t--defaults-group-suffix TEXT  Read MySQL config groups with the specified suffix.\t--defaults-file PATH          Only read MySQL options from the given file.\t--myclirc PATH                Location of myclirc file.\t--auto-vertical-output        Automatically switch to vertical output mode if the result is wider than the terminal width.\t-t, --table                   Display batch output in table format.\t--csv                         Display batch output in CSV format.\t--warn / --no-warn            Warn before running a destructive query.\t--local-infile BOOLEAN        Enable/disable LOAD DATA LOCAL INFILE.\t--login-path TEXT             Read this path from the login file.\t-e, --execute TEXT            Execute command and quit.\t--help                        Show this message and exit.Featuresmycli is written using prompt_toolkit.   Auto-completion as you type for SQL keywords as well as tables, views and columns in the database.   Syntax highlighting using Pygments.   Smart-completion (enabled by default) will suggest context-sensitive completion.   SELECT * FROM  will only show table names.   SELECT * FROM users WHERE  will only show column names.   Support for multiline queries.   Favorite queries with optional positional parameters. Save a query using \\fs alias query and execute it with \\f alias whenever you need.   Timing of sql statments and table rendering.   Config file is automatically created at ~/.myclirc at first launch.   Log every query and its results to a file (disabled by default).   Pretty prints tabular data (with colors!)   Support for SSL connections",
                "content_html": "<p>Ever since I moved into Linux I started using the CLI even more. Don’t get me wrong, I used it quite a lot on Mac. However if there was one thing that I normally didn’t use it for was for mySQL. However a few days ago I discovered <a href=\"http://www.mycli.net/\">mycli</a>. Since then I gotta say. Love it!</p><!--more--><p>Here’s a bit more about the tool.</p><p>Install the thing first:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo apt-get install mycli</code></pre></div></div><p><strong>Usage:</strong></p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ mycli --helpUsage: mycli [OPTIONS] [DATABASE]  \tA MySQL terminal client with auto-completion and syntax highlighting.</code></pre></div></div>  \tExamples:<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t- mycli my_database\t- mycli -u my_user -h my_host.com my_database\t- mycli mysql://my_user@my_host.com:3306/my_databaseOptions:  \t\t-h, --host TEXT               Host address of the database.  \t\t-P, --port INTEGER            Port number to use for connection. Honors $MYSQL_TCP_PORT.  \t\t-u, --user TEXT               User name to connect to the database.  \t\t-S, --socket TEXT             The socket file to use for connection.  \t\t-p, --password TEXT           Password to connect to the database.  \t\t--pass TEXT                   Password to connect to the database.  \t\t--ssl-ca PATH                 CA file in PEM format.  \t\t--ssl-capath TEXT             CA directory.  \t\t--ssl-cert PATH               X509 cert in PEM format.  \t--ssl-key PATH                X509 key in PEM format.  \t--ssl-cipher TEXT             SSL cipher to use.  \t\t--ssl-verify-server-cert      Verify server's \"Common Name\" in its cert against hostname used when connecting. This option is disabled by default.\t-V, --version                 Output mycli's version.\t-v, --verbose                 Verbose output.\t-D, --database TEXT           Database to use.\t-d, --dsn TEXT                Use DSN configured into the [alias_dsn] section of myclirc file.\t--list-dsn                    list of DSN configured into the [alias_dsn] section of myclirc file.\t-R, --prompt TEXT             Prompt format (Default: \"\\t \\u@\\h:\\d&gt; \").\t-l, --logfile FILENAME        Log every query and its results to a file.\t--defaults-group-suffix TEXT  Read MySQL config groups with the specified suffix.\t--defaults-file PATH          Only read MySQL options from the given file.\t--myclirc PATH                Location of myclirc file.\t--auto-vertical-output        Automatically switch to vertical output mode if the result is wider than the terminal width.\t-t, --table                   Display batch output in table format.\t--csv                         Display batch output in CSV format.\t--warn / --no-warn            Warn before running a destructive query.\t--local-infile BOOLEAN        Enable/disable LOAD DATA LOCAL INFILE.\t--login-path TEXT             Read this path from the login file.\t-e, --execute TEXT            Execute command and quit.\t--help                        Show this message and exit.</code></pre></div></div><p><img src=\"https://raw.githubusercontent.com/dbcli/mycli/master/screenshots/tables.png\" alt=\"Example\" /></p><p><img src=\"https://raw.githubusercontent.com/dbcli/mycli/master/screenshots/main.gif\" alt=\"Example 2\" /></p><p><strong>Features</strong></p><p><a href=\"http://www.mycli.net/\">mycli</a> is written using <a href=\"https://github.com/jonathanslenders/python-prompt-toolkit/\">prompt_toolkit</a>.</p><ul>  <li><i class=\"icon-angle-right\"></i> Auto-completion as you type for SQL keywords as well as tables, views and columns in the database.</li>  <li><i class=\"icon-angle-right\"></i> Syntax highlighting using Pygments.</li>  <li><i class=\"icon-angle-right\"></i> Smart-completion (enabled by default) will suggest context-sensitive completion.</li>  <li><i class=\"icon-angle-right\"></i> SELECT * FROM <tab> will only show table names.</tab></li>  <li><i class=\"icon-angle-right\"></i> SELECT * FROM users WHERE <tab> will only show column names.</tab></li>  <li><i class=\"icon-angle-right\"></i> Support for multiline queries.</li>  <li><i class=\"icon-angle-right\"></i> Favorite queries with optional positional parameters. Save a query using \\fs alias query and execute it with \\f alias whenever you need.</li>  <li><i class=\"icon-angle-right\"></i> Timing of sql statments and table rendering.</li>  <li><i class=\"icon-angle-right\"></i> Config file is automatically created at ~/.myclirc at first launch.</li>  <li><i class=\"icon-angle-right\"></i> Log every query and its results to a file (disabled by default).</li>  <li><i class=\"icon-angle-right\"></i> Pretty prints tabular data (with colors!)</li>  <li><i class=\"icon-angle-right\"></i> Support for SSL connections</li></ul>",
                "url": "http://localhost:4000/post/start-using-cli-more-and-more/",
                
                
                "categories": [2018,"linux","mysql","ubuntu","2018"],                
                
                "tags": ["2018,linux,mysql,ubuntu"],
                "date_published": "2018-07-18T00:00:00+01:00",
                "date_modified": "2018-07-18T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "git commander another great command line interface tool",
                "content_text": "This is a git tool that gives more friendly way to navigate your git logs, commit or even diff files. Personally I use git most times inside Sublime Text 3. However its always nice to have a tool like this at hand.Features   git status   git add [files]   git reset – [files]   git commit [files]   git log   git reset   git diff file   git branch",
                "content_html": "<p>This is a git tool that gives more friendly way to navigate your git logs, commit or even diff files. Personally I use git most times inside Sublime Text 3. However its always nice to have a tool like this at hand.</p><!--more--><p><img src=\"https://raw.githubusercontent.com/golbin/git-commander/master/doc/git-commander@2x.gif\" alt=\"git commander\" /></p><p><strong>Features</strong></p><ul>  <li><i class=\"icon-angle-right\"></i> git status</li>  <li><i class=\"icon-angle-right\"></i> git add [files]</li>  <li><i class=\"icon-angle-right\"></i> git reset – [files]</li>  <li><i class=\"icon-angle-right\"></i> git commit [files]</li>  <li><i class=\"icon-angle-right\"></i> git log</li>  <li><i class=\"icon-angle-right\"></i> git reset</li>  <li><i class=\"icon-angle-right\"></i> git diff file</li>  <li><i class=\"icon-angle-right\"></i> git branch</li></ul>",
                "url": "http://localhost:4000/post/git-commander-another-great-command-line-interface/",
                
                
                "categories": [2018,"Git","linux","Version-control","2018"],                
                
                "tags": ["2018,Git,linux,Version-control"],
                "date_published": "2018-07-18T00:00:00+01:00",
                "date_modified": "2018-07-18T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Using the MSSQL driver to connect to a old SQL server in PHP",
                "content_text": "One of reasons we had to use PHP 5.6 in one of our recent projets was related to the fact that we needed to get info from the clients ERP, that one only allowed a connection via MSSQL. So after we got the project running with PHP 5.6 instead of 7.2 we had to install the MSSQL drivers.Here’s how.This was done on Ubuntu 16.04 but I tested it on 18.04 too.First, make sure you’re up to date on all of your packages.$ sudo apt-get update$ sudo apt-get upgrade$ sudo apt-get dist-upgradeThen we need to install all the FreeTDS &amp; Dependencies.$ sudo apt-get install php5-sybase freetds-common libsybdb5$ sudo apache2ctl restartJust restart apache and you should be good to go.$ sudo service apache2 restart",
                "content_html": "<p>One of reasons we had to use PHP 5.6 in one of our recent projets was related to the fact that we needed to get info from the clients ERP, that one only allowed a connection via MSSQL. So after we got the <a href=\"https://blog.marcomonteiro.net/post/having-multiple-php-versions-on-your-dev-environment\">project running with PHP 5.6 instead of 7.2</a> we had to install the MSSQL drivers.</p><!--more--><p>Here’s how.</p><p>This was done on Ubuntu 16.04 but I tested it on 18.04 too.</p><p>First, make sure you’re up to date on all of your packages.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo apt-get update$ sudo apt-get upgrade$ sudo apt-get dist-upgrade</code></pre></div></div><p>Then we need to install all the FreeTDS &amp; Dependencies.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo apt-get install php5-sybase freetds-common libsybdb5$ sudo apache2ctl restart</code></pre></div></div><p>Just restart apache and you should be good to go.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo service apache2 restart</code></pre></div></div>",
                "url": "http://localhost:4000/post/using-the-mssql-driver-to-connect-to-a-old-sql-server-in-php/",
                
                
                "categories": [2018,"mssql","server","sysadmin","ubuntu","2018"],                
                
                "tags": ["2018,mssql,server,sysadmin,ubuntu"],
                "date_published": "2018-07-13T00:00:00+01:00",
                "date_modified": "2018-07-13T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Having multiple PHP versions on your dev environment",
                "content_text": "There’s one of our servers that we use to run small applications for a bunch of clients. At the time when we were configuring this server we ended up choosin PHP 7.2.x as the version that would be used for these clients. However, once we started the development process we needed to connect to the clients ERP. Guess what? That connection needed php version 5.6.x max to work.Here’s the process to get everything up and running on Ubuntu 16.04, we also tested this on Ubuntu 18.04 and everything worked like a charm.Install apache:$ sudo apt update$ sudo apt install apache2 libapache2-mod-fastcgiOn some cases you’ll get an error saying that you can’t install libeapache2-mod-fastcgi.Package libapache2-mod-fastcgi is not available, but is referred to by another package.This may mean that the package is missing, has been obsoleted, or is only available from another source E: Package 'libapache2-mod-fastcgi' has no installation candidateThat can be resolved with the following:cd /tmp &amp;&amp; wget http://mirrors.kernel.org/ubuntu/pool/multiverse/liba/libapache-mod-fastcgi/libapache2-mod-fastcgi_2.4.7~0910052141-1.2_amd64.deb    sudo dpkg -i libapache2-mod-fastcgi_2.4.7~0910052141-1.2_amd64.deb; sudo apt install -fThe second step is to install PHPFor the installation of PHP versions, we use the PPA maintained here. Use the below couple of commands to add the PPA to your system.$ sudo apt install python-software-properties$ sudo add-apt-repository ppa:ondrej/phpWe’re almost there.$ apt update$ sudo apt install php5.6 php5.6-fpm$ sudo apt install php7.2 php7.2-fpmNow we want to make sure everything is up and running:$ sudo systemctl status php5.6-fpm$ sudo systemctl status php7.2-fpmEverything that is left to do is configure our Apache.Enable few modules required for the configuration of multiple PHP versions with Apache. These modules are necessary to integrate PHP FPM and FastCGI with Apache server.    $ sudo a2enmod actions fastcgi alias proxy_fcgiIn our www folder we create two projects. Lets say for the sake of this example its something like this:$ sudo mkdir /var/www/php5$ sudo mkdir /var/www/php7Now, create and index.php containing the phpinfo() function on each one.Let’s start the creation of VirtualHost. Apache keeps all the VirtualHost configuration files under /etc/apache2/sites-available with the extension .conf. Create a file for the first virtual host and edit in your favorite text editor.$ sudo vim /etc/apache2/sites-available/php5.local.confAdd the following content. Make sure to use correct ServerName and directory path according to your setup. This website is configured to work with PHP 5.6.  &lt;VirtualHost *:80&gt;  ServerName php5.local  DocumentRoot /var/www/php5  &lt;Directory /var/www/php5&gt;\t  Options -Indexes +FollowSymLinks +MultiViews\t  AllowOverride All\t  Require all granted  &lt;/Directory&gt;  &lt;FilesMatch \\.php$&gt;\t  # Apache 2.4.10+ can proxy to unix socket\t  SetHandler \"proxy:unix:/var/run/php/php5.6-fpm.sock|fcgi://localhost/\"  &lt;/FilesMatch&gt;&lt;/VirtualHost&gt;Same thing for the other one with a different path and different PHP version. \t$ sudo vim /etc/apache2/sites-available/php7.local.conf&lt;VirtualHost *:80&gt;ServerName php7.localDocumentRoot /var/www/php7&lt;Directory /var/www/php7&gt;    Options -Indexes +FollowSymLinks +MultiViews    AllowOverride All    Require all granted&lt;/Directory&gt;&lt;FilesMatch \\.php$&gt;    SetHandler \"proxy:unix:/var/run/php/php7.2-fpm.sock|fcgi://localhost/\"&lt;/FilesMatch&gt;&lt;/VirtualHost&gt;Restart apache to get everything up and running.    $ sudo service apache2 restartJob done. Now you have two applications running different PHP versions on the same machine.",
                "content_html": "<p>There’s one of our servers that we use to run small applications for a bunch of clients. At the time when we were configuring this server we ended up choosin PHP 7.2.x as the version that would be used for these clients. However, once we started the development process we needed to connect to the clients ERP. Guess what? That connection needed php version 5.6.x max to work.</p><p>Here’s the process to get everything up and running on Ubuntu 16.04, we also tested this on Ubuntu 18.04 and everything worked like a charm.</p><!--more--><p>Install apache:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo apt update$ sudo apt install apache2 libapache2-mod-fastcgi</code></pre></div></div><p>On some cases you’ll get an error saying that you can’t install libeapache2-mod-fastcgi.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Package libapache2-mod-fastcgi is not available, but is referred to by another package.This may mean that the package is missing, has been obsoleted, or is only available from another source E: Package 'libapache2-mod-fastcgi' has no installation candidate</code></pre></div></div><p>That can be resolved with the following:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>cd /tmp &amp;&amp; wget http://mirrors.kernel.org/ubuntu/pool/multiverse/liba/libapache-mod-fastcgi/libapache2-mod-fastcgi_2.4.7~0910052141-1.2_amd64.deb    sudo dpkg -i libapache2-mod-fastcgi_2.4.7~0910052141-1.2_amd64.deb; sudo apt install -f</code></pre></div></div><p>The second step is to install PHP</p><p>For the installation of PHP versions, we use the PPA maintained here. Use the below couple of commands to add the PPA to your system.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo apt install python-software-properties$ sudo add-apt-repository ppa:ondrej/php</code></pre></div></div><p>We’re almost there.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ apt update$ sudo apt install php5.6 php5.6-fpm$ sudo apt install php7.2 php7.2-fpm</code></pre></div></div><p>Now we want to make sure everything is up and running:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo systemctl status php5.6-fpm$ sudo systemctl status php7.2-fpm</code></pre></div></div><p>Everything that is left to do is configure our Apache.</p><p>Enable few modules required for the configuration of multiple PHP versions with Apache. These modules are necessary to integrate PHP FPM and FastCGI with Apache server.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    $ sudo a2enmod actions fastcgi alias proxy_fcgi</code></pre></div></div><p>In our www folder we create two projects. Lets say for the sake of this example its something like this:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo mkdir /var/www/php5$ sudo mkdir /var/www/php7</code></pre></div></div><p>Now, create and index.php containing the phpinfo() function on each one.</p><p>Let’s start the creation of VirtualHost. Apache keeps all the VirtualHost configuration files under /etc/apache2/sites-available with the extension .conf. Create a file for the first virtual host and edit in your favorite text editor.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo vim /etc/apache2/sites-available/php5.local.conf</code></pre></div></div><p>Add the following content. Make sure to use correct ServerName and directory path according to your setup. This website is configured to work with PHP 5.6.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  &lt;VirtualHost *:80&gt;  ServerName php5.local  DocumentRoot /var/www/php5  &lt;Directory /var/www/php5&gt;\t  Options -Indexes +FollowSymLinks +MultiViews\t  AllowOverride All\t  Require all granted  &lt;/Directory&gt;  &lt;FilesMatch \\.php$&gt;\t  # Apache 2.4.10+ can proxy to unix socket\t  SetHandler \"proxy:unix:/var/run/php/php5.6-fpm.sock|fcgi://localhost/\"  &lt;/FilesMatch&gt;</code></pre></div></div><p>&lt;/VirtualHost&gt;</p><p>Same thing for the other one with a different path and different PHP version.</p> \t$ sudo vim /etc/apache2/sites-available/php7.local.conf<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;VirtualHost *:80&gt;ServerName php7.localDocumentRoot /var/www/php7&lt;Directory /var/www/php7&gt;    Options -Indexes +FollowSymLinks +MultiViews    AllowOverride All    Require all granted&lt;/Directory&gt;&lt;FilesMatch \\.php$&gt;    SetHandler \"proxy:unix:/var/run/php/php7.2-fpm.sock|fcgi://localhost/\"&lt;/FilesMatch&gt;</code></pre></div></div><p>&lt;/VirtualHost&gt;</p><p>Restart apache to get everything up and running.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    $ sudo service apache2 restart</code></pre></div></div><p>Job done. Now you have two applications running different PHP versions on the same machine.</p>",
                "url": "http://localhost:4000/post/having-multiple-php-versions-on-your-dev-environment/",
                
                
                "categories": [2018,"apache","lamp stack","php","sysadmin","ubuntu","2018"],                
                
                "tags": ["2018,apache,lamp stack,php,sysadmin,ubuntu"],
                "date_published": "2018-07-12T00:00:00+01:00",
                "date_modified": "2018-07-12T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "GDPR madness, right?",
                "content_text": "First let me be clear, I’m not talking about other countries, I’m mainly talking about Portugal here, since its where I live and its obviously where I’m taking all the examples from.That said, here it goes.Before the 25th of May, many were talking about everything that was going to happen, everyone was an expert. That’s not really bad, at least people were talking about something that’s important - user private data is no laughing matter.![Alarm](https://imgs.xkcd.com/comics/personal_data.png)Some companies started taking things into their own hands and got to work. Others hired “experts” from the outside to help them out. However, many did something different, they didn’t do shit.The 25th of May finally came and nothing was the same! Or was it?Well basically, I see it this way, there’s 3 scenarios right now.Companies that started implementing everything early are now living normal lives. Their day to day hasn’t change and it’s business as usual.The ones that hired outside help on this, wasted loads of money are probably still wasting it, when they could probably could take care of everything indoors.Finally the ones that didn’t do any of the above are watching the news. Waiting to see if anyone is fined. In case that happens sure, they will panic and will start doing something about it. Otherwise most of the companies will do nothing.Who’s right in all this? In my opinion GDPR is nothing that problematic. My only advise in all this is just to take the data about your users seriously. Don’t be the company that doesn’t do anything about it and complains that’s this is too much work. Sure it takes time, but the world will be a better lace if everyone does it.Another thing that bothers me to no end. Before the 25th the media wasn’t talking about this at all. After the 25th there’s a few articles here and there about it, but mostly there’s lots of discussions on social media about it. Once again, people only think about this stuff when they really have to.",
                "content_html": "<p>First let me be clear, I’m not talking about other countries, I’m mainly talking about Portugal here, since its where I live and its obviously where I’m taking all the examples from.</p><p>That said, here it goes.</p><!--more--><p>Before the 25th of May, many were talking about everything that was going to happen, everyone was an expert. That’s not really bad, at least people were talking about something that’s important - user private data is no laughing matter.</p><center>![Alarm](https://imgs.xkcd.com/comics/personal_data.png)</center><p>Some companies started taking things into their own hands and got to work. Others hired “experts” from the outside to help them out. However, many did something different, they didn’t do shit.</p><p>The 25th of May finally came and nothing was the same! Or was it?</p><p>Well basically, I see it this way, there’s 3 scenarios right now.</p><p>Companies that started implementing everything early are now living normal lives. Their day to day hasn’t change and it’s business as usual.The ones that hired outside help on this, wasted loads of money are probably still wasting it, when they could probably could take care of everything indoors.</p><p>Finally the ones that didn’t do any of the above are watching the news. Waiting to see if anyone is fined. In case that happens sure, they will panic and will start doing something about it. Otherwise most of the companies will do nothing.</p><p>Who’s right in all this? In my opinion GDPR is nothing that problematic. My only advise in all this is just to take the data about your users seriously. Don’t be the company that doesn’t do anything about it and complains that’s this is too much work. Sure it takes time, but the world will be a better lace if everyone does it.</p><p>Another thing that bothers me to no end. Before the 25th the media wasn’t talking about this at all. After the 25th there’s a few articles here and there about it, but mostly there’s lots of discussions on social media about it. Once again, people only think about this stuff when they really have to.</p>",
                "url": "http://localhost:4000/post/gdpr-madness-right/",
                
                
                "categories": [2018,"data protection","GDPR","2018"],                
                
                "tags": ["2018,data protection,GDPR"],
                "date_published": "2018-06-05T00:00:00+01:00",
                "date_modified": "2018-06-05T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "My linux setup",
                "content_text": "A few weeks ago I reported that I made the change from Mac to Linux. Since then I tested loads of stuff in Linux to the point where I choose my stuff. Later Ubuntu 18.04 came out and I decided to do a clean install with just the software I wanted.Here’s the result.Linux Distro: Ubuntu 18.04First thing I did was change the layout and to do that I started with Gnome Tweak Tool. sudo apt install gnome-tweak-toolHere’s my appearance settings:![Appearance](https://i.imgur.com/s9ctXv6.png)On my desktop tab I have everything on (show icons, home, network servers, trash and mounted volumes).Then some extensions were installed:  Audio output switcher (I can change the output from headset to speakers)  Clipboard indicator (have a clipboard history)  Coverflow Alt-Tab (a fancy alt+tab menu)  Custom corner (custom corner shortcuts)  Dropdown Terminal (terminal opening on top of everything with shortcut)  Flippery Move Clock (move the clock to the right)  OpenWeather (weather in the top menu)  Panel OSD (custom notifications)  Places Status Indicator (places menu)  Remove Dropdown Arrows (remove the dropdown arrows to have extra space)  Status area horizontal spacing (reduce horizontal space)  Ubuntu AppIndicators (always how indicators of the app you’re using)  Ubuntu Dock (already came with the system)  Dash to Panel (save them pixels and use just one bar)  Suspend button (adds the suspend button to the gnome menu)On my Top Bar I left only the applications Menu and Date. Everything else was removed. Layout wise was only a few more changes to do, those were made with the system wide settings menu.Here’s the final look.Now, on to the apps I installed to help with my day to day use.   Mailspring (email client)   Sublime Text 3   Atom   Discord   Terminator   Quassel IRC   VLC media player   Caffeine   GitKraken   FreeOfficeOnly thing I’m still testing is a database managing software like Sequel Pro. I really loved that app on Mac.Anything else I’m missing? Let me know!",
                "content_html": "<p>A few weeks ago I reported that I made the change from Mac to Linux. Since then I tested loads of stuff in Linux to the point where I choose my stuff. Later Ubuntu 18.04 came out and I decided to do a clean install with just the software I wanted.</p><p>Here’s the result.</p><!--more--><p>Linux Distro: <a href=\"http://releases.ubuntu.com/18.04/\">Ubuntu 18.04</a></p><p>First thing I did was change the layout and to do that I started with Gnome Tweak Tool.</p><p><i class=\"icon-terminal\"></i> sudo apt install gnome-tweak-tool</p><p>Here’s my appearance settings:</p><center>![Appearance](https://i.imgur.com/s9ctXv6.png)</center><p>On my desktop tab I have everything on (show icons, home, network servers, trash and mounted volumes).</p><p>Then some extensions were installed:</p><ul>  <li><i class=\"icon-angle-right\"></i>Audio output switcher (I can change the output from headset to speakers)</li>  <li><i class=\"icon-angle-right\"></i>Clipboard indicator (have a clipboard history)</li>  <li><i class=\"icon-angle-right\"></i>Coverflow Alt-Tab (a fancy alt+tab menu)</li>  <li><i class=\"icon-angle-right\"></i>Custom corner (custom corner shortcuts)</li>  <li><i class=\"icon-angle-right\"></i>Dropdown Terminal (terminal opening on top of everything with shortcut)</li>  <li><i class=\"icon-angle-right\"></i>Flippery Move Clock (move the clock to the right)</li>  <li><i class=\"icon-angle-right\"></i>OpenWeather (weather in the top menu)</li>  <li><i class=\"icon-angle-right\"></i>Panel OSD (custom notifications)</li>  <li><i class=\"icon-angle-right\"></i>Places Status Indicator (places menu)</li>  <li><i class=\"icon-angle-right\"></i>Remove Dropdown Arrows (remove the dropdown arrows to have extra space)</li>  <li><i class=\"icon-angle-right\"></i>Status area horizontal spacing (reduce horizontal space)</li>  <li><i class=\"icon-angle-right\"></i>Ubuntu AppIndicators (always how indicators of the app you’re using)</li>  <li><i class=\"icon-angle-right\"></i>Ubuntu Dock (already came with the system)</li>  <li><i class=\"icon-angle-right\"></i>Dash to Panel (save them pixels and use just one bar)</li>  <li><i class=\"icon-angle-right\"></i>Suspend button (adds the suspend button to the gnome menu)</li></ul><p>On my Top Bar I left only the applications Menu and Date. Everything else was removed. Layout wise was only a few more changes to do, those were made with the system wide settings menu.</p><p><img src=\"https://i.imgur.com/GFh5DG8.png\" alt=\"Settings Dock\" /></p><p>Here’s the final look.</p><p><img src=\"https://i.imgur.com/sDnUfjd.png\" alt=\"Desktop\" /></p><p>Now, on to the apps I installed to help with my day to day use.</p><ul>  <li><i class=\"icon-angle-right\"></i> Mailspring (email client)</li>  <li><i class=\"icon-angle-right\"></i> Sublime Text 3</li>  <li><i class=\"icon-angle-right\"></i> Atom</li>  <li><i class=\"icon-angle-right\"></i> Discord</li>  <li><i class=\"icon-angle-right\"></i> Terminator</li>  <li><i class=\"icon-angle-right\"></i> Quassel IRC</li>  <li><i class=\"icon-angle-right\"></i> VLC media player</li>  <li><i class=\"icon-angle-right\"></i> Caffeine</li>  <li><i class=\"icon-angle-right\"></i> GitKraken</li>  <li><i class=\"icon-angle-right\"></i> FreeOffice</li></ul><p>Only thing I’m still testing is a database managing software like Sequel Pro. I really loved that app on Mac.</p><p>Anything else I’m missing? Let me know!</p>",
                "url": "http://localhost:4000/post/my-linux-setup/",
                
                
                "categories": [2018,"desktop","linux","ubuntu","2018"],                
                
                "tags": ["2018,desktop,linux,ubuntu"],
                "date_published": "2018-05-27T00:00:00+01:00",
                "date_modified": "2018-05-27T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Yeah! I'm not using mac anymore",
                "content_text": "Let’s be clear, I’m still using OSX at work, mostly because there’s no need to change there these days. The computer is already there, so why change?For the past 8 or 9 years I’ve been using as my main computer a macbookpro. First gen I bought was awesome, lasted for years. Upgraded it with some more RAM, and then I even removed the DVD player (remember those?) and shoved a SSD and the computer was great.Then I decided to sell it and bought one of the new ones. One of those that you can’t really do anything to it (hardware wise). After some thought I decided it was time to make a decision, and believe it or not it all started with me selling my PS4. Sold it and decided to make a gamming rig. Then I also sold my new macbookpro and I was like  “-Man, I could make a hackingtosh!” So I made my gamming rig with all compatible parts and build it like that.Bought a second SSD so I could have really separate environments, windows and OSX. Problem was, when I started fidling with the hackingtosh I got bored with it very fast.Next logical step? I gave Ubuntu 17.10 a go and man was I impressed, everything is so fucking awesome with it. Works so well, they removed Unity that I always hated and got back to gnome 3.My environment now is basically one hardrive with Linux and one with Windows 10 (that I actually kinda like too).People, do you a favor if you’re a developer start looking at other alternatives, because windows 10 and Linux really are these days.I’ll be posting more details about my environment soon.",
                "content_html": "<p>Let’s be clear, I’m still using OSX at work, mostly because there’s no need to change there these days. The computer is already there, so why change?</p><p>For the past 8 or 9 years I’ve been using as my main computer a macbookpro. First gen I bought was awesome, lasted for years. Upgraded it with some more RAM, and then I even removed the DVD player (remember those?) and shoved a SSD and the computer was great.</p><!--more--><p>Then I decided to sell it and bought one of the new ones. One of those that you can’t really do anything to it (hardware wise). After some thought I decided it was time to make a decision, and believe it or not it all started with me selling my PS4. Sold it and decided to make a gamming rig. Then I also sold my new macbookpro and I was like  “-Man, I could make a hackingtosh!” So I made my gamming rig with all compatible parts and build it like that.</p><p>Bought a second SSD so I could have really separate environments, windows and OSX. Problem was, when I started fidling with the hackingtosh I got bored with it very fast.</p><p>Next logical step? I gave Ubuntu 17.10 a go and man was I impressed, everything is so fucking awesome with it. Works so well, they removed Unity that I always hated and got back to gnome 3.</p><p>My environment now is basically one hardrive with Linux and one with Windows 10 (that I actually kinda like too).</p><p>People, do you a favor if you’re a developer start looking at other alternatives, because windows 10 and Linux really are these days.</p><p>I’ll be posting more details about my environment soon.</p>",
                "url": "http://localhost:4000/post/yeah-i-i'm-using-mac-anymore/",
                
                
                "categories": [2018,"gamming","linux","osx","ubuntu","windows10","work","2018"],                
                
                "tags": ["2018,gamming,linux,osx,ubuntu,windows10,work"],
                "date_published": "2018-04-04T00:00:00+01:00",
                "date_modified": "2018-04-04T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "My Sublime text 3 config",
                "content_text": "For the last 4 years or so I’ve been using sublime text 2. I bought the license, therefore I saw no point in upgrading. Until today, when I found out that I could use my ST2 license on ST3 (beta). Today was configuration day and I re-configured editor or choice.PackagesPackage ControlThe Sublime Text package manager that makes it exceedingly simple to find, install and keep packages up-to-date.BracketHighligherBracket Highlighter matches a variety of brackets such as: [], (), {}, “”, ‘’, #!xml , and even custom brackets.This was originally forked from pyparadigm’s SublimeBrackets and SublimeTagmatcher (both are no longer available). I forked this to fix some issues I had and to add some features I had wanted. I also wanted to improve the efficiency of the matching.Codeigniter SnippetsA list of codeigniter snippets for Sublime Text 2. If you use Codeigniter this is a must have.DocBlockrDocBlockr is a package for Sublime Text 2 &amp; 3 which makes writing documentation a breeze. DocBlockr supports JavaScript (including ES6), PHP, ActionScript, Haxe, CoffeeScript, TypeScript, Java, Apex, Groovy, Objective C, C, C++ and Rust.EmmetEmmet is a plugin for many popular text editors which greatly improves HTML &amp; CSS workflow:Githttps://packagecontrol.io/packages/GitGitGutterA Sublime Text 2/3 plugin to see git diff in gutterPhpDocPhpDoc support package.SideBarEnhancementsProvides enhancements to the operations on Sidebar of Files and Folders for Sublime Text. http://www.sublimetext.com/ Notably provides delete as “move to trash”, open with.. and a clipboard. Close, move, open and restore buffers affected by a rename/move command. (even on folders)SublimeLinterInteractive code linting framework for Sublime Text 3SublimeLinter-phpSublimeLinter 3 plugin for PHP, using php -l.DocPHPShow the document of current function on Sublime Text.Material ThemeMaterial Theme, the most epic theme for Sublime Text 3 by Mattia AstorinoStatusbar PathSince I use Sublime in fullscreen most of the time its really usefull to have the complete path of the file I’m working on on the status bar.PHPfmtThis one is essential so you dont have to worry about your indentation in php.Here’s my config:{\"enable_auto_align\": false,\"indent_with_space\": true,\"passes\":[\t\"ConvertOpenTagWithEcho\",\t\"PrettyPrintDocBlocks\",\t\"ReturnNull\",\t\"OnlyOrderUseClauses\"],\"psr1\": false,\"psr2\": true,\"version\": 2}And finally my config file:{  \"auto_complete_commit_on_tab\": false,  \"bold_folder_labels\": true,  \"caret_style\": \"phase\",  \"color_scheme\": \"Packages/Material Theme/schemes/Material-Theme.tmTheme\",  \"detect_indentation\": false,  \"draw_white_space\": \"all\",  \"fallback_encoding\": \"UTF-8\",  \"file_exclude_patterns\":  [\t  \"*.pyc\",\t  \"*.pyo\",\t  \"*.exe\",\t  \"*.dll\",\t  \"*.obj\",\t  \"*.o\",\t  \"*.a\",\t  \"*.lib\",\t  \"*.so\",\t  \"*.dylib\",\t  \"*.ncb\",\t  \"*.sdf\",\t  \"*.suo\",\t  \"*.pdb\",\t  \"*.idb\",\t  \".DS_Store\",\t  \"*.class\",\t  \"*.psd\",\t  \"*.db\"  ],  \"folder_exclude_patterns\":  [\t  \".svn\",\t  \".hg\",\t  \"CVS\",\t  \".hgcheck\"  ],  \"font_face\": \"M+ 1mn light\",  \"font_size\": 14,  \"highlight_line\": true,  \"highlight_modified_tabs\": true,  \"ignored_packages\":  [\t  \"Vintage\"  ],  \"line_padding_bottom\": 1,  \"line_padding_top\": 2,  \"match_brackets\": true,  \"match_brackets_angle\": true,  \"match_brackets_braces\": true,  \"match_brackets_content\": true,  \"match_brackets_square\": true,  \"rulers\":  [\t  80,\t  120  ],  \"scroll_past_end\": true,  \"show_full_path\": true,  \"tab_size\": 4,  \"tabs_small\": true,  \"theme\": \"Material-Theme.sublime-theme\",  \"translate_tabs_to_spaces\": true,  \"trim_trailing_white_space_on_save\": true,  \"vintage_ctrl_keys\": true,  \"vintage_start_in_command_mode\": false,  \"word_wrap\": true}Keybindings[\t{ \"keys\": [\"ctrl+shift+left\"], \"command\": \"next_view_in_stack\" },\t{ \"keys\": [\"ctrl+shift+right\"], \"command\": \"prev_view_in_stack\" },\t{ \"keys\": [\"alt+d\"], \"command\": \"goto_definition\" },\t{ \"keys\": [\"ctrl+7\"], \"command\": \"toggle_comment\", \"args\": { \"block\": false } },\t{ \"keys\": [\"ctrl+shift+7\"], \"command\": \"toggle_comment\", \"args\": { \"block\": true } }]This way if you don’t need to click to use the goto definition functionality.If you want to use the same font I use you can find it here on some ocasions I also use M+ 2m. One other thing I also like to change is the application icon. At home I use this one.If you really want to go nuts about it you can also add a icon package thing so all your icon files are specific to the type of file you have open. Some themes have that, some don’t. To solve that just use this repo here and follow all the instructions.",
                "content_html": "<p>For the last 4 years or so I’ve been using sublime text 2. I bought the license, therefore I saw no point in upgrading. Until today, when I found out that I could use my ST2 license on ST3 (beta). Today was configuration day and I re-configured editor or choice.</p><!--more--><p><strong>Packages</strong></p><p><strong><a href=\"https://packagecontrol.io\">Package Control</a></strong></p><p>The Sublime Text package manager that makes it exceedingly simple to find, install and keep packages up-to-date.</p><p><strong><a href=\"https://packagecontrol.io/packages/BracketHighlighter\">BracketHighligher</a></strong></p><p>Bracket Highlighter matches a variety of brackets such as: [], (), {}, “”, ‘’, #!xml <tag></tag>, and even custom brackets.</p><p>This was originally forked from pyparadigm’s SublimeBrackets and SublimeTagmatcher (both are no longer available). I forked this to fix some issues I had and to add some features I had wanted. I also wanted to improve the efficiency of the matching.</p><p><strong><a href=\"https://packagecontrol.io/packages/CodeIgniter%20Snippets\">Codeigniter Snippets</a></strong></p><p>A list of codeigniter snippets for Sublime Text 2. If you use Codeigniter this is a must have.</p><p><strong><a href=\"https://packagecontrol.io/packages/DocBlockr\">DocBlockr</a></strong></p><p>DocBlockr is a package for Sublime Text 2 &amp; 3 which makes writing documentation a breeze. DocBlockr supports JavaScript (including ES6), PHP, ActionScript, Haxe, CoffeeScript, TypeScript, Java, Apex, Groovy, Objective C, C, C++ and Rust.</p><p><strong><a href=\"https://packagecontrol.io/packages/Emmet\">Emmet</a></strong></p><p>Emmet is a plugin for many popular text editors which greatly improves HTML &amp; CSS workflow:</p><p><strong><a href=\"https://packagecontrol.io/packages/Git\">Git</a></strong></p><p>https://packagecontrol.io/packages/Git</p><p><strong><a href=\"https://packagecontrol.io/packages/GitGutter\">GitGutter</a></strong></p><p>A Sublime Text 2/3 plugin to see git diff in gutter</p><p><strong><a href=\"https://packagecontrol.io/packages/PhpDoc\">PhpDoc</a></strong></p><p>PhpDoc support package.</p><p><strong><a href=\"https://packagecontrol.io/packages/SideBarEnhancements\">SideBarEnhancements</a></strong></p><p>Provides enhancements to the operations on Sidebar of Files and Folders for Sublime Text. http://www.sublimetext.com/ Notably provides delete as “move to trash”, open with.. and a clipboard. Close, move, open and restore buffers affected by a rename/move command. (even on folders)</p><p><strong><a href=\"https://packagecontrol.io/packages/SublimeLinter\">SublimeLinter</a></strong></p><p>Interactive code linting framework for Sublime Text 3</p><p><strong><a href=\"https://packagecontrol.io/packages/SublimeLinter-php\">SublimeLinter-php</a></strong></p><p>SublimeLinter 3 plugin for PHP, using php -l.</p><p><strong><a href=\"https://packagecontrol.io/packages/DocPHPManualer\">DocPHP</a></strong></p><p>Show the document of current function on Sublime Text.</p><p><strong><a href=\"https://packagecontrol.io/packages/Material%20Theme\">Material Theme</a></strong></p><p>Material Theme, the most epic theme for Sublime Text 3 by Mattia Astorino</p><p><strong><a href=\"https://packagecontrol.io/packages/Statusbar%20Path\">Statusbar Path</a></strong></p><p>Since I use Sublime in fullscreen most of the time its really usefull to have the complete path of the file I’m working on on the status bar.</p><p><strong><a href=\"https://packagecontrol.io/packages/phpfmt\">PHPfmt</a></strong></p><p>This one is essential so you dont have to worry about your indentation in php.</p><p>Here’s my config:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{\"enable_auto_align\": false,\"indent_with_space\": true,\"passes\":[\t\"ConvertOpenTagWithEcho\",\t\"PrettyPrintDocBlocks\",\t\"ReturnNull\",\t\"OnlyOrderUseClauses\"],\"psr1\": false,\"psr2\": true,\"version\": 2}</code></pre></div></div><p><strong>And finally my config file:</strong></p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{  \"auto_complete_commit_on_tab\": false,  \"bold_folder_labels\": true,  \"caret_style\": \"phase\",  \"color_scheme\": \"Packages/Material Theme/schemes/Material-Theme.tmTheme\",  \"detect_indentation\": false,  \"draw_white_space\": \"all\",  \"fallback_encoding\": \"UTF-8\",  \"file_exclude_patterns\":  [\t  \"*.pyc\",\t  \"*.pyo\",\t  \"*.exe\",\t  \"*.dll\",\t  \"*.obj\",\t  \"*.o\",\t  \"*.a\",\t  \"*.lib\",\t  \"*.so\",\t  \"*.dylib\",\t  \"*.ncb\",\t  \"*.sdf\",\t  \"*.suo\",\t  \"*.pdb\",\t  \"*.idb\",\t  \".DS_Store\",\t  \"*.class\",\t  \"*.psd\",\t  \"*.db\"  ],  \"folder_exclude_patterns\":  [\t  \".svn\",\t  \".hg\",\t  \"CVS\",\t  \".hgcheck\"  ],  \"font_face\": \"M+ 1mn light\",  \"font_size\": 14,  \"highlight_line\": true,  \"highlight_modified_tabs\": true,  \"ignored_packages\":  [\t  \"Vintage\"  ],  \"line_padding_bottom\": 1,  \"line_padding_top\": 2,  \"match_brackets\": true,  \"match_brackets_angle\": true,  \"match_brackets_braces\": true,  \"match_brackets_content\": true,  \"match_brackets_square\": true,  \"rulers\":  [\t  80,\t  120  ],  \"scroll_past_end\": true,  \"show_full_path\": true,  \"tab_size\": 4,  \"tabs_small\": true,  \"theme\": \"Material-Theme.sublime-theme\",  \"translate_tabs_to_spaces\": true,  \"trim_trailing_white_space_on_save\": true,  \"vintage_ctrl_keys\": true,  \"vintage_start_in_command_mode\": false,  \"word_wrap\": true}</code></pre></div></div><p><strong>Keybindings</strong></p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>[\t{ \"keys\": [\"ctrl+shift+left\"], \"command\": \"next_view_in_stack\" },\t{ \"keys\": [\"ctrl+shift+right\"], \"command\": \"prev_view_in_stack\" },\t{ \"keys\": [\"alt+d\"], \"command\": \"goto_definition\" },\t{ \"keys\": [\"ctrl+7\"], \"command\": \"toggle_comment\", \"args\": { \"block\": false } },\t{ \"keys\": [\"ctrl+shift+7\"], \"command\": \"toggle_comment\", \"args\": { \"block\": true } }]</code></pre></div></div><p>This way if you don’t need to click to use the goto definition functionality.</p><p>If you want to use the same font I use you can find it <a href=\"http://www.fontspace.com/m-fonts/m-1mn\">here</a> on some ocasions I also use <a href=\"http://www.fontspace.com/search/?q=M%2B+2m\">M+ 2m</a>. One other thing I also like to change is the application icon. At home I use <a href=\"https://dribbble.com/shots/2289001-Sublime-Text-Icon-Replacement\">this one</a>.</p><p>If you really want to go nuts about it you can also add a icon package thing so all your icon files are specific to the type of file you have open. Some themes have that, some don’t. To solve that just use <a href=\"https://github.com/mrmartineau/SetiUI-Icons-Sublime\">this repo here</a> and follow all the instructions.</p>",
                "url": "http://localhost:4000/post/my-sublime-text-3-config/",
                
                
                "categories": ["sublime text","sublime"],                
                
                "tags": ["sublime, sublime-text"],
                "date_published": "2017-02-02T00:00:00+00:00",
                "date_modified": "2017-02-02T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Are you still using NFS to sync your file over to your virtual box?",
                "content_text": "For quite a while I must admit I been using this method to sync my files. This has been problematic, files not really syncing in real time can be a pain in the ass, sepecially when you’re making changes on front-end and want to see those changes on the fly.So, do yourself a favor and change to rsync. To do so, you just need to edit your vagrant file for something like this:config.vm.synced_folder \"./\", \"/vagrant\", type: \"rsync\",    rsync__exclude: \".git/\"This way you’re using rsync and you’re excluding your git folder. You can add other folder there. Now, when you start your vagrant box you have to do this:$ vagrant up$ vagrant rsync-autoAnd your files will be synced automatically.",
                "content_html": "<p>For quite a while I must admit I been using this method to sync my files. This has been problematic, files not really syncing in real time can be a pain in the ass, sepecially when you’re making changes on front-end and want to see those changes on the fly.</p><p>So, do yourself a favor and change to rsync. To do so, you just need to edit your vagrant file for something like this:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>config.vm.synced_folder \"./\", \"/vagrant\", type: \"rsync\",    rsync__exclude: \".git/\"</code></pre></div></div><p>This way you’re using rsync and you’re excluding your git folder. You can add other folder there. Now, when you start your vagrant box you have to do this:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ vagrant up$ vagrant rsync-auto</code></pre></div></div><p>And your files will be synced automatically.</p>",
                "url": "http://localhost:4000/post/are-you-still-using-nfs-to-sync-your-file-over-to-your-virtual-box/",
                
                
                "categories": ["box","development","vagrant"],                
                
                "tags": ["box,development,vagrant"],
                "date_published": "2017-01-19T00:00:00+00:00",
                "date_modified": "2017-01-19T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Need a legacy vagrant box?",
                "content_text": "Last week I was contacted by some really old client. You know, the kind of client that you think that they don’t even have the app you made for them online anymore.Turns out, they do have such app online, and they wanted me to change some minor things in it. But obviously I couldn’t do it directly in production. I needed to create a local environment that would mimic the one the client had.I havent developed anything in PHP 5.3 in a long time, and since I’m using vagrant mostly with Phansible I couldnt create a machine with it. Because the oldest PHP version phansible supports is 5.4.So I made a small box that supports what I needed and here’s what you need to do:Download the box and init vagrant$ vagrant box add legacy-box https://www.dropbox.com/s/ch0rq7ajonkzimp/lucid64-lamp.box?dl=1$ vagrant init legacy-boxEdit your vagrant fileconfig.vm.network \"private_network\", ip: \"192.168.33.10\"config.vm.synced_folder \"./\", \"/vagrant\", type: \"nfs\"Boot up the machine$ vagrant up$ vagrant sshYou can add this to your provision id you want$ sudo apt-get install php5 // no futuro adicionar à provision$ sudo apt-get install php5-cli // no futuro adicionar à provisionIf you need mysql you might want yo edit your bindaddress so you can connect via ssh tunnel$ sudo nano /etc/mysql/my.cnfbindaddress passa de 127.0.0.1 a 0.0.0.0 // no futuro adicionar à provisionWith the lattest versions of vagrant using such a old version of ubuntu you might need to create this file with the following contents$ cat /etc/os-releaseNAME=\"Ubuntu\"VERSION=\"12.04 LTS, Precise Pangolin\"ID=ubuntuID_LIKE=debianPRETTY_NAME=\"Ubuntu precise (12.04 LTS)\"VERSION_ID=\"12.04\"Exit and restart the machine$ exit$ vagrant reloadHere’s your default connection to mysqlhost: 127.0.0.1user: rootpassword: passwordSSH host: 192.168.33.10SSH user: vagrantSSH pass: vagrantEnjoy!",
                "content_html": "<p>Last week I was contacted by some really old client. You know, the kind of client that you think that they don’t even have the app you made for them online anymore.</p><p>Turns out, they do have such app online, and they wanted me to change some minor things in it. But obviously I couldn’t do it directly in production. I needed to create a local environment that would mimic the one the client had.</p><!--more--><p>I havent developed anything in PHP 5.3 in a long time, and since I’m using vagrant mostly with <a href=\"http://phansible.com/\">Phansible</a> I couldnt create a machine with it. Because the oldest PHP version phansible supports is 5.4.</p><p>So I made a small box that supports what I needed and here’s what you need to do:</p><h3 id=\"download-the-box-and-init-vagrant\">Download the box and init vagrant</h3><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ vagrant box add legacy-box https://www.dropbox.com/s/ch0rq7ajonkzimp/lucid64-lamp.box?dl=1$ vagrant init legacy-box</code></pre></div></div><h3 id=\"edit-your-vagrant-file\">Edit your vagrant file</h3><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>config.vm.network \"private_network\", ip: \"192.168.33.10\"config.vm.synced_folder \"./\", \"/vagrant\", type: \"nfs\"</code></pre></div></div><h3 id=\"boot-up-the-machine\">Boot up the machine</h3><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ vagrant up$ vagrant ssh</code></pre></div></div><h3 id=\"you-can-add-this-to-your-provision-id-you-want\">You can add this to your provision id you want</h3><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo apt-get install php5 // no futuro adicionar à provision$ sudo apt-get install php5-cli // no futuro adicionar à provision</code></pre></div></div><h3 id=\"if-you-need-mysql-you-might-want-yo-edit-your-bindaddress-so-you-can-connect-via-ssh-tunnel\">If you need mysql you might want yo edit your bindaddress so you can connect via ssh tunnel</h3><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo nano /etc/mysql/my.cnfbindaddress passa de 127.0.0.1 a 0.0.0.0 // no futuro adicionar à provision</code></pre></div></div><h3 id=\"with-the-lattest-versions-of-vagrant-using-such-a-old-version-of-ubuntu-you-might-need-to-create-this-file-with-the-following-contents\">With the lattest versions of vagrant using such a old version of ubuntu you might need to create this file with the following contents</h3><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ cat /etc/os-releaseNAME=\"Ubuntu\"VERSION=\"12.04 LTS, Precise Pangolin\"ID=ubuntuID_LIKE=debianPRETTY_NAME=\"Ubuntu precise (12.04 LTS)\"VERSION_ID=\"12.04\"</code></pre></div></div><h3 id=\"exit-and-restart-the-machine\">Exit and restart the machine</h3><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ exit$ vagrant reload</code></pre></div></div><h3 id=\"heres-your-default-connection-to-mysql\">Here’s your default connection to mysql</h3><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>host: 127.0.0.1user: rootpassword: passwordSSH host: 192.168.33.10SSH user: vagrantSSH pass: vagrant</code></pre></div></div><p>Enjoy!</p>",
                "url": "http://localhost:4000/post/do-you-need-a-legacy-vagrant-box/",
                
                
                "categories": ["apache","box","mysql","phansible","php","vagrant"],                
                
                "tags": ["apache,box,mysql,phansible,php,vagrant"],
                "date_published": "2016-08-06T00:00:00+01:00",
                "date_modified": "2016-08-06T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Using PuPHPet and then connecting to your mysql via SSH tunnel",
                "content_text": "I just did a fresh install of vagrant and built it using the online tool from PuPHPet. Had everything ready but I wasn’t able to connect to my mysql server.The problem was in my SSH password. I thought it was this one:u. vagrantp. vagrantBut for some reason it wasn’t (yes it was left it as the default one from PuPHPet). So for consistency now everytime I do a fresh install I  always do a few things; Access my machine via SSH.    $ vagrant sshChanging the way your server deals with mysql connections.    $ sudo nano /etc/mysql/my.cnfHere you want to find the bindaddress setting which will be set to 127.0.0.0 and change it to 0.0.0.0. Don’t forget to restart the mysql server after this.    $ sudo service mysql restartAnythins left to do is change your password to “vagrant” for consistency.    $ passwdThat’s it, now you can connect without any problems via SSH tunnel to your mysql.",
                "content_html": "<p>I just did a fresh install of vagrant and built it using the online tool from PuPHPet. Had everything ready but I wasn’t able to connect to my mysql server.</p><!--more--><p>The problem was in my SSH password. I thought it was this one:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>u. vagrantp. vagrant</code></pre></div></div><p>But for some reason it wasn’t (yes it was left it as the default one from PuPHPet). So for consistency now everytime I do a fresh install I  always do a few things; Access my machine via SSH.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    $ vagrant ssh</code></pre></div></div><p>Changing the way your server deals with mysql connections.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    $ sudo nano /etc/mysql/my.cnf</code></pre></div></div><p>Here you want to find the bindaddress setting which will be set to 127.0.0.0 and change it to 0.0.0.0. Don’t forget to restart the mysql server after this.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    $ sudo service mysql restart</code></pre></div></div><p>Anythins left to do is change your password to “vagrant” for consistency.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    $ passwd</code></pre></div></div><p>That’s it, now you can connect without any problems via SSH tunnel to your mysql.</p>",
                "url": "http://localhost:4000/post/using-puphpet-and-they-connecting-to-your-mysql-via-ssh-tunnel/",
                
                
                "categories": ["mysql","php","puphpet","vagrant"],                
                
                "tags": ["mysql,php,puphpet,vagrant"],
                "date_published": "2016-02-21T00:00:00+00:00",
                "date_modified": "2016-02-21T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "CodeIgniter Announces an Interim Council",
                "content_text": "Elislab wanted to focus their development into the product that actually made them money. Nothing wrong about that. They started to look for a someone to take care of Codeigniter. The community started to panic. Months have passed and finally codeigniter has a new home.  The British Columbia Institute of Technology (BCIT) in Vancouver, Canada is a highly regarded applied technology institute with 48,000 full and part-time students. Their impressive BCIT School of Computing and Academic Studies teaches CodeIgniter to 150 students a year. Now, they are its stewards.This was a great announcement in my opinion. As soon as they started to move their stuff into the new repo, and even get a new website everyone got excited again. Things are starting to move again.The CodeIgniter project has an interim council, to oversee the release of CodeIgniter 3 and to steer the framework to the next level.   Andreas Pfotenhauer - Although I never met him in real life I think of him as a wise friend from the #codeigniter freenode channel.   Andrey Andreev - Our codeigniter hero, keep going buddy   Ben Edmunds - I’ve been using his code for years, he’s a great addition to the project   David Wosnitza - Long term Codeigniter user and abuser like myself   Jim Parry - He’s the one in charge now, good luck to you   Lonnie Ezell - Another great addition to the projectI’m happy that Pfotenhauer, Andrey, David, and Ben are on this. All stand up guys that have done a lot for the framework over the years either helping with the development or just helping or advising others on IRC.",
                "content_html": "<p>Elislab wanted to focus their development into the product that actually made them money. Nothing wrong about that. They started to look for a someone to take care of Codeigniter. The community started to panic. Months have passed and finally codeigniter has a new home.</p><blockquote>  <p>The British Columbia Institute of Technology (BCIT) in Vancouver, Canada is a highly regarded applied technology institute with 48,000 full and part-time students. Their impressive BCIT School of Computing and Academic Studies teaches CodeIgniter to 150 students a year. Now, they are its stewards.</p></blockquote><!--more--><p>This was a great announcement in my opinion. As soon as they started to move their stuff into the new repo, and even get a new website everyone got excited again. Things are starting to move again.</p><p>The CodeIgniter project has an interim council, to oversee the release of CodeIgniter 3 and to steer the framework to the next level.</p><ul>  <li><i class=\"icon-angle-right\"></i> <strong>Andreas Pfotenhauer</strong> - Although I never met him in real life I think of him as a wise friend from the #codeigniter freenode channel.</li>  <li><i class=\"icon-angle-right\"></i> <strong>Andrey Andreev</strong> - Our codeigniter hero, keep going buddy</li>  <li><i class=\"icon-angle-right\"></i> <strong>Ben Edmunds</strong> - I’ve been using his code for years, he’s a great addition to the project</li>  <li><i class=\"icon-angle-right\"></i> <strong>David Wosnitza</strong> - Long term Codeigniter user and abuser like myself</li>  <li><i class=\"icon-angle-right\"></i> <strong>Jim Parry</strong> - He’s the one in charge now, good luck to you</li>  <li><i class=\"icon-angle-right\"></i> <strong>Lonnie Ezell</strong> - Another great addition to the project</li></ul><p>I’m happy that Pfotenhauer, Andrey, David, and Ben are on this. All stand up guys that have done a lot for the framework over the years either helping with the development or just helping or advising others on IRC.</p>",
                "url": "http://localhost:4000/post/codeigniter-announces-an-interim-council/",
                
                
                "categories": ["codeigniter"],                
                
                "tags": ["codeigniter"],
                "date_published": "2014-11-05T00:00:00+00:00",
                "date_modified": "2014-11-05T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Never Deny Your Users",
                "content_text": "A few weeks ago I came across a problem that I haven’t had to deal with before. I was visiting a website on my computer, everything was normal. I could see all the information. That was exactly what I was expecting. Later that evening I wanted to show that website to a friend, but I was on my phone. When I got to the website on my phone I got this big message saying the website was not avaiable on my phone. As in, sure they didn’t bother to make a mobile version of the website and that’s ok. Instead they used the time they should be using to make a mobile version of that website to actually block all the users using smaller screens.Seriously, just show me website in plain text. I wouldn’t mind that, really. Imagine my frustration if I happen to need your contacts. I pick up my phone, go to your website, and just got a message saying that",
                "content_html": "<p>A few weeks ago I came across a problem that I haven’t had to deal with before. I was visiting a website on my computer, everything was normal. I could see all the information. That was exactly what I was expecting. Later that evening I wanted to show that website to a friend, but I was on my phone. When I got to the website on my phone I got this big message saying the website was not avaiable on my phone. As in, sure they didn’t bother to make a mobile version of the website and that’s ok. Instead they used the time they should be using to make a mobile version of that website to actually block all the users using smaller screens.</p><p>Seriously, just show me website in plain text. I wouldn’t mind that, really. Imagine my frustration if I happen to need your contacts. I pick up my phone, go to your website, and just got a message saying that</p>",
                "url": "http://localhost:4000/post/never-deny-your-users/",
                
                                
                
                "date_published": "2014-08-07T00:00:00+01:00",
                "date_modified": "2014-08-07T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "Shawn Mccool Laravel.io, A Use Case Architecture",
                "content_text": "A talk from my buddy Shawn MacCool about command oriented interfaces and domain-events from Laracon in New York City.",
                "content_html": "<iframe width=\"100%\" height=\"350\" src=\"//www.youtube.com/embed/2_380DKU93U?rel=0\" frameborder=\"0\" allowfullscreen=\"\"></iframe><p>A talk from my buddy Shawn MacCool about command oriented interfaces and domain-events from Laracon in New York City.</p>",
                "url": "http://localhost:4000/post/shawn-mccool-laravel.io,-a-use-case-architecture/",
                
                                
                
                "date_published": "2014-06-27T00:00:00+01:00",
                "date_modified": "2014-06-27T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "The intern feeling",
                "content_text": "Every now and again we come across someone that can easily give us the “Intern feeling”. No, not the “Bring me my coffee” feeling. But more of someone that know so much about something that you just want to be around him or her to absorb everything.This is probably one of the best things about working on the web development field. Nobody knows everything about the subject, but there’s always someone that knows a bit more than you do, and if you’re willing to learn and listen, you ca grow everyday.He’s the thing that I’ll never understand, some people don’t like to be around others that clearly know more than they do about the subject. They feel rejected or inferior. I tell you what, if someday I’ll happen to take on a job where I’m the moron, and I’m the person that knows less about the stuff we’re working on, man I’ll be so happy (i’ll be sad if after a year i’m still the moron). Imagine learning something new everyday without even having to look for it. Just in your normal day job, talking with your peers.Just be happy that you’re learning or have someone to learn from everyday.",
                "content_html": "<p>Every now and again we come across someone that can easily give us the <em>“Intern feeling”</em>. No, not the <em>“Bring me my coffee”</em> feeling. But more of someone that know so much about something that you just want to be around him or her to absorb everything.</p><p>This is probably one of the best things about working on the web development field. Nobody knows everything about the subject, but there’s always someone that knows a bit more than you do, and if you’re willing to learn and listen, you ca grow everyday.</p><!--more--><p><img src=\"https://dl.dropboxusercontent.com/u/404972/blog/intern.png\" alt=\"Lerning something\" /></p><p>He’s the thing that I’ll never understand, some people don’t like to be around others that clearly know more than they do about the subject. They feel rejected or inferior. I tell you what, if someday I’ll happen to take on a job where I’m the moron, and I’m the person that knows less about the stuff we’re working on, man I’ll be so happy (i’ll be sad if after a year i’m still the moron). Imagine learning something new everyday without even having to look for it. Just in your normal day job, talking with your peers.</p><p>Just be happy that you’re learning or have someone to learn from everyday.</p>",
                "url": "http://localhost:4000/post/the-intern-feeling/",
                
                
                "categories": ["life","Webdev","work","workflow"],                
                
                "tags": ["life,Webdev,work,workflow"],
                "date_published": "2014-06-22T00:00:00+01:00",
                "date_modified": "2014-06-22T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Form Submit == 403 Error?",
                "content_text": "From time to time, I have to work on a really crappy server. They have the weirdest rules of all, they’re obssed with security. I don’t have a right to see logs, they randomly block my IP from time to time. I can’t even call phpinfo(). Yeah, that bad!Today I ran into a problem that made me go mad. I had a simple form with just a few fields. Locally the form was submiting via $_POST and everything was great.But when I pushed my code to that server I couldn’t submit anything. The server was not getting the $_POST and it was interpreting everything as $_GET.Turns out they turned on mod_security and one of my fields was supposed to be a url. But for some scurity reason if one of my input fields had http:// in it, they blocked the request.First thing that came to mind: remove the http:// with javascript before submit and then add it back when I need it.But that’s just nonsense!Turns out if I have my input field called something_url the mod_security will be expecting the value to be one url and it will not block my request.So here’s my tip, if you have a project that you’re deploying to a server that you have no control of, everytime you have a input that will be used to insert a url, you should “always” shove the sufix _url.",
                "content_html": "<p>From time to time, I have to work on a really crappy server. They have the weirdest rules of all, they’re obssed with security. I don’t have a right to see logs, they randomly block my IP from time to time. I can’t even call <a href=\"http://pt1.php.net/phpinfo\">phpinfo()</a>. Yeah, that bad!</p><p>Today I ran into a problem that made me go mad. I had a simple form with just a few fields. Locally the form was submiting via <em><a href=\"http://www.php.net/manual/en/reserved.variables.post.php\">$_POST</a></em> and everything was great.</p><!--more--><p>But when I pushed my code to that server I couldn’t submit anything. The server was not getting the <em><a href=\"http://www.php.net/manual/en/reserved.variables.post.php\">$_POST</a></em> and it was interpreting everything as <em><a href=\"http://www.php.net/manual/en/reserved.variables.get.php\">$_GET</a></em>.</p><p>Turns out they turned on <a href=\"http://en.wikipedia.org/wiki/ModSecurity\">mod_security</a> and one of my fields was supposed to be a url. But for some scurity reason if one of my input fields had <em>http://</em> in it, they blocked the request.</p><p>First thing that came to mind: remove the <em>http://</em> with javascript before submit and then add it back when I need it.</p><p>But that’s just nonsense!</p><p>Turns out if I have my input field called <em>something_url</em> the <a href=\"http://en.wikipedia.org/wiki/ModSecurity\">mod_security</a> will be expecting the value to be one url and it will not block my request.</p><p>So here’s my tip, if you have a project that you’re deploying to a server that you have no control of, everytime you have a input that will be used to insert a url, you should “always” shove the sufix _url.</p>",
                "url": "http://localhost:4000/post/form-submit-403-error/",
                
                
                "categories": ["apache","mod_security","server","web","Webdev"],                
                
                "tags": ["apache,mod_security,server,web,Webdev"],
                "date_published": "2014-05-08T00:00:00+01:00",
                "date_modified": "2014-05-08T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "We are not tools",
                "content_text": "Yes, this will be a rant. Yes, this will have a lot of cursing involved. If you have any problems with that you should remove yourself out of the premisses. Moving on.A lot of people have this preposterous idea that designers, developers, web-designers and everyone working in, or for the creative business, are just tools. They exist to make all demands no matter what they are. well, I’m a web-developer. Sometimes I do some web-design work too. But I don’t even begin to imagine the crappy feeling my fellow designers must feel when they have to give up to the clients demands.Let me tell you a little story, and you tell me what you think about it.  Patient: Doctor, I have a pain in my back. I don’t know what it is. Can you take a look?  Doctor: Sure I can. Let me see. Well, this looks like a real problem. Have you been lifting a lot of weights at work?  Patient: Yes, I’m a construction worker.  Doctor: Well, you have to stop doing what your doing for a while. You should rest or you’ll have some real problems in the future. Also I’m going to prescribe you this medicine and you’ll be better in no time.  Patient: Thank you so much. I’ll do just that.This looks like a normal conversation between a doctor and a patient right? You’re right. This is exactly what normally happens. Now let’s imagine for a moment that the doctor was a designer and the conversation between them would be much different.  Patient: Doctor, I have a pain in my back. I know what it is and I know exactly what medicine I need.  Doctor: But, you don’t need that medicine, you need this one instead.  Patient: No! It’s my back. It’s my money and I want that medicine.  Doctor: Are you sure? Because your back will get a lot worst with that.  Patient: Yes, I’m sure.  Doctor: Ok then. Don’t came here complaining afterwards.Can you spot any differences? I’m sure you can. The patient don’t even care about the doctor opinion on his back pain. He thinks he knows what he has and what medicine he needs. But you know what? The doctor would never give up to the patient demands. He would tell me to take the correct medicine and that would be final. After all, he studied for years and years for that.See what I’m aiming here? Why don’t we as designers, developers and web-designers do the same with our clients? Well because we are a bunch of fucking pussies. We think: “if I don’t do it, someone will and I’m going to lose the client”.But my experience (and I don’t have more than a few years) the client will realise that they were wrong. Sure you’ll lose a lot of clients on the way. But your portfolio will be better. Will attract more clients that will understand your vision. And sometimes, some of those clients that you lost will come back, because they realised how fucked up their decision was, and how it affected their product or company.Now you see the real problem. What if a doctor were to give the wrong medicine to the patient just because he asked for it? Who should we blame? The patient, because he was being a cunt and just wanted to feel superior towards the doctor? Or the doctor, because the didn’t do his job?The law will blame the doctor. I blame the doctor. What about you?Next time you feel that you’re being forced to do a bad job, just think about that. It’s our job as professionals to teach our clients and most of all, earn some fucking respect.ps: This article was directed to designers, developers and web-designers. But if you’re none of them you may be a potential client. If you are. Please, start trusting the people you hire to help you. You are hiring them for a reason. The reason is that you’re not qualified to do the job. So let us do our fucking job. ",
                "content_html": "<p>Yes, this will be a rant. Yes, this will have a lot of cursing involved. If you have any problems with that you should remove yourself out of the premisses. Moving on.</p><p>A lot of people have this preposterous idea that designers, developers, web-designers and everyone working in, or for the creative business, are just tools. They exist to make all demands no matter what they are. well, I’m a web-developer. Sometimes I do some web-design work too. But I don’t even begin to imagine the crappy feeling my fellow designers must feel when they have to give up to the clients demands.</p><!--more--><p>Let me tell you a little story, and you tell me what you think about it.</p><blockquote>  <p><strong>Patient:</strong> Doctor, I have a pain in my back. I don’t know what it is. Can you take a look?</p></blockquote><blockquote>  <p><strong>Doctor:</strong> Sure I can. Let me see. Well, this looks like a real problem. Have you been lifting a lot of weights at work?</p></blockquote><blockquote>  <p><strong>Patient:</strong> Yes, I’m a construction worker.</p></blockquote><blockquote>  <p><strong>Doctor:</strong> Well, you have to stop doing what your doing for a while. You should rest or you’ll have some real problems in the future. Also I’m going to prescribe you this medicine and you’ll be better in no time.</p></blockquote><blockquote>  <p><strong>Patient:</strong> Thank you so much. I’ll do just that.</p></blockquote><p>This looks like a normal conversation between a doctor and a patient right? You’re right. This is exactly what normally happens. Now let’s imagine for a moment that the doctor was a designer and the conversation between them would be much different.</p><blockquote>  <p><strong>Patient:</strong> Doctor, I have a pain in my back. I know what it is and I know exactly what medicine I need.</p></blockquote><blockquote>  <p><strong>Doctor:</strong> But, you don’t need that medicine, you need this one instead.</p></blockquote><blockquote>  <p><strong>Patient:</strong> No! It’s my back. It’s my money and I want that medicine.</p></blockquote><blockquote>  <p><strong>Doctor:</strong> Are you sure? Because your back will get a lot worst with that.</p></blockquote><blockquote>  <p><strong>Patient:</strong> Yes, I’m sure.</p></blockquote><blockquote>  <p><strong>Doctor:</strong> Ok then. Don’t came here complaining afterwards.</p></blockquote><p>Can you spot any differences? I’m sure you can. The patient don’t even care about the doctor opinion on his back pain. He thinks he knows what he has and what medicine he needs. But you know what? The doctor would never give up to the patient demands. He would tell me to take the correct medicine and that would be final. After all, he studied for years and years for that.</p><p>See what I’m aiming here? Why don’t we as designers, developers and web-designers do the same with our clients? Well because we are a bunch of fucking pussies. We think: <em>“if I don’t do it, someone will and I’m going to lose the client”</em>.</p><p>But my experience (and I don’t have more than a few years) the client will realise that they were wrong. Sure you’ll lose a lot of clients on the way. But your portfolio will be better. Will attract more clients that will understand your vision. And sometimes, some of those clients that you lost will come back, because they realised how fucked up their decision was, and how it affected their product or company.</p><p>Now you see the real problem. What if a doctor were to give the wrong medicine to the patient just because he asked for it? Who should we blame? The patient, because he was being a cunt and just wanted to feel superior towards the doctor? Or the doctor, because the didn’t do his job?</p><p>The law will blame the doctor. I blame the doctor. What about you?</p><p>Next time you feel that you’re being forced to do a bad job, just think about that. It’s our job as professionals to teach our clients and most of all, earn some fucking respect.</p><p><small><strong>ps:</strong> This article was directed to designers, developers and web-designers. But if you’re none of them you may be a potential client. If you are. Please, start trusting the people you hire to help you. You are hiring them for a reason. The reason is that you’re not qualified to do the job. So let us do our fucking job. </small></p>",
                "url": "http://localhost:4000/post/we-are-not-tools/",
                
                
                "categories": ["design","freelancer","rant","Webdesign","work"],                
                
                "tags": ["design,freelancer,rant,Webdesign,work"],
                "date_published": "2014-02-27T00:00:00+00:00",
                "date_modified": "2014-02-27T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Git extras",
                "content_text": "I’m a heavy git user, hence I’m always trying to improve my workflow while using it. I normally have 3 ways of using git. I could use a gui client (sourcetree), normally I do this when I’m preparing a new release.On my daily code day I would use git inside Sublime Text 2. That way I don’t need to constantly change between my text editor of choice and a git gui or the terminal. However, from time to time, I use just the terminal. That happens for two reasons, one I could be using git remotely, or I could be doing something more difficult that couldn’t be resolved inside sourcetree or Sublime Text.Yesterday I tried this new tool and I’m getting quite found of it. It’s called Git Extras. You have 3 ways of getting it:Clone / Tarball:$ make installOne-liner:$ (cd /tmp &amp;&amp; git clone --depth 1 https://github.com/visionmedia/git-extras.git &amp;&amp; cd git-extras &amp;&amp; sudo make install)MacPorts$ sudo port install git-extrasBrew (buggy):$ brew install git-extrasHere’s a small screencast on how to use it.This tool is specially useful when you’re managing .gitignore files. Or when you want to know all the info about your repo. You just have to type git info and you’ll get something like this:$ git info## Remote URLs:origin              git@github.com:sampleAuthor/git-extras.git (fetch)origin              git@github.com:sampleAuthor/git-extras.git (push)## Remote Branches:origin/HEAD -&gt; origin/masterorigin/myBranch## Local Branches:myBranch* master## Most Recent Commit:commit e3952df2c172c6f3eb533d8d0b1a6c77250769a7Author: Sample Author &lt;sampleAuthor@gmail.com&gt;Added git-info command.Type 'git log' for more commits, or 'git show &lt;commit id&gt;' for full commit details.## Configuration (.git/config):color.diff=autocolor.status=autocolor.branch=autouser.name=Sample Authoruser.email=sampleAuthor@gmail.comcore.repositoryformatversion=0core.filemode=truecore.bare=falsecore.logallrefupdates=truecore.ignorecase=trueremote.origin.fetch=+refs/heads/*:refs/remotes/origin/*remote.origin.url=git@github.com:mub/git-extras.gitbranch.master.remote=originbranch.master.merge=refs/heads/masterAwesome right?",
                "content_html": "<p>I’m a heavy git user, hence I’m always trying to improve my workflow while using it. I normally have 3 ways of using git. I could use a gui client (<a href=\"http://www.sourcetreeapp.com/\">sourcetree</a>), normally I do this when I’m preparing a new release.</p><p>On my daily code day I would use git inside <a href=\"http://www.sublimetext.com/\">Sublime Text 2</a>. That way I don’t need to constantly change between my text editor of choice and a git gui or the terminal. However, from time to time, I use just the terminal. That happens for two reasons, one I could be using git remotely, or I could be doing something more difficult that couldn’t be resolved inside sourcetree or <a href=\"http://www.sublimetext.com/\">Sublime Text</a>.</p><!--more--><p>Yesterday I tried this new tool and I’m getting quite found of it. It’s called Git Extras. You have 3 ways of getting it:</p><p><strong>Clone / Tarball:</strong></p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ make install</code></pre></div></div><p><strong>One-liner:</strong></p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ (cd /tmp &amp;&amp; git clone --depth 1 https://github.com/visionmedia/git-extras.git &amp;&amp; cd git-extras &amp;&amp; sudo make install)</code></pre></div></div><p><strong>MacPorts</strong></p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo port install git-extras</code></pre></div></div><p><strong>Brew (buggy):</strong></p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ brew install git-extras</code></pre></div></div><p>Here’s a small screencast on how to use it.</p><iframe src=\"//player.vimeo.com/video/45506445?color=ffffff\" width=\"100%\" height=\"350\" frameborder=\"0\" webkitallowfullscreen=\"\" mozallowfullscreen=\"\" allowfullscreen=\"\"></iframe><p>This tool is specially useful when you’re managing .gitignore files. Or when you want to know all the info about your repo. You just have to type git info and you’ll get something like this:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ git info## Remote URLs:origin              git@github.com:sampleAuthor/git-extras.git (fetch)origin              git@github.com:sampleAuthor/git-extras.git (push)## Remote Branches:origin/HEAD -&gt; origin/masterorigin/myBranch## Local Branches:myBranch* master## Most Recent Commit:commit e3952df2c172c6f3eb533d8d0b1a6c77250769a7Author: Sample Author &lt;sampleAuthor@gmail.com&gt;Added git-info command.Type 'git log' for more commits, or 'git show &lt;commit id&gt;' for full commit details.## Configuration (.git/config):color.diff=autocolor.status=autocolor.branch=autouser.name=Sample Authoruser.email=sampleAuthor@gmail.comcore.repositoryformatversion=0core.filemode=truecore.bare=falsecore.logallrefupdates=truecore.ignorecase=trueremote.origin.fetch=+refs/heads/*:refs/remotes/origin/*remote.origin.url=git@github.com:mub/git-extras.gitbranch.master.remote=originbranch.master.merge=refs/heads/master</code></pre></div></div><p>Awesome right?</p>",
                "url": "http://localhost:4000/post/git-extras/",
                
                
                "categories": ["alias","extras","Git","Version-control","workflow"],                
                
                "tags": ["alias,extras,Git,Version-control,workflow"],
                "date_published": "2014-02-10T00:00:00+00:00",
                "date_modified": "2014-02-10T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Remove the admin bar on wordpress",
                "content_text": "Yes, lately I’ve been doing some Wordpress stuff. Before you start throwing stones, I’m not doing the kind of stuff to be ashamed about. I’m actually building some blogs.One thing that bothers me a lot is the admin bar on the front-end, always there, always present. Fucking up my css.I looked around a little bit and I found this:\tadd_filter('show_admin_bar', '__return_false');Just shove that in your wp-config.php file and you’ll be good to go.&lt; sarcasm &gt;How awesome is wordpress right?&lt;/ sarcasm &gt;",
                "content_html": "<p>Yes, lately I’ve been doing some Wordpress stuff. Before you start throwing stones, I’m not doing the kind of stuff to be ashamed about. I’m actually building some blogs.</p><p>One thing that bothers me a lot is the admin bar on the front-end, always there, always present. Fucking up my css.</p><!--more--><p>I looked around a little bit and I found this:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\tadd_filter('show_admin_bar', '__return_false');</code></pre></div></div><p>Just shove that in your wp-config.php file and you’ll be good to go.</p><p>&lt; sarcasm &gt;How awesome is wordpress right?&lt;/ sarcasm &gt;</p>",
                "url": "http://localhost:4000/post/remove-the-admin-bar-on-wordpress-front-end/",
                
                
                "categories": ["blog","tips","wordpress"],                
                
                "tags": ["blog,tips,wordpress"],
                "date_published": "2014-02-07T00:00:00+00:00",
                "date_modified": "2014-02-07T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "How to add another virtual host using Vagrant",
                "content_text": "There’s a lot of ways to use Vagrant. Some people create a virtual machine per project. I don’t like that idea. I think it’s best to create a virtual machine for each different server you have to deploy. So if I have 2 projects that are going to be deployed to the same server why should I create two virtual machines? Makes no sense to me. Those two projects belong in the same virtual machine.In any case, I hope I’m not the only one trying to do that. If I am, then I must be wrong and you should stop reading this post. Anyway. If you want to do that, you have to create more than one virtual host so you can have something like:foobar.devnyancat.devblog.devLike when you’re connecting to your database with sequelPro. You must treat your virtual machine like another computer. If you’re using PHPupet it’s quite easy. For this example my virtual machine has Ubuntu installed.Navigate to your project(s) foldermypath/puppet/hieradataOpen common.yamlUnder Vhosts you’ll have something like this:vhosts:    VO6aT11EHJmL:        servername: localhost        docroot: /var/www/public        port: '80'        setenv:            - 'APP_ENV dev'        override:            - All    4yNJr1LpLJYA:        servername: blog.dev        docroot: /var/www/vhosts/blog        port: '80'        setenv:            - 'APP_ENV dev'        override:            - allEach vhost is given a unique identification name and it can be anything. The options for servername, docroot seem simple, so we’ll modify these.Next for the virtual machine to recognize your updates make sure your vagrant is stopped while making these changes. After you’re done restart vagrant. Once vagrant is up go into your directories where your sites-available directory is. In my case i’m using apache under ubuntu./etc/apache2/sites-availableThe files that you will see there, their name will match the unique names that you have in the common.yaml file except there are numbers in them for example:#-unique_name.confSo in the common.yaml file if you created or modified settings under 4yNJr1LpLJYA you would need to look for #-4yNJr1LpLJYA.conf in this directory and match the settings as you have in your common.yaml file. Once you are done restart your server.Also don’t forget to add the virtual host into your local machines host file and match it with the same ip that puphet gave you (or that you configured).Do this for each one that you want to add.ps: if you know another way to manage vhosts quickly while using vagrant. Please, do comment and help a bother out.",
                "content_html": "<p>There’s a lot of ways to use Vagrant. Some people create a virtual machine per project. I don’t like that idea. I think it’s best to create a virtual machine for each different server you have to deploy. So if I have 2 projects that are going to be deployed to the same server why should I create two virtual machines? Makes no sense to me. Those two projects belong in the same virtual machine.</p><!--more--><p>In any case, I hope I’m not the only one trying to do that. If I am, then I must be wrong and you should stop reading this post. Anyway. If you want to do that, you have to create more than one virtual host so you can have something like:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>foobar.devnyancat.devblog.dev</code></pre></div></div><p>Like when you’re connecting to your database with sequelPro. You must treat your virtual machine like another computer. If you’re using PHPupet it’s quite easy. For this example my virtual machine has Ubuntu installed.</p><p><strong>Navigate to your project(s) folder</strong></p><p>mypath/puppet/hieradata</p><p><strong>Open common.yaml</strong></p><p>Under Vhosts you’ll have something like this:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>vhosts:    VO6aT11EHJmL:        servername: localhost        docroot: /var/www/public        port: '80'        setenv:            - 'APP_ENV dev'        override:            - All    4yNJr1LpLJYA:        servername: blog.dev        docroot: /var/www/vhosts/blog        port: '80'        setenv:            - 'APP_ENV dev'        override:            - all</code></pre></div></div><p>Each vhost is given a unique identification name and it can be anything. The options for servername, docroot seem simple, so we’ll modify these.</p><p>Next for the virtual machine to recognize your updates make sure your vagrant is stopped while making these changes. After you’re done restart vagrant. Once vagrant is up go into your directories where your sites-available directory is. In my case i’m using apache under ubuntu.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>/etc/apache2/sites-available</code></pre></div></div><p>The files that you will see there, their name will match the unique names that you have in the common.yaml file except there are numbers in them for example:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>#-unique_name.conf</code></pre></div></div><p>So in the common.yaml file if you created or modified settings under 4yNJr1LpLJYA you would need to look for #-4yNJr1LpLJYA.conf in this directory and match the settings as you have in your common.yaml file. Once you are done restart your server.</p><p>Also don’t forget to add the virtual host into your local machines host file and match it with the same ip that puphet gave you (or that you configured).</p><p>Do this for each one that you want to add.</p><p>ps: if you know another way to manage vhosts quickly while using vagrant. Please, do comment and help a bother out.</p>",
                "url": "http://localhost:4000/post/how-to-add-another-virtual-host-using-vagrant/",
                
                
                "categories": ["development","server","vagrant"],                
                
                "tags": ["development,server,vagrant"],
                "date_published": "2014-01-09T00:00:00+00:00",
                "date_modified": "2014-01-09T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "How to connect to you database using Vagrant",
                "content_text": "As you may or may not know, I started to really use vagrant lately. The installation process to get a PHP development environment is quite easy. However, there was a few moment were I run into a small issues. Most of them happened just because my mind was still programmed to work with a simple Lamp stack.One of the issues that made me lose 20 minutes or so was connecting SequelPro to the database. Sure I installed PHPmyAdmin but I wanted to use my own database management app.All you need to do is create a SSH tunnel to your server. Todo so, you need to use the following settings.Server name: \"YourServerName\" (doesn't really matter)MySQL Host: 127.0.0.1Username: rootPassword: ******Database:Port:SSH Host: 192.168.56.101SSH User: vagrantSSH Password: vagrant (this is the default one)SSD Port:Your first impulse might be to connect using the virtual machine IP as your normal host like I did, but that obviously will not work. Also, took me a while to find out the SSH password, but that happened mostly because I was reading the documentation while I was using it.",
                "content_html": "<p>As you may or may not know, I started to really use vagrant lately. The installation process to get a PHP development environment is quite easy. However, there was a few moment were I run into a small issues. Most of them happened just because my mind was still programmed to work with a simple Lamp stack.</p><p>One of the issues that made me lose 20 minutes or so was connecting SequelPro to the database. Sure I installed PHPmyAdmin but I wanted to use my own database management app.</p><!--more--><p>All you need to do is create a SSH tunnel to your server. Todo so, you need to use the following settings.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Server name: \"YourServerName\" (doesn't really matter)MySQL Host: 127.0.0.1Username: rootPassword: ******Database:Port:SSH Host: 192.168.56.101SSH User: vagrantSSH Password: vagrant (this is the default one)SSD Port:</code></pre></div></div><p>Your first impulse might be to connect using the virtual machine IP as your normal host like I did, but that obviously will not work. Also, took me a while to find out the SSH password, but that happened mostly because I was reading the documentation while I was using it.</p>",
                "url": "http://localhost:4000/post/how-to-connect-to-you-database-using-vagrant/",
                
                
                "categories": ["database","development","mysql","vagrant"],                
                
                "tags": ["database,development,mysql,vagrant"],
                "date_published": "2014-01-05T00:00:00+00:00",
                "date_modified": "2014-01-05T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Getting started with vagrant",
                "content_text": "Recently I wrote a post about my dev setup on mac. However someone has been recommending me for a while to start using Vagrant. But I never did. Specially because my dev setup was working fine.A few days ago, I decided it was time to do a clean install on my mac, and start fresh. That means it’s time for some experimenting.What is Vagrant?  Vagrant is a tool for building complete development environments. With an easy-to-use workflow and focus on automation, Vagrant lowers development environment setup time, increases development/production parity, and makes the “works on my machine” excuse a relic of the past.  Vagrant was started in January 2010 by Mitchell Hashimoto. For almost three years, Vagrant was a side-project for Mitchell, a project that he worked on in his free hours after his full time job. During this time, Vagrant grew to be trusted and used by a range of individuals to entire development teams in large companies.I look at this and I see two features that interest me. First I’ll be developing on a virtual machine that is equal to the one I’ll be deploying in the future. Then, since every configuration, dirty hack or whatever will be done on that virtual machine. My computer will stay clean of all the experimenting a the web developer life requires.I work mainly with PHP, so the best way to start with Vagrant is to use something like puphpet.Puphpet is a simple GUI to set up virtual machines for PHP Web development. In a few simple steps you’ll have your Manifest ready to start working with Vagrant.First you setup the deploy target. In this case it will be local. You choose what kind of virtual machine you need and you give it a name and IP address. Then you setup what path will be synced with the VM.After that is pretty straight forward. You just have to configure some of the aspects of your VM that are specific to you dev environment. This includes: virtual hosts, php version, composer, PEAR modules, PECL Modules, XDebug. All your database preferences, database names, users and passwords. After that you’re ready to go.Before you do anything with the files you just downloaded you need to download VirtualBox and install it. After that the process is quite simple.All you need to do is open your terminal. Navigate to your downloaded files from Puphpet and run the following command:$ vagrant upThis will install and start the virtual machine you ended up choosing. After that, you can access your server with the IP you used during the Puphpet setup process or you can configure the virtual host.Here’s a list of the available commands to use Vagrant.   box - manages boxes: installation, removal, etc.   destroy -stops and deletes all traces of the vagrant machine   halt - stops the vagrant machine   help - shows the help for a subcommand   init - initializes a new Vagrant environment by creating a Vagrantfile   package - packages a running vagrant environment into a box   plugin - manages plugins: install, uninstall, update, etc.   provision - provisions the vagrant machine   reload - restarts vagrant machine, loads new Vagrantfile configuration   resume - resume a suspended vagrant machine   ssh - connects to machine via SSH   ssh-config - outputs OpenSSH valid configuration to connect to the machine   status - outputs status of the vagrant machine   suspend - suspends the machine   up - starts and provisions the vagrant environmentThat’s it. Easy like that.",
                "content_html": "<p>Recently I wrote a post about <a href=\"http://blog.marcomonteiro.net/post/my-dev-setup-on-mac\">my dev setup on mac</a>. However someone has been recommending me for a while to start using Vagrant. But I never did. Specially because my dev setup was working fine.</p><p>A few days ago, I decided it was time to do a clean install on my mac, and start fresh. That means it’s time for some experimenting.</p><!--more--><p><strong>What is Vagrant?</strong></p><blockquote>  <p>Vagrant is a tool for building complete development environments. With an easy-to-use workflow and focus on automation, Vagrant lowers development environment setup time, increases development/production parity, and makes the “works on my machine” excuse a relic of the past.</p></blockquote><blockquote>  <p>Vagrant was started in January 2010 by Mitchell Hashimoto. For almost three years, Vagrant was a side-project for Mitchell, a project that he worked on in his free hours after his full time job. During this time, Vagrant grew to be trusted and used by a range of individuals to entire development teams in large companies.</p></blockquote><p>I look at this and I see two features that interest me. First I’ll be developing on a virtual machine that is equal to the one I’ll be deploying in the future. Then, since every configuration, dirty hack or whatever will be done on that virtual machine. My computer will stay clean of all the experimenting a the web developer life requires.</p><p>I work mainly with PHP, so the best way to start with Vagrant is to use something like <a href=\"https://puphpet.com/\">puphpet</a>.</p><p>Puphpet is a simple GUI to set up virtual machines for PHP Web development. In a few simple steps you’ll have your Manifest ready to start working with Vagrant.</p><p>First you setup the deploy target. In this case it will be local. You choose what kind of virtual machine you need and you give it a name and IP address. Then you setup what path will be synced with the VM.</p><p>After that is pretty straight forward. You just have to configure some of the aspects of your VM that are specific to you dev environment. This includes: virtual hosts, php version, composer, PEAR modules, PECL Modules, XDebug. All your database preferences, database names, users and passwords. After that you’re ready to go.</p><p>Before you do anything with the files you just downloaded you need to download VirtualBox and install it. After that the process is quite simple.</p><p>All you need to do is open your terminal. Navigate to your downloaded files from Puphpet and run the following command:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ vagrant up</code></pre></div></div><p>This will install and start the virtual machine you ended up choosing. After that, you can access your server with the IP you used during the Puphpet setup process or you can configure the virtual host.</p><p>Here’s a list of the available commands to use Vagrant.</p><ul>  <li><i class=\"icon-angle-right\"></i> <strong>box</strong> - manages boxes: installation, removal, etc.</li>  <li><i class=\"icon-angle-right\"></i> <strong>destroy</strong> -stops and deletes all traces of the vagrant machine</li>  <li><i class=\"icon-angle-right\"></i> <strong>halt</strong> - stops the vagrant machine</li>  <li><i class=\"icon-angle-right\"></i> <strong>help</strong> - shows the help for a subcommand</li>  <li><i class=\"icon-angle-right\"></i> <strong>init</strong> - initializes a new Vagrant environment by creating a Vagrantfile</li>  <li><i class=\"icon-angle-right\"></i> <strong>package</strong> - packages a running vagrant environment into a box</li>  <li><i class=\"icon-angle-right\"></i> <strong>plugin</strong> - manages plugins: install, uninstall, update, etc.</li>  <li><i class=\"icon-angle-right\"></i> <strong>provision</strong> - provisions the vagrant machine</li>  <li><i class=\"icon-angle-right\"></i> <strong>reload</strong> - restarts vagrant machine, loads new Vagrantfile configuration</li>  <li><i class=\"icon-angle-right\"></i> <strong>resume</strong> - resume a suspended vagrant machine</li>  <li><i class=\"icon-angle-right\"></i> <strong>ssh</strong> - connects to machine via SSH</li>  <li><i class=\"icon-angle-right\"></i> <strong>ssh-config</strong> - outputs OpenSSH valid configuration to connect to the machine</li>  <li><i class=\"icon-angle-right\"></i> <strong>status</strong> - outputs status of the vagrant machine</li>  <li><i class=\"icon-angle-right\"></i> <strong>suspend</strong> - suspends the machine</li>  <li><i class=\"icon-angle-right\"></i> <strong>up</strong> - starts and provisions the vagrant environment</li></ul><p>That’s it. Easy like that.</p>",
                "url": "http://localhost:4000/post/getting-started-with-vagrant/",
                
                
                "categories": ["development","environment","vagrant","Webdev"],                
                
                "tags": ["development,environment,vagrant,Webdev"],
                "date_published": "2014-01-04T00:00:00+00:00",
                "date_modified": "2014-01-04T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Is 2013 gone yet?",
                "content_text": "Not yet. We still have time to look back. Yeah, it’s that time of the year. Time to think back on what happened this last year. What went wrong and what went well.January  April The year started out greatly. The company I was working for was going down so I found myself without a job. Not even a month gone by and I found myself a new workplace and I’m still living The CH Experience. This made me move to another city, however not a strange city to me. A city that I do love with all my heart. After all, most of my friends are here and my best memories were created here.The teamSure I wanted to go as a freelancer for a while. But that didn’t work out so well so I’m glad that I am where I am now.May  June Moved my blog from Tumblr to wardrobe hosted by a Internet friend of mine that goes by the name freshpixel. You might’ve seen him on IRC. I’ve been improving my blog ever since with minor tweaks, making the theme responsive and some other cool features.  If you ever wanted a minimal blog application the way to go is definitely wardrobe. Thank you Eric Barnes for making such a beautiful platform.July  August Stopped using Google Analytics for personal projects, instead I’m using piwik. If you want something simple and that you have control over, this is the way to go. Even last week we got a new update with more awesome stuff.August  September Just a bit after that, I won a ticket to LaraconEU and of I went: next stop Amsterdam. Stuff was learn on that conference. But most of all, connections were made. Faces were put on nicknames and avatars. I hope I can keep this tradition of attending to (at least) one (abroad) conference every year. During 2013 laravel released its new version 4. Changing the game again. Using composer with all the things and once again pushing the PHP community forward.Laracon EUOctober  November I was internet famous for a couple of days. My post about the Six months rule went crazy on reddit and I had 35k+ visits in just 48 hours. Thank you reddit.November  December I won an award at work during our christmas party.It was definitely fast. All I can say is that this was a really good year. If the next one is has good as 2013 I think I’ll be happy. I have a lot of different ideas for my blog for the upcoming months. Don’t know if I’ll be able to do them all. But I will definitely try.Blog ReviewAnalytics between Jan 1 and Dec 31 2013Most visited articles:   The six months rule   Git vs Svn is it really a battle?   Php magic methods - The complete guide   Glide.js a simple, lightweight &amp; fast jQuery slider   How Designers Destroyed the WorldSpecial thanks:   freshpixel for hosting my blog;   Reddit and his community;   The codeigniter channel for always helping me get new ideas for articles;   David Wosnitza for his guest post (more to come I hope);   All the people that donated money via paypal on my website;   All the people that clicked on the ads at the end of my posts;Thank you for reading my blog, and I hope you all have an awesome 2014, mkay?",
                "content_html": "<p>Not yet. We still have time to look back. Yeah, it’s that time of the year. Time to think back on what happened this last year. What went wrong and what went well.</p><!--more--><p><strong>January <i class=\"icon-long-arrow-right\"></i> April</strong></p><p><i class=\"icon-angle-right\"></i> The year started out greatly. The company I was working for was going down so I found myself without a job. Not even a month gone by and I found myself a new workplace and I’m still living <a href=\"http://blog.marcomonteiro.net/post/the-ch-experience\">The CH Experience</a>. This made me move to another city, however not a strange city to me. A city that I do love with all my heart. After all, most of my friends are here and my best memories were created here.</p><p><img src=\"https://dl.dropboxusercontent.com/u/404972/blog/monstros.jpg\" alt=\"The team\" /></p><p><small><center>The team</center></small></p><p>Sure I wanted to go as a freelancer for a while. But that didn’t work out so well so I’m glad that I am where I am now.</p><p><strong>May <i class=\"icon-long-arrow-right\"></i> June</strong></p><p><i class=\"icon-angle-right\"></i> Moved my blog from Tumblr to <a href=\"http://wardrobecms.com/\">wardrobe</a> hosted by a Internet friend of mine that goes by the name freshpixel. You might’ve seen him on IRC. I’ve been improving my blog ever since with minor tweaks, making the theme responsive and some other cool features.  If you ever wanted a minimal blog application the way to go is definitely wardrobe. Thank you <a href=\"https://twitter.com/ericlbarnes\">Eric Barnes</a> for making such a beautiful platform.</p><p><strong>July <i class=\"icon-long-arrow-right\"></i> August</strong></p><p><i class=\"icon-angle-right\"></i> Stopped using Google Analytics for personal projects, instead I’m using <a href=\"http://piwik.org/\">piwik</a>. If you want something simple and that you have control over, this is the way to go. Even last week we got a new update with more awesome stuff.</p><p><strong>August <i class=\"icon-long-arrow-right\"></i> September</strong></p><p><i class=\"icon-angle-right\"></i> Just a bit after that, I won a ticket to <a href=\"http://blog.marcomonteiro.net/archive?q=laracon\">LaraconEU</a> and of I went: next stop Amsterdam. Stuff was learn on that conference. But most of all, connections were made. Faces were put on nicknames and avatars. I hope I can keep this tradition of attending to (at least) one (abroad) conference every year. During 2013 laravel released its new version 4. Changing the game again. Using composer with all the things and once again pushing the PHP community forward.</p><p><img src=\"https://dl.dropboxusercontent.com/u/404972/blog/laracon.png\" alt=\"Laracon EU\" /></p><p><small><center>Laracon EU</center></small></p><p><strong>October <i class=\"icon-long-arrow-right\"></i> November</strong></p><p><i class=\"icon-angle-right\"></i> I was internet famous for a couple of days. My post about the <a href=\"http://blog.marcomonteiro.net/post/the-six-months-rule\">Six months rule</a> went crazy on <a href=\"http://www.reddit.com/r/programming/comments/1pmzli/the_six_months_rule/\">reddit</a> and I had 35k+ visits in just 48 hours. Thank you reddit.</p><p><strong>November <i class=\"icon-long-arrow-right\"></i> December</strong></p><p><i class=\"icon-angle-right\"></i> I <a href=\"http://blog.marcomonteiro.net/post/people-won-awards-that-day\">won an award at work</a> during our christmas party.</p><p>It was definitely fast. All I can say is that this was a really good year. If the next one is has good as 2013 I think I’ll be happy. I have a lot of different ideas for my blog for the upcoming months. Don’t know if I’ll be able to do them all. But I will definitely try.</p><p><strong>Blog Review</strong></p><p><img src=\"https://dl.dropboxusercontent.com/u/404972/blog/analytics-2013.jpg\" alt=\"Analytics in 2013\" /></p><p><small><center>Analytics between Jan 1 and Dec 31 2013</center></small></p><p><strong>Most visited articles:</strong></p><ul>  <li><a href=\"http://blog.marcomonteiro.net/post/the-six-months-rule\"><i class=\"icon-link\"></i> The six months rule</a></li>  <li><a href=\"http://blog.marcomonteiro.net/post/git-vs-svn-is-it-really-a-battle\"><i class=\"icon-link\"></i> Git vs Svn is it really a battle?</a></li>  <li><a href=\"http://blog.marcomonteiro.net/post/php-magic-methods-the-complete-guide\"><i class=\"icon-link\"></i> Php magic methods - The complete guide</a></li>  <li><a href=\"http://blog.marcomonteiro.net/post/glidejs-simple-lightweight-and-fast-jquery-slider\"><i class=\"icon-link\"></i> Glide.js a simple, lightweight &amp; fast jQuery slider</a></li>  <li><a href=\"http://blog.marcomonteiro.net/post/mike-monteiro-how-designers-destroyed-the-world\"><i class=\"icon-link\"></i> How Designers Destroyed the World</a></li></ul><p><strong>Special thanks:</strong></p><ul>  <li><i class=\"icon-angle-right\"></i> freshpixel for hosting my blog;</li>  <li><i class=\"icon-angle-right\"></i> Reddit and his community;</li>  <li><i class=\"icon-angle-right\"></i> The codeigniter channel for always helping me get new ideas for articles;</li>  <li><i class=\"icon-angle-right\"></i> <a href=\"https://twitter.com/_druu\">David Wosnitza</a> for his <a href=\"http://blog.marcomonteiro.net/post/normalizedsync-single-file-demo\">guest post</a> (more to come I hope);</li>  <li><i class=\"icon-angle-right\"></i> All the people that donated money via paypal on my website;</li>  <li><i class=\"icon-angle-right\"></i> All the people that clicked on the ads at the end of my posts;</li></ul><p>Thank you for reading my blog, and I hope you all have an awesome 2014, mkay?</p>",
                "url": "http://localhost:4000/post/2013-gone-yet/",
                
                
                "categories": [2013,"review","year","2013"],                
                
                "tags": ["2013,review,year"],
                "date_published": "2013-12-29T00:00:00+00:00",
                "date_modified": "2013-12-29T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Are you a part of Intranet project?",
                "content_text": "Are you? If you are, this might interest you. I’ve been doing some consultant work where I’m basically putting Intranets to the test. Basically I’m the troll telling people what are they doing right or wrong.So his is what I’ve found so far on things that you might want to avoid. Unclear intranet ownership and governanceThe problem here normally resides with the the people that define the user privilegies. Normally they either have more people than they should with “admin” privileges, or they have just one person. Both are normally wrong. You should make clear choices on who takes care of what. But more importantly, the people using it should know who’s in charge of what. Designing by opinionThis is the most common mistake. The people designing the Intranet, do it by what they think is right, but they don’t do any background work to support those decisions. This will bit you in the ass sooner than later. Designing only half of the intranetAgain, a major design problem. The guys in charge of the design think:  It’s a Intranet, only the company will see this and the world is not going to care about it. So I’m just going to design a couple of pages and define some guidelines and it will be ok.It’s not! If people are using something you’re designing then you should make an effort to do a good job. Not just because it’s your job, but because people are going to care about your product. It doesn’t matter if it’s 3 or 1000 users. If your work affect just one person, you should do a good job. This is a fact for everything not just design. Taking the publisher’s perspectiveThe guys building the Intranet take the publisher perspective disregarding the users perspective completely. This happens not only on Intranet projects but on most big web projects. Allowing technology to rule the designThis is a common one when it comes to Intranets. Normally Intranets aren’t built from scratch. And that’s ok. But the technology that you chose shouldn’t dictate what can and cannot be done by your users or publishers.I’ve found many more throughout my consultant experience. But these one were the ones that I found more often. I hope this helps you in the future when you have to build or work on a Intranet project.",
                "content_html": "<p>Are you? If you are, this might interest you. I’ve been doing some consultant work where I’m basically putting Intranets to the test. Basically I’m the troll telling people what are they doing right or wrong.</p><p>So his is what I’ve found so far on things that you might want to avoid.</p><!--more--><p><strong><i class=\"icon-angle-right\"></i> Unclear intranet ownership and governance</strong></p><p>The problem here normally resides with the the people that define the user privilegies. Normally they either have more people than they should with “<em>admin</em>” privileges, or they have just one person. Both are normally wrong. You should make clear choices on who takes care of what. But more importantly, the people using it should know who’s in charge of what.</p><p><strong><i class=\"icon-angle-right\"></i> Designing by opinion</strong></p><p>This is the most common mistake. The people designing the Intranet, do it by what they think is right, but they don’t do any background work to support those decisions. This will bit you in the ass sooner than later.</p><p><strong><i class=\"icon-angle-right\"></i> Designing only half of the intranet</strong></p><p>Again, a major design problem. The guys in charge of the design think:</p><blockquote>  <p>It’s a Intranet, only the company will see this and the world is not going to care about it. So I’m just going to design a couple of pages and define some guidelines and it will be ok.</p></blockquote><p>It’s not! If people are using something you’re designing then you should make an effort to do a good job. Not just because it’s your job, but because people are going to care about your product. It doesn’t matter if it’s 3 or 1000 users. If your work affect just one person, you should do a good job. This is a fact for everything not just design.</p><p><strong><i class=\"icon-angle-right\"></i> Taking the publisher’s perspective</strong></p><p>The guys building the Intranet take the publisher perspective disregarding the users perspective completely. This happens not only on Intranet projects but on most big web projects.</p><p><strong><i class=\"icon-angle-right\"></i> Allowing technology to rule the design</strong></p><p>This is a common one when it comes to Intranets. Normally Intranets aren’t built from scratch. And that’s ok. But the technology that you chose shouldn’t dictate what can and cannot be done by your users or publishers.</p><p>I’ve found many more throughout my consultant experience. But these one were the ones that I found more often. I hope this helps you in the future when you have to build or work on a Intranet project.</p>",
                "url": "http://localhost:4000/post/are-you-a-part-of-intranet-project/",
                
                
                "categories": ["consultant","intranet","tips","web"],                
                
                "tags": ["consultant,intranet,tips,web"],
                "date_published": "2013-12-20T00:00:00+00:00",
                "date_modified": "2013-12-20T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "People won awards that day",
                "content_text": "Last weekend we had our anual christmas party at the office. Until now I was only used to those small Christmas parties. I only worked for small companies and even when I didn’t, normally they did the parties by team and not has a whole company.I was really excited about the party, on one hand I would get to be with everyone in one place, which only happens twice a year (we also have a summer party). On the other hand there’s always a open bar.Since it was my first time at this, I was everything but ready for what was about to happen. Every year the company rewards a few people on different categories. You know, like the Oscars, but instead of getting a gold statue you get a Teddy Bear (from the movie Monsters, Inc.) and there’s no nominees, hence you always have those unexpected winners.Well, guess what? I was one of those cases. Well at least I think I was. Some may think I wasn’t. Some were actually expecting it. What matters is that I wasn’t, at all.Apparently everyone on my team (or almost everyone) already knew that I was going to win (I know right? Bunch of assholes).The award I won was the “revelation award”. It means that I (allegedly) stood out somehow. It’s good to know that the company is appreciating my work. But I wouldn’t be doing my work if it wasn’t for this people.From left to right: Xico; Tânia; Sílvia; Mena; Lili; Asshole; Inês; JoelThat’s right, this is the team I work with, and since I work with them everyday, I think it’s safe to say that this award was only a product of a team effort.I know my acceptance speech wasn’t perfect, basically it went like this:  Thank you!00010 1001 10010101 10101010101 101010 11010101 10101 10101 100000101010 10101 101010 11001 10010101 10101010101 101010 11010101 10101 10101 100000101010 10101 101010 11001 10010101 10101010101 101010 11010101 10101 10101 100000101010 10101 101010 11001 10010101 10101010101 101010 11010101 10101 10101 100000101010 10101 101010 11001 10010101 10101010101 101010 11010101 10101 10101 100000101010 10101 101010I don’t even know what that means in binary, but I thought it was funny at the time. It wasn’t, I was just drunk.Now that I put some thought into it (and I’m not drunk) I can say this:  Thank you Grupo CH (the company). It’s been a great year working with you. I want to thank my team, not just for their everyday work, but specially for being more than just co-workers. You’re all friends of mine and I’m a better person because I had the pleasure to meet you.Errrrrr about that!",
                "content_html": "<p>Last weekend we had our anual christmas party at the office. Until now I was only used to those small Christmas parties. I only worked for small companies and even when I didn’t, normally they did the parties by team and not has a whole company.</p><p>I was really excited about the party, on one hand I would get to be with everyone in one place, which only happens twice a year (we also have a summer party). On the other hand there’s always a open bar.</p><!--more--><p>Since it was my first time at this, I was everything but ready for what was about to happen. Every year the company rewards a few people on different categories. You know, like the Oscars, but instead of getting a gold statue you get a Teddy Bear (from the movie Monsters, Inc.) and there’s no nominees, hence you always have those unexpected winners.</p><p>Well, guess what? I was one of those cases. Well at least I think I was. Some may think I wasn’t. Some were actually expecting it. What matters is that I wasn’t, at all.</p><p>Apparently everyone on my team (or almost everyone) already knew that I was going to win (I know right? Bunch of assholes).</p><p>The award I won was the “revelation award”. It means that I (allegedly) stood out somehow. It’s good to know that the company is appreciating my work. But I wouldn’t be doing my work if it wasn’t for this people.</p><p><img src=\"https://dl.dropboxusercontent.com/u/404972/blog/team.jpg\" alt=\"Monsters and Company Team\" /></p><p><small><center>From left to right: Xico; Tânia; Sílvia; Mena; Lili; Asshole; Inês; Joel</center></small></p><p>That’s right, this is the team I work with, and since I work with them everyday, I think it’s safe to say that this award was only a product of a team effort.</p><p>I know my acceptance speech wasn’t perfect, basically it went like this:</p><blockquote>  <p>Thank you!00010 1001 10010101 10101010101 101010 11010101 10101 10101 100000101010 10101 101010 11001 10010101 10101010101 101010 11010101 10101 10101 100000101010 10101 101010 11001 10010101 10101010101 101010 11010101 10101 10101 100000101010 10101 101010 11001 10010101 10101010101 101010 11010101 10101 10101 100000101010 10101 101010 11001 10010101 10101010101 101010 11010101 10101 10101 100000101010 10101 101010</p></blockquote><p>I don’t even know what that means in binary, but I thought it was funny at the time. It wasn’t, I was just drunk.</p><p>Now that I put some thought into it (and I’m not drunk) I can say this:</p><blockquote>  <p>Thank you Grupo CH (the company). It’s been a great year working with you. I want to thank my team, not just for their everyday work, but specially for being more than just co-workers. You’re all friends of mine and I’m a better person because I had the pleasure to meet you.</p></blockquote><p><img src=\"https://dl.dropboxusercontent.com/u/404972/blog/award.jpg\" alt=\"the award\" /></p><p><small><center>Errrrrr about that!</center></small></p>",
                "url": "http://localhost:4000/post/people-won-awards-that-day/",
                
                
                "categories": ["awards","life","work"],                
                
                "tags": ["awards,life,work"],
                "date_published": "2013-12-19T00:00:00+00:00",
                "date_modified": "2013-12-19T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Unsubscribe All The Things",
                "content_text": "We all been at the place where we find a brand new project that is yet to come. We subscribe the newsletter to be up to date. The project dies, but somehow you keep getting those annoying emails, and doesn’t matter how many times we try to unsubscribe, we just can’t do it.Unsubscribing from malling lists is probably the most annoying thing on the web today. I can’t count the times I tried to do so, and just can’t. Well, not anymore. Now I use Unroll.me.With Unroll.me you can unsubscribe from most services in just a few clicks. Personally I unsubscribed from 105 malling lists. Most of them I wasn’t even getting any emails but just to be sure.Do your self a favor and keep your inbox clean. unroll.meUse it and abuse it.",
                "content_html": "<p>We all been at the place where we find a brand new project that is yet to come. We subscribe the newsletter to be up to date. The project dies, but somehow you keep getting those annoying emails, and doesn’t matter how many times we try to unsubscribe, we just can’t do it.</p><p>Unsubscribing from malling lists is probably the most annoying thing on the web today. I can’t count the times I tried to do so, and just can’t. Well, not anymore. Now I use Unroll.me.</p><p>With Unroll.me you can unsubscribe from most services in just a few clicks. Personally I unsubscribed from 105 malling lists. Most of them I wasn’t even getting any emails but just to be sure.</p><p>Do your self a favor and keep your inbox clean.</p><p><i class=\"icon-external-link\"></i> <a href=\"https://unroll.me/\">unroll.me</a></p><p>Use it and abuse it.</p>",
                "url": "http://localhost:4000/post/unsubscribe-all-the-things/",
                
                                
                
                "date_published": "2013-12-14T00:00:00+00:00",
                "date_modified": "2013-12-14T00:00:00+00:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "Chrome Devtools For Mobile",
                "content_text": "Just a few weeks ago the chrome team release yet another awesome feature. You can now truly debug on your desktop as if you were working on your mobile phone or tablet.This will get your socks off: remote debugging and then we’ll unveil proper mobile emulation.Paul Irish describes the new feature in depth.",
                "content_html": "<p>Just a few weeks ago the chrome team release yet another awesome feature. You can now truly debug on your desktop as if you were working on your mobile phone or tablet.</p><p>This will get your socks off: remote debugging and then we’ll unveil proper mobile emulation.</p><!--more--><p>Paul Irish describes the new feature in depth.</p><iframe width=\"100%\" height=\"315\" src=\"//www.youtube.com/embed/gZH1d2Co1X0\" frameborder=\"0\" allowfullscreen=\"\"></iframe>",
                "url": "http://localhost:4000/post/chrome-devtools-for-mobile/",
                
                                
                
                "date_published": "2013-12-09T00:00:00+00:00",
                "date_modified": "2013-12-09T00:00:00+00:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "I would like to express complete and utter disappointment",
                "content_text": "Today we were at the #codeigniter channel on IRC (Freenode). We were discussing who would win the shit job award of the day. I tried to win with a single file website with CSS, JS, HTML and mySQL in one file. I thought I would win. Well I didn’t.This was Thomas (aka slax0r) submission:This is an email that he wrote to VPN supplier that one of his clients were using.  Hello,  I would like to express complete and utter disappointment with your company, and your stuff, that you call software.So, where do I begin, maybe at the start.  Today I was contacted by a client of ours, who uses your software, more specifically, the VPN server, which I now question my self, why on earth, do they use your software, since there is perfectly good and simple VPN software available, which just works, and it’s also free, as in beer, and as in speech by the way.  So to access our clients server, I need a special copy of your VPN client, for which I spent over an hour to even find it on your website. Not to mention how annoying it is to register with an email account, so you can send me all that nice spam, only because I need to download a VPN CLIENT! So after I finally find the correct version, and downloaded it, frustration grows. Might I add I am a Linux user for almost 15 years. So, first thing is first. RAR, for Linux? Seriously? Ever heard of good old GunZip? Or BunZip2? Readilly available on every and each Linux distribution. As well as BSD and MacOSX. But ok, I download unrar for Linux, so I could just use your software. So, unrar, unpack the RPM, and install by hand, apply permissions etc. Run the software as a non-privileged user, and whats this. Needs SU permissions? No problem. But your suggestion to make setuid it is beyond idiocracy! Setuid to root? Are you serious? Why don’t you just suggest opening up port 22 to the world and removing the root password? Ok then, I just run the app with sudo, and same message, need I say what happened next? Probably not. So ok, after I calmed down a little bit, go to interactive root login through sudo, and run the app. Eureka! It runs. So, insert the VPN data, save configuration, and try to open the connection. Oh snap! Can’t read config file. Strange, I’m running as root. Inspect file permissions, hm, all are good, READ/WRITE for root on barracudavpn.conf, but since we already did setuid, what worse can it be if I just make it world readable/writable, right? So ok, make it like that, re-run the application, connect, insert password, and a nice little warning: “Gateway not reachable”. Are you kidding me? Inspect interfaces, nothing new, try to ping some VPN IP addresses, nothing, try to ping my own VPN IP address, nothing. Great peace of software, nothing works. But ok, maybe I’m just stupid, so, contact your support. After ALOT of waiting, your “Natalia” comes on, asks me if we own any of your software, well, the VPN client, and nothing else, and I just get blown off, like I am a lesser person, because I don’t use your software. Thanks a lot! Mental note: I will never ever use ANY of your software, and anyone I find actually using your stuff, will do my best to convince them other wise.  Thank you, for making me download Windoze and running it in a VM(that’s a Virtual Machine, in case you’re wondering), just so I can help out my client. And thank you for making me spend the whole friday on a task that would take me 10-15 minutes.  Kind regards,Thomas  P.S.: fire your whole Linux dev team, because they CLEARLY have no clue what-so-ever to what they are doing on this system.P.S.2: change your website hosting, because your site is working insanely slowly, or optimize it.Let’s just say that this email made my day.The company in question was this Barracuda Networks.**ps: **Thank you slax0r for letting me share this.",
                "content_html": "<p>Today we were at the #codeigniter channel on IRC (Freenode). We were discussing who would win the shit job award of the day. I tried to win with a single file website with CSS, JS, HTML and mySQL in one file. I thought I would win. Well I didn’t.</p><p>This was Thomas (aka slax0r) submission:</p><p>This is an email that he wrote to VPN supplier that one of his clients were using.<!--more--></p><blockquote>  <p>Hello,</p></blockquote><blockquote>  <p>I would like to express complete and utter disappointment with your company, and your stuff, that you call software.So, where do I begin, maybe at the start.</p></blockquote><blockquote>  <p>Today I was contacted by a client of ours, who uses your software, more specifically, the VPN server, which I now question my self, why on earth, do they use your software, since there is perfectly good and simple VPN software available, which just <em>works</em>, and it’s also free, as in beer, and as in speech by the way.</p></blockquote><blockquote>  <p>So to access our clients server, I need a special copy of your VPN client, for which I spent over an hour to even find it on your website. Not to mention how annoying it is to register with an email account, so you can send me all that nice spam, only because I need to download a VPN CLIENT! So after I finally find the correct version, and downloaded it, frustration grows. Might I add I am a Linux user for almost 15 years. So, first thing is first. RAR, for Linux? Seriously? Ever heard of good old GunZip? Or BunZip2? Readilly available on every and <em>each</em> Linux distribution. As well as BSD and MacOSX. But ok, I download unrar for Linux, so I could just use your software. So, unrar, unpack the RPM, and install by hand, apply permissions etc. Run the software as a non-privileged user, and whats this. Needs SU permissions? No problem. But your suggestion to make setuid it is beyond idiocracy! Setuid to root? Are you serious? Why don’t you just suggest opening up port 22 to the world and removing the root password? Ok then, I just run the app with sudo, and same message, need I say what happened next? Probably not. So ok, after I calmed down a little bit, go to interactive root login through sudo, and run the app. Eureka! It runs. So, insert the VPN data, save configuration, and try to open the connection. Oh snap! Can’t read config file. Strange, I’m running as root. Inspect file permissions, hm, all are good, READ/WRITE for root on barracudavpn.conf, but since we already did setuid, what worse can it be if I just make it world readable/writable, right? So ok, make it like that, re-run the application, connect, insert password, and a nice little warning: “Gateway not reachable”. Are you kidding me? Inspect interfaces, nothing new, try to ping some VPN IP addresses, nothing, try to ping my own VPN IP address, nothing. Great peace of software, nothing works. But ok, maybe I’m just stupid, so, contact your support. After ALOT of waiting, your “Natalia” comes on, asks me if we own any of your software, well, the VPN client, and nothing else, and I just get blown off, like I am a lesser person, because I don’t use your software. Thanks a lot! Mental note: I will never ever use ANY of your software, and anyone I find actually using your stuff, will do my best to convince them other wise.</p></blockquote><blockquote>  <p>Thank you, for making me download Windoze and running it in a VM(that’s a Virtual Machine, in case you’re wondering), just so I can help out my client. And thank you for making me spend the whole friday on a task that would take me 10-15 minutes.</p></blockquote><blockquote>  <p>Kind regards,Thomas</p></blockquote><blockquote>  <p>P.S.: fire your whole Linux dev team, because they CLEARLY have no clue what-so-ever to what they are doing on this system.P.S.2: change your website hosting, because your site is working insanely slowly, or optimize it.</p></blockquote><p>Let’s just say that this email made my day.</p><p>The company in question was this <a href=\"https://www.barracuda.com/\">Barracuda Networks</a>.</p><p>**ps: **Thank you slax0r for letting me share this.</p>",
                "url": "http://localhost:4000/post/i-would-like-to-express-complete-and-utter-disappointment-with-your-company/",
                
                
                "categories": ["funny","shitty job award","Webdev"],                
                
                "tags": ["funny,shitty job award,Webdev"],
                "date_published": "2013-12-06T00:00:00+00:00",
                "date_modified": "2013-12-06T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "The Google Geocoding API",
                "content_text": "Geocoding is the process of converting addresses (like “1600 Amphitheatre Parkway, Mountain View, CA”) into geographic coordinates (like latitude 37.423021 and longitude -122.083739), which you can use to place markers or position the map.Reverse geocoding is the process of converting geographic coordinates into a human-readable address.Geocoding RequestsA Geocoding API request must be of the following form:http://maps.googleapis.com/maps/api/geocode/output?parameterswhere output may be either of the following values:   json (recommended) indicates output in JavaScript Object Notation   xml indicates output as XMLTo access the Geocoding API over HTTPS, use:https://maps.googleapis.com/maps/api/geocode/output?parametersRequired parametersaddress - The address that you want to geocode.latlng - The textual latitude/longitude value for which you wish to obtain the closest, human-readable address. See Reverse Geocoding for more information.components - A component filter for which you wish to obtain a geocode. See Component Filtering for more information. The components filter will also be accepted as an optional parameter if an address is provided.sensor - Indicates whether or not the geocoding request comes from a device with a location sensor. This value must be either true or false.Optional parametersbounds - The bounding box of the viewport within which to bias geocode results more prominently. This parameter will only influence, not fully restrict, results from the geocoder. (For more information see Viewport Biasing below.)language - The language in which to return results. See the list of supported domain languages. Note that we often update supported languages so this list may not be exhaustive. If language is not supplied, the geocoder will attempt to use the native language of the domain from which the request is sent wherever possible.region - The region code, specified as a ccTLD (“top-level domain”) two-character value. This parameter will only influence, not fully restrict, results from the geocoder. (For more information see Region Biasing below.)            components - The component filters, separated by a pipe (      ). Each component filter consists of a component:value pair and will fully restrict the results from the geocoder. For more information see Component Filtering, below.      Geocoding ResponsesGeocoding responses are returned in the format indicated by the output flag within the URL request’s path.JSON Output FormatsIn this example, the Geocoding API requests a json response for a query on “1600 Amphitheatre Parkway, Mountain View, CA”:http://maps.googleapis.com/maps/api/geocode/json?address=1600+Amphitheatre+Parkway,+Mountain+View,+CA&amp;sensor=true_or_falseWe’ve left the sensor parameter in this example as a variable true_or_false to emphasize that you must set this value to either true or false explicitly.The JSON returned by this request is shown below. Note that actual JSON may contain less whitespace. You should not make assumptions about the amount or format of whitespace between requests.{\t{   \t\t\"results\" : [  \t{     \"address_components\" : [        {           \"long_name\" : \"1600\",           \"short_name\" : \"1600\",           \"types\" : [ \"street_number\" ]        },        {           \"long_name\" : \"Amphitheatre Pkwy\",           \"short_name\" : \"Amphitheatre Pkwy\",           \"types\" : [ \"route\" ]        },        {           \"long_name\" : \"Mountain View\",           \"short_name\" : \"Mountain View\",           \"types\" : [ \"locality\", \"political\" ]        },        {           \"long_name\" : \"Santa Clara\",           \"short_name\" : \"Santa Clara\",           \"types\" : [ \"administrative_area_level_2\", \"political\" ]        },        {           \"long_name\" : \"California\",           \"short_name\" : \"CA\",           \"types\" : [ \"administrative_area_level_1\", \"political\" ]        },        {           \"long_name\" : \"United States\",           \"short_name\" : \"US\",           \"types\" : [ \"country\", \"political\" ]        },        {           \"long_name\" : \"94043\",           \"short_name\" : \"94043\",           \"types\" : [ \"postal_code\" ]        }     ],     \"formatted_address\" : \"1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA\",     \"geometry\" : {        \"location\" : {           \"lat\" : 37.42291810,           \"lng\" : -122.08542120        },        \"location_type\" : \"ROOFTOP\",        \"viewport\" : {           \"northeast\" : {              \"lat\" : 37.42426708029149,              \"lng\" : -122.0840722197085           },           \"southwest\" : {              \"lat\" : 37.42156911970850,              \"lng\" : -122.0867701802915           }        }     },     \"types\" : [ \"street_address\" ]  }   \t],   \t\"status\" : \"OK\"}XML Output FormatsIn this example, the Geocoding API requests an xml response for the identical query shown above for “1600 Amphitheatre Parkway, Mountain View, CA”:http://maps.googleapis.com/maps/api/geocode/xml?address=1600+Amphitheatre+Parkway,+Mountain+View,+CA&amp;sensor=true_or_falseThe XML returned by this request is shown below.&lt;GeocodeResponse&gt;\t &lt;status&gt;OK&lt;/status&gt;\t &lt;result&gt;\t \t&lt;type&gt;street_address&lt;/type&gt;  \t\t&lt;formatted_address&gt;1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA&lt;/formatted_address&gt;  \t\t\t&lt;address_component&gt;   \t\t\t&lt;long_name&gt;1600&lt;/long_name&gt;   \t\t\t\t&lt;short_name&gt;1600&lt;/short_name&gt;   \t\t\t&lt;type&gt;street_number&lt;/type&gt;  \t\t\t&lt;/address_component&gt;  \t\t\t&lt;address_component&gt;   \t\t\t\t&lt;long_name&gt;Amphitheatre Pkwy&lt;/long_name&gt;   \t\t\t\t&lt;short_name&gt;Amphitheatre Pkwy&lt;/short_name&gt;   \t\t\t\t&lt;type&gt;route&lt;/type&gt;  \t\t\t&lt;/address_component&gt;  \t\t\t&lt;address_component&gt;   \t\t\t\t&lt;long_name&gt;Mountain View&lt;/long_name&gt;   \t\t\t\t&lt;short_name&gt;Mountain View&lt;/short_name&gt;   \t\t\t\t&lt;type&gt;locality&lt;/type&gt;   \t\t\t\t&lt;type&gt;political&lt;/type&gt;  \t\t\t&lt;/address_component&gt;  \t\t\t&lt;address_component&gt;   \t\t\t\t&lt;long_name&gt;San Jose&lt;/long_name&gt;   \t\t\t\t&lt;short_name&gt;San Jose&lt;/short_name&gt;   \t\t\t\t&lt;type&gt;administrative_area_level_3&lt;/type&gt;   \t\t\t\t&lt;type&gt;political&lt;/type&gt;  \t\t\t&lt;/address_component&gt;  \t\t\t&lt;address_component&gt;   \t\t\t\t&lt;long_name&gt;Santa Clara&lt;/long_name&gt;   \t\t\t\t&lt;short_name&gt;Santa Clara&lt;/short_name&gt;   \t\t\t\t&lt;type&gt;administrative_area_level_2&lt;/type&gt;   \t\t\t\t&lt;type&gt;political&lt;/type&gt;  \t\t\t&lt;/address_component&gt;  \t\t\t&lt;address_component&gt;   \t\t\t\t&lt;long_name&gt;California&lt;/long_name&gt;   \t\t\t\t&lt;short_name&gt;CA&lt;/short_name&gt;   \t\t\t\t&lt;type&gt;administrative_area_level_1&lt;/type&gt;   \t\t\t\t&lt;type&gt;political&lt;/type&gt;  \t\t\t&lt;/address_component&gt;  \t\t\t&lt;address_component&gt;   \t\t\t\t&lt;long_name&gt;United States&lt;/long_name&gt;   \t\t\t\t&lt;short_name&gt;US&lt;/short_name&gt;   \t\t\t\t&lt;type&gt;country&lt;/type&gt;   \t\t\t\t&lt;type&gt;political&lt;/type&gt;  \t\t\t&lt;/address_component&gt;  \t\t\t&lt;address_component&gt;   \t\t\t\t&lt;long_name&gt;94043&lt;/long_name&gt;   \t\t\t\t&lt;short_name&gt;94043&lt;/short_name&gt;   \t\t\t\t&lt;type&gt;postal_code&lt;/type&gt;  \t\t\t&lt;/address_component&gt;  \t\t\t&lt;geometry&gt;   \t\t\t\t&lt;location&gt;\t\t\t\t&lt;lat&gt;37.4217550&lt;/lat&gt;\t\t\t\t&lt;lng&gt;-122.0846330&lt;/lng&gt;   \t\t\t\t&lt;/location&gt;   \t\t\t\t&lt;location_type&gt;ROOFTOP&lt;/location_type&gt;   \t\t\t\t&lt;viewport&gt;\t\t\t\t&lt;southwest&gt; \t\t\t\t\t&lt;lat&gt;37.4188514&lt;/lat&gt; \t\t\t\t\t&lt;lng&gt;-122.0874526&lt;/lng&gt;\t\t\t\t&lt;/southwest&gt;\t\t\t\t&lt;northeast&gt; \t\t\t\t\t&lt;lat&gt;37.4251466&lt;/lat&gt; \t\t\t\t\t&lt;lng&gt;-122.0811574&lt;/lng&gt;\t\t\t\t&lt;/northeast&gt;   \t\t\t\t&lt;/viewport&gt;  \t\t\t&lt;/geometry&gt; \t\t&lt;/result&gt;&lt;/GeocodeResponse&gt;Reverse Geocoding (Address Lookup)The term geocoding generally refers to translating a human-readable address into a location on a map. The process of doing the converse, translating a location on the map into a human-readable address, is known as reverse geocoding.The Geocoding API supports reverse geocoding directly using the latlng parameter. For example, the following query contains the latitude/longitude value for a location in Brooklyn:http://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&amp;sensor=true_or_falseThis query returns the following result:{  \t\t\"status\": \"OK\",  \t\t\"results\": [ {\t\t\"types\": street_address,\t\t\"formatted_address\": \"275-291 Bedford Ave, Brooklyn, NY 11211, USA\",\t\t\"address_components\": [ {  \t\t\t\"long_name\": \"275-291\",  \t\t\t\"short_name\": \"275-291\",  \t\t\t\"types\": street_number\t\t}, {  \t\t\t\"long_name\": \"Bedford Ave\",  \t\t\t\"short_name\": \"Bedford Ave\",  \t\t\t\"types\": route\t\t}, {  \t\t\t\"long_name\": \"New York\",  \t\t\t\"short_name\": \"New York\",  \t\t\t\"types\": [ \"locality\", \"political\" ]\t\t}, {  \t\t\t\"long_name\": \"Brooklyn\",  \t\t\t\"short_name\": \"Brooklyn\",  \t\t\t\"types\": [ \"administrative_area_level_3\", \"political\" ]\t\t}, {  \t\t\t\"long_name\": \"Kings\",  \t\t\t\"short_name\": \"Kings\",  \t\t\t\"types\": [ \"administrative_area_level_2\", \"political\" ]\t\t}, {  \t\t\t\"long_name\": \"New York\",  \t\t\t\"short_name\": \"NY\",  \t\t\t\"types\": [ \"administrative_area_level_1\", \"political\" ]\t\t}, {  \t\t\t\"long_name\": \"United States\",  \t\t\t\"short_name\": \"US\",  \t\t\t\"types\": [ \"country\", \"political\" ]\t\t}, {  \t\t\t\"long_name\": \"11211\",  \t\t\t\"short_name\": \"11211\",  \t\t\t\"types\": postal_code\t\t} ],\t\t\t\"geometry\": {  \t\t\t\t\"location\": {    \t\t\t\"lat\": 40.7142298,\t\t        \"lng\": -73.9614669\t\t    },  \t\t\t\"location_type\": \"RANGE_INTERPOLATED\",  \t\t\t\"viewport\": {    \t\t\t\"southwest\": {      \t\t\t\t\"lat\": 40.7110822, \t\t\t\t        \"lng\": -73.9646145    \t\t},    \t\t\"northeast\": {      \t\t\t\"lat\": 40.7173774,      \t\t\t\"lng\": -73.9583193    \t\t}  \t\t}\t}  \t},... Additional results[] ...Note that the reverse geocoder returned more than one result. The result’s “formatted_addresses” are not just postal addresses, but any way to geographically name a location. For example, when geocoding a point in the city of Chicago, the geocoded point may be denoted as a street address, as the city (Chicago), as its state (Illinois) or as a country (The United States). All are “addresses” to the geocoder. The reverse geocoder returns any of these types as valid results.The reverse geocoder matches political entities (countries, provinces, cities and neighborhoods), street addresses, and postal codes.The full list of formatted_address values returned by the previous query are shown below.\"formatted_address\": \"275-291 Bedford Ave, Brooklyn, NY 11211, USA\",\"formatted_address\": \"Williamsburg, NY, USA\",\"formatted_address\": \"New York 11211, USA\",\"formatted_address\": \"Kings, New York, USA\",\"formatted_address\": \"Brooklyn, NY, USA\",\"formatted_address\": \"New York, NY, USA\",\"formatted_address\": \"New York, USA\",\"formatted_address\": \"United States\"Region BiasingThe Google Geocoding API returns address results influenced by the region (typically the country) from which the request is sent. For example, searches for “San Francisco” may return different results if sent from a domain within the United States than one sent from Spain.You can set the Geocoding API to return results biased to a particular region using the region parameter. This parameter takes a ccTLD (country code top-level domain) argument specifying the region bias. Most ccTLD codes are identical to ISO 3166-1 codes, with some notable exceptions. For example, the United Kingdom’s ccTLD is “uk” (.co.uk) while its ISO 3166-1 code is “gb” (technically for the entity of “The United Kingdom of Great Britain and Northern Ireland”).Geocoding results can be biased for every domain in which the main Google Maps application is officially launched. Note that biasing only prefers results for a specific domain; if more relevant results exist outside of this domain, they may be included.For example, a geocode for “Toledo” returns this result, as the default domain for the Geocoding API is set to the United States:http://maps.googleapis.com/maps/api/geocode/json?address=Toledo&amp;sensor=false# Returns:#{  \"status\": \"OK\",  \"results\": [ {    \"types\": [ \"locality\", \"political\" ],    \"formatted_address\": \"Toledo, OH, USA\",    \"address_components\": [ {      \"long_name\": \"Toledo\",      \"short_name\": \"Toledo\",      \"types\": [ \"locality\", \"political\" ]    }, {      \"long_name\": \"Ohio\",      \"short_name\": \"OH\",      \"types\": [ \"administrative_area_level_1\", \"political\" ]    }, {   \t\t   \"long_name\": \"United States\",   \t   \t   \"short_name\": \"US\",\t   \"types\": [ \"country\", \"political\" ]    } ],    \t\"geometry\": {      \t\"location\": {    \t\"lat\": 41.6529200,    \t\"lng\": -83.5777820  \t},  \t\"location_type\": \"APPROXIMATE\",  \t\"viewport\": {    \t\"southwest\": {      \t\"lat\": 41.5861889,      \t\"lng\": -83.7058414    },    \"northeast\": {      \t\"lat\": 41.7195821,      \t\"lng\": -83.4497226    }  },  \"bounds\": {    \t\"southwest\": {      \t\t\"lat\": 41.5803170,      \t\t\"lng\": -83.6947540    \t},    \t\"northeast\": {      \t\t\"lat\": 41.7326310,      \t\t\"lng\": -83.4545660    \t}  \t}\t}  \t} ]}However, a geocode for “Toledo” with region=es (Spain) will return the Spanish city.Component Filtering            The Google Geocoding API can return address results restricted to a specific area. The restriction is specified using the components filter. A filter consists of a list of component:value pairs separated by a pipe (      ). Only the results that match all the filters will be returned. Filter values support the same methods of spelling correction and partial matching as other geocoding requests. If a geocoding result is a partial match for a component filter it will contain a partial_match field in the response.      The components that can be filtered include:   route matches long or short name of a route.   locality matches against both locality and sublocality types.   administrative_area matches all the administrative_area levels.   postal_code matches postal_code and postal_code_prefix.   country matches a country name or a two letter ISO 3166-1 country code.A geocode for “Santa Cruz” with components=country:ES will return Santa Cruz de Tenerife in Canary Islands, Spain.",
                "content_html": "<p>Geocoding is the process of converting addresses (like “1600 Amphitheatre Parkway, Mountain View, CA”) into geographic coordinates (like latitude 37.423021 and longitude -122.083739), which you can use to place markers or position the map.</p><p>Reverse geocoding is the process of converting geographic coordinates into a human-readable address.</p><!--more--><p><strong>Geocoding Requests</strong></p><p>A Geocoding API request must be of the following form:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>http://maps.googleapis.com/maps/api/geocode/output?parameters</code></pre></div></div><p>where output may be either of the following values:</p><ul>  <li><i class=\"icon-angle-right\"></i> <em>json</em> (recommended) indicates output in JavaScript Object Notation</li>  <li><i class=\"icon-angle-right\"></i> <em>xml</em> indicates output as XML</li></ul><p>To access the Geocoding API over HTTPS, use:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://maps.googleapis.com/maps/api/geocode/output?parameters</code></pre></div></div><p><strong>Required parameters</strong></p><p><strong>address</strong> - The address that you want to geocode.</p><p><strong>latlng</strong> - The textual latitude/longitude value for which you wish to obtain the closest, human-readable address. See Reverse Geocoding for more information.</p><p><strong>components</strong> - A component filter for which you wish to obtain a geocode. See Component Filtering for more information. The components filter will also be accepted as an optional parameter if an address is provided.</p><p><strong>sensor</strong> - Indicates whether or not the geocoding request comes from a device with a location sensor. This value must be either true or false.</p><p><strong>Optional parameters</strong></p><p><strong>bounds</strong> - The bounding box of the viewport within which to bias geocode results more prominently. This parameter will only influence, not fully restrict, results from the geocoder. (For more information see Viewport Biasing below.)</p><p><strong>language</strong> - The language in which to return results. See the list of supported domain languages. Note that we often update supported languages so this list may not be exhaustive. If language is not supplied, the geocoder will attempt to use the native language of the domain from which the request is sent wherever possible.</p><p><strong>region</strong> - The region code, specified as a ccTLD (“top-level domain”) two-character value. This parameter will only influence, not fully restrict, results from the geocoder. (For more information see Region Biasing below.)</p><table>  <tbody>    <tr>      <td><strong>components</strong> - The component filters, separated by a pipe (</td>      <td>). Each component filter consists of a component:value pair and will fully restrict the results from the geocoder. For more information see Component Filtering, below.</td>    </tr>  </tbody></table><p><strong>Geocoding Responses</strong></p><p>Geocoding responses are returned in the format indicated by the output flag within the URL request’s path.</p><p><strong>JSON Output Formats</strong></p><p>In this example, the Geocoding API requests a json response for a query on “1600 Amphitheatre Parkway, Mountain View, CA”:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>http://maps.googleapis.com/maps/api/geocode/json?address=1600+Amphitheatre+Parkway,+Mountain+View,+CA&amp;sensor=true_or_false</code></pre></div></div><p>We’ve left the sensor parameter in this example as a variable true_or_false to emphasize that you must set this value to either true or false explicitly.</p><p>The JSON returned by this request is shown below. Note that actual JSON may contain less whitespace. You should not make assumptions about the amount or format of whitespace between requests.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{\t{   \t\t\"results\" : [  \t{     \"address_components\" : [        {           \"long_name\" : \"1600\",           \"short_name\" : \"1600\",           \"types\" : [ \"street_number\" ]        },        {           \"long_name\" : \"Amphitheatre Pkwy\",           \"short_name\" : \"Amphitheatre Pkwy\",           \"types\" : [ \"route\" ]        },        {           \"long_name\" : \"Mountain View\",           \"short_name\" : \"Mountain View\",           \"types\" : [ \"locality\", \"political\" ]        },        {           \"long_name\" : \"Santa Clara\",           \"short_name\" : \"Santa Clara\",           \"types\" : [ \"administrative_area_level_2\", \"political\" ]        },        {           \"long_name\" : \"California\",           \"short_name\" : \"CA\",           \"types\" : [ \"administrative_area_level_1\", \"political\" ]        },        {           \"long_name\" : \"United States\",           \"short_name\" : \"US\",           \"types\" : [ \"country\", \"political\" ]        },        {           \"long_name\" : \"94043\",           \"short_name\" : \"94043\",           \"types\" : [ \"postal_code\" ]        }     ],     \"formatted_address\" : \"1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA\",     \"geometry\" : {        \"location\" : {           \"lat\" : 37.42291810,           \"lng\" : -122.08542120        },        \"location_type\" : \"ROOFTOP\",        \"viewport\" : {           \"northeast\" : {              \"lat\" : 37.42426708029149,              \"lng\" : -122.0840722197085           },           \"southwest\" : {              \"lat\" : 37.42156911970850,              \"lng\" : -122.0867701802915           }        }     },     \"types\" : [ \"street_address\" ]  }   \t],   \t\"status\" : \"OK\"}</code></pre></div></div><p><strong>XML Output Formats</strong></p><p>In this example, the Geocoding API requests an xml response for the identical query shown above for “1600 Amphitheatre Parkway, Mountain View, CA”:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>http://maps.googleapis.com/maps/api/geocode/xml?address=1600+Amphitheatre+Parkway,+Mountain+View,+CA&amp;sensor=true_or_false</code></pre></div></div><p>The XML returned by this request is shown below.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;GeocodeResponse&gt;\t &lt;status&gt;OK&lt;/status&gt;\t &lt;result&gt;\t \t&lt;type&gt;street_address&lt;/type&gt;  \t\t&lt;formatted_address&gt;1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA&lt;/formatted_address&gt;  \t\t\t&lt;address_component&gt;   \t\t\t&lt;long_name&gt;1600&lt;/long_name&gt;   \t\t\t\t&lt;short_name&gt;1600&lt;/short_name&gt;   \t\t\t&lt;type&gt;street_number&lt;/type&gt;  \t\t\t&lt;/address_component&gt;  \t\t\t&lt;address_component&gt;   \t\t\t\t&lt;long_name&gt;Amphitheatre Pkwy&lt;/long_name&gt;   \t\t\t\t&lt;short_name&gt;Amphitheatre Pkwy&lt;/short_name&gt;   \t\t\t\t&lt;type&gt;route&lt;/type&gt;  \t\t\t&lt;/address_component&gt;  \t\t\t&lt;address_component&gt;   \t\t\t\t&lt;long_name&gt;Mountain View&lt;/long_name&gt;   \t\t\t\t&lt;short_name&gt;Mountain View&lt;/short_name&gt;   \t\t\t\t&lt;type&gt;locality&lt;/type&gt;   \t\t\t\t&lt;type&gt;political&lt;/type&gt;  \t\t\t&lt;/address_component&gt;  \t\t\t&lt;address_component&gt;   \t\t\t\t&lt;long_name&gt;San Jose&lt;/long_name&gt;   \t\t\t\t&lt;short_name&gt;San Jose&lt;/short_name&gt;   \t\t\t\t&lt;type&gt;administrative_area_level_3&lt;/type&gt;   \t\t\t\t&lt;type&gt;political&lt;/type&gt;  \t\t\t&lt;/address_component&gt;  \t\t\t&lt;address_component&gt;   \t\t\t\t&lt;long_name&gt;Santa Clara&lt;/long_name&gt;   \t\t\t\t&lt;short_name&gt;Santa Clara&lt;/short_name&gt;   \t\t\t\t&lt;type&gt;administrative_area_level_2&lt;/type&gt;   \t\t\t\t&lt;type&gt;political&lt;/type&gt;  \t\t\t&lt;/address_component&gt;  \t\t\t&lt;address_component&gt;   \t\t\t\t&lt;long_name&gt;California&lt;/long_name&gt;   \t\t\t\t&lt;short_name&gt;CA&lt;/short_name&gt;   \t\t\t\t&lt;type&gt;administrative_area_level_1&lt;/type&gt;   \t\t\t\t&lt;type&gt;political&lt;/type&gt;  \t\t\t&lt;/address_component&gt;  \t\t\t&lt;address_component&gt;   \t\t\t\t&lt;long_name&gt;United States&lt;/long_name&gt;   \t\t\t\t&lt;short_name&gt;US&lt;/short_name&gt;   \t\t\t\t&lt;type&gt;country&lt;/type&gt;   \t\t\t\t&lt;type&gt;political&lt;/type&gt;  \t\t\t&lt;/address_component&gt;  \t\t\t&lt;address_component&gt;   \t\t\t\t&lt;long_name&gt;94043&lt;/long_name&gt;   \t\t\t\t&lt;short_name&gt;94043&lt;/short_name&gt;   \t\t\t\t&lt;type&gt;postal_code&lt;/type&gt;  \t\t\t&lt;/address_component&gt;  \t\t\t&lt;geometry&gt;   \t\t\t\t&lt;location&gt;\t\t\t\t&lt;lat&gt;37.4217550&lt;/lat&gt;\t\t\t\t&lt;lng&gt;-122.0846330&lt;/lng&gt;   \t\t\t\t&lt;/location&gt;   \t\t\t\t&lt;location_type&gt;ROOFTOP&lt;/location_type&gt;   \t\t\t\t&lt;viewport&gt;\t\t\t\t&lt;southwest&gt; \t\t\t\t\t&lt;lat&gt;37.4188514&lt;/lat&gt; \t\t\t\t\t&lt;lng&gt;-122.0874526&lt;/lng&gt;\t\t\t\t&lt;/southwest&gt;\t\t\t\t&lt;northeast&gt; \t\t\t\t\t&lt;lat&gt;37.4251466&lt;/lat&gt; \t\t\t\t\t&lt;lng&gt;-122.0811574&lt;/lng&gt;\t\t\t\t&lt;/northeast&gt;   \t\t\t\t&lt;/viewport&gt;  \t\t\t&lt;/geometry&gt; \t\t&lt;/result&gt;&lt;/GeocodeResponse&gt;</code></pre></div></div><p><strong>Reverse Geocoding (Address Lookup)</strong></p><p>The term geocoding generally refers to translating a human-readable address into a location on a map. The process of doing the converse, translating a location on the map into a human-readable address, is known as reverse geocoding.</p><p>The Geocoding API supports reverse geocoding directly using the latlng parameter. For example, the following query contains the latitude/longitude value for a location in Brooklyn:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>http://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&amp;sensor=true_or_false</code></pre></div></div><p>This query returns the following result:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{  \t\t\"status\": \"OK\",  \t\t\"results\": [ {\t\t\"types\": street_address,\t\t\"formatted_address\": \"275-291 Bedford Ave, Brooklyn, NY 11211, USA\",\t\t\"address_components\": [ {  \t\t\t\"long_name\": \"275-291\",  \t\t\t\"short_name\": \"275-291\",  \t\t\t\"types\": street_number\t\t}, {  \t\t\t\"long_name\": \"Bedford Ave\",  \t\t\t\"short_name\": \"Bedford Ave\",  \t\t\t\"types\": route\t\t}, {  \t\t\t\"long_name\": \"New York\",  \t\t\t\"short_name\": \"New York\",  \t\t\t\"types\": [ \"locality\", \"political\" ]\t\t}, {  \t\t\t\"long_name\": \"Brooklyn\",  \t\t\t\"short_name\": \"Brooklyn\",  \t\t\t\"types\": [ \"administrative_area_level_3\", \"political\" ]\t\t}, {  \t\t\t\"long_name\": \"Kings\",  \t\t\t\"short_name\": \"Kings\",  \t\t\t\"types\": [ \"administrative_area_level_2\", \"political\" ]\t\t}, {  \t\t\t\"long_name\": \"New York\",  \t\t\t\"short_name\": \"NY\",  \t\t\t\"types\": [ \"administrative_area_level_1\", \"political\" ]\t\t}, {  \t\t\t\"long_name\": \"United States\",  \t\t\t\"short_name\": \"US\",  \t\t\t\"types\": [ \"country\", \"political\" ]\t\t}, {  \t\t\t\"long_name\": \"11211\",  \t\t\t\"short_name\": \"11211\",  \t\t\t\"types\": postal_code\t\t} ],\t\t\t\"geometry\": {  \t\t\t\t\"location\": {    \t\t\t\"lat\": 40.7142298,\t\t        \"lng\": -73.9614669\t\t    },  \t\t\t\"location_type\": \"RANGE_INTERPOLATED\",  \t\t\t\"viewport\": {    \t\t\t\"southwest\": {      \t\t\t\t\"lat\": 40.7110822, \t\t\t\t        \"lng\": -73.9646145    \t\t},    \t\t\"northeast\": {      \t\t\t\"lat\": 40.7173774,      \t\t\t\"lng\": -73.9583193    \t\t}  \t\t}\t}  \t},... Additional results[] ...</code></pre></div></div><p>Note that the reverse geocoder returned more than one result. The result’s “formatted_addresses” are not just postal addresses, but any way to geographically name a location. For example, when geocoding a point in the city of Chicago, the geocoded point may be denoted as a street address, as the city (Chicago), as its state (Illinois) or as a country (The United States). All are “addresses” to the geocoder. The reverse geocoder returns any of these types as valid results.</p><p>The reverse geocoder matches political entities (countries, provinces, cities and neighborhoods), street addresses, and postal codes.</p><p>The full list of formatted_address values returned by the previous query are shown below.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\"formatted_address\": \"275-291 Bedford Ave, Brooklyn, NY 11211, USA\",\"formatted_address\": \"Williamsburg, NY, USA\",\"formatted_address\": \"New York 11211, USA\",\"formatted_address\": \"Kings, New York, USA\",\"formatted_address\": \"Brooklyn, NY, USA\",\"formatted_address\": \"New York, NY, USA\",\"formatted_address\": \"New York, USA\",\"formatted_address\": \"United States\"</code></pre></div></div><p><strong>Region Biasing</strong></p><p>The Google Geocoding API returns address results influenced by the region (typically the country) from which the request is sent. For example, searches for “San Francisco” may return different results if sent from a domain within the United States than one sent from Spain.</p><p>You can set the Geocoding API to return results biased to a particular region using the region parameter. This parameter takes a ccTLD (country code top-level domain) argument specifying the region bias. Most ccTLD codes are identical to ISO 3166-1 codes, with some notable exceptions. For example, the United Kingdom’s ccTLD is “uk” (.co.uk) while its ISO 3166-1 code is “gb” (technically for the entity of “The United Kingdom of Great Britain and Northern Ireland”).</p><p>Geocoding results can be biased for every domain in which the main Google Maps application is officially launched. Note that biasing only prefers results for a specific domain; if more relevant results exist outside of this domain, they may be included.</p><p>For example, a geocode for “Toledo” returns this result, as the default domain for the Geocoding API is set to the United States:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>http://maps.googleapis.com/maps/api/geocode/json?address=Toledo&amp;sensor=false# Returns:#{  \"status\": \"OK\",  \"results\": [ {    \"types\": [ \"locality\", \"political\" ],    \"formatted_address\": \"Toledo, OH, USA\",    \"address_components\": [ {      \"long_name\": \"Toledo\",      \"short_name\": \"Toledo\",      \"types\": [ \"locality\", \"political\" ]    }, {      \"long_name\": \"Ohio\",      \"short_name\": \"OH\",      \"types\": [ \"administrative_area_level_1\", \"political\" ]    }, {   \t\t   \"long_name\": \"United States\",   \t   \t   \"short_name\": \"US\",\t   \"types\": [ \"country\", \"political\" ]    } ],    \t\"geometry\": {      \t\"location\": {    \t\"lat\": 41.6529200,    \t\"lng\": -83.5777820  \t},  \t\"location_type\": \"APPROXIMATE\",  \t\"viewport\": {    \t\"southwest\": {      \t\"lat\": 41.5861889,      \t\"lng\": -83.7058414    },    \"northeast\": {      \t\"lat\": 41.7195821,      \t\"lng\": -83.4497226    }  },  \"bounds\": {    \t\"southwest\": {      \t\t\"lat\": 41.5803170,      \t\t\"lng\": -83.6947540    \t},    \t\"northeast\": {      \t\t\"lat\": 41.7326310,      \t\t\"lng\": -83.4545660    \t}  \t}\t}  \t} ]}</code></pre></div></div><p>However, a geocode for “Toledo” with region=es (Spain) will return the Spanish city.</p><p><strong>Component Filtering</strong></p><table>  <tbody>    <tr>      <td>The Google Geocoding API can return address results restricted to a specific area. The restriction is specified using the components filter. A filter consists of a list of component:value pairs separated by a pipe (</td>      <td>). Only the results that match all the filters will be returned. Filter values support the same methods of spelling correction and partial matching as other geocoding requests. If a geocoding result is a partial match for a component filter it will contain a partial_match field in the response.</td>    </tr>  </tbody></table><p>The components that can be filtered include:</p><ul>  <li><i class=\"icon-angle-right\"></i> route matches long or short name of a route.</li>  <li><i class=\"icon-angle-right\"></i> locality matches against both locality and sublocality types.</li>  <li><i class=\"icon-angle-right\"></i> administrative_area matches all the administrative_area levels.</li>  <li><i class=\"icon-angle-right\"></i> postal_code matches postal_code and postal_code_prefix.</li>  <li><i class=\"icon-angle-right\"></i> country matches a country name or a two letter ISO 3166-1 country code.</li></ul><p>A geocode for “Santa Cruz” with components=country:ES will return Santa Cruz de Tenerife in Canary Islands, Spain.</p>",
                "url": "http://localhost:4000/post/the-google-geocoding-api/",
                
                
                "categories": ["api","code","geocoding","google","maps","tips"],                
                
                "tags": ["api,code,geocoding,google,maps,tips"],
                "date_published": "2013-11-27T00:00:00+00:00",
                "date_modified": "2013-11-27T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "normalizedSync.php - Single file demo",
                "content_text": "Are you trying to sync de-normalized data from a remote source (e.g. webservice) and struggle importing it into your nicely normalized database? Maybe this little demo might give you an idea!Part 1:  ( Normalize existing DB-Data )Part 2: Keepin’ it all in sync      run this from your CLI:      curl -Ls http://git.io/6VTovw | php            or download the normalizedSync.php file and run it locally  So… just what exactly is going on here?Picture this:    You’re facing yourself with the task to frequently pull data from theSERVICE via their API and keep a synchronized copy on your DB cluster.    You skim the docs, run some little test scripts and have soon found just the right combination of URL and request data to get exactly the data you need to have.    You head happily and motivated into implementing and testing your little cron jobby.And then you realize…Yeah, but what happened???Well… Someone over at theSERVICE thought:“Nah, our users surely won’t need the relational data from our systems… Let’s give ‘em the human friendly, easy readable, flat version.”Or maybe someone though:“3NF - WHAT? Ain’t nobody got tyme fo’ dat!”So basically, you’re facing this situation:&lt;pre&gt;   +----------------------+---------------------------+--------------------+-------------+   |  vendor              | category                  | name               |    ....     |   +----------------------|---------------------------|--------------------|-------------+   |                      |                           |                    |             |   |  Vendor 1            | Category 2                | Product 1          |             |   +-------------------------------------------------------------------------------------+   |                      |                           |                    |             |   |  Vendor 1            | Category 2                | Product 2          |             |   +-------------------------------------------------------------------------------------+   |                      |                           |                    |             |   |  Vendor 2            | Category 1                | Product 3          |             |   +-------------------------------------------------------------------------------------+   |                      |                           |                    |             |   |  Vendor 3            | Catefory 3                | Product 4          |             |   +----------------------+---------------------------+--------------------+-------------+   \\\\===&gt; This is the structure of the data you received...&lt;/pre&gt;But:Your system looks like this:&lt;pre&gt;   +-----+-----------------------+          +-----+--------------------------+   | id  |  name                 |          | id  |  name                    |   |-----|-----------------------|          |-----|--------------------------|   |     |                       |          |     |                          |   | 1   |  Vendor 1             |          | 1   |  Category 43             |   +-----------------------------+          +--------------------------------+   |     |                       |          |     |                          |   | 2   |  Vendor 2             |          | 2   |  Category 1              |   +-----------------------------+          +--------------------------------+   |     |                       |          |     |                          |   +-----+-----------------------+          +-----+--------------------------+   \\\\==============&gt; vendors table          \\\\==============&gt; categories table&lt;/pre&gt;&lt;pre&gt;   +-----+--------------+-----------------+----------------------+-----------+   | id  | vendor_id    | category_id     | name                 |    ...    |   |-----|--------------|-----------------|----------------------|-----------|   |     |              |                 |                      |           |   | 1   | 1            | 2               | Product 1            |           |   +-------------------------------------------------------------------------+   |     |              |                 |                      |           |   | 2   | 1            | 3               | Product 2            |           |   +-------------------------------------------------------------------------+   |     |              |                 |                      |           |   | 3   | 2            | 12              | Product OVER 9000    |           |   +-------------------------------------------------------------------------+   \\\\=========================================================&gt; products table&lt;/pre&gt;And:Your cron-script takes an hour to complete…  Dis no good.Enter: This Demo Script!Again: just run “curl -Ls http://git.io/6VTovw | php” from your CLI and see the data flowing in.Let me quickly describe what’s going on there:   PHP parses the source file for any class declarations   The script grabs Jeremy Dorn’s (@jdorn) SqlFormatter to get some juice ;)   The main loop is called. Just 3 iterations of a formloop, with constantly growing result sets   Within the loop:           Related data (vendors, categories) get extracted from the flat dataset       Then 2 batch insert queries are fired (ON DUPLICATE KEY UPDATE) and the results are instantly retrieved       And a lookup transformation is applied: \t\t  Before: vendors[] = {“id”: 1, “name”: “Vendor 1”} \t\t  After:  vendors[“Vendor 1”] = {“id”: 1, “name”: “Vendor 1”} \t*  So with that easy accessible array of meta-infos, for every row of the received data, the columns vendor and category will be replaced by vendor_id, respectively category_id \t*  Out of this normalized result set, we can quickly create another batch insert       And be done.      But seriously, read the source, get a hang of what’s happening.  This was more or less hastily done, and probably has loads of things to optimize.But you get the idea ;)One more thing…There are a few things I’d like to point out and/or explain:Why do you use array_map() that much? Why no loops?   I easily could’ve used loops, but I wanted to keep it relatively short.Why the hell did you even write this?  Well, I started answering a question about how that particular person could implement an efficient way to solve exactly this problem.   The thing got out of hand…So, is it efficient?   To be fair, I just lab-tested it. I have no real-life benchmarks or anything.   This particular thing uses 15 db queries in total, and the queries aren’t super complex either. But again, I have not analyzed in regards of performanceOkay, Lab-tested? You sure have run it against a DB, haven’t ya?OK! Here’s the interesting bit:We’ve got 3 classes (Sorry @jdorn ):   Helper   Extractor   DBIt is Helper’s job to simulate the API-call, perform the lookup transformations, generate the query string, and so on. Just a little collection of sort of generic methods.When you run the script you will see some output like&lt;pre&gt;*** SysStats: *******************************************************\t$&gt; Received 918 products!\t$&gt; DB Stats:\t$&gt; COUNT(vendors.*) : 100 rows\t$&gt; COUNT(categories.*) : 100 rows\t$&gt; COUNT(products.*) : 1867 rows\t$&gt; Current query count: 15*** End of SysStats *************************************************&lt;/pre&gt;When you take a look at Helper::get_products() you will find that I’ve limited the number of unique vendors and categories to a hundred results each.  That’s just for the sake of creating key-collision so the update part of the query is fired to, demonstrating the desired behaviour. (Albeit only accumulating data at this point)Then we’ve got the Extractor (cue dramatic music)It’s whole purpose is just to extract the meta-info from the API’s data, induce the assembly of the query string, and initiate the lookup optimization.  …sigh.Yeah, and then there’s the weird uncle at the family reunion, that no one is sure of his actual relation to your family. He also stinks, and doesn’t like you.Ladies and gentlemen, please welcome: the Database-Emulator!I can’t quite explain what led my to produce this piece of… this thing. But hey! It does it’s job!It emulates an extremely reduced subset of a DBMS, taking an actual SQL-Query, extracting the wanted data from it, and storing it in a projection of what should’ve been some sort of Relational DBMS scheme.Also, not wanting to overcomplicate it too much, I just gave it a few quick’n’dirty shorthand methods, to make it obey. :)As I said, check the source! It’s always fun to see, what the human brain comes up with, when you’re actually drifting into insanity. :DDrop me a note, if I haven’t scared you already :)And just btw:Here’s a call graph.And here’s the Gist  Have Fun!druuP.S.: Thanks to Jeremy Dorn (@jdorn) for that supreme SQL Formatter and to Marco Monteiro for editing and publishing this bit :) You rock! \\o/",
                "content_html": "<p>Are you trying to sync de-normalized data from a remote source (e.g. webservice) and struggle importing it into your nicely normalized database? Maybe this little demo might give you an idea!</p><!--more--><p><strong>Part 1:</strong>  ( <a href=\"http://sqlfiddle.com/#!2/aa28e/1\">Normalize existing DB-Data</a> )</p><p><strong>Part 2:</strong> Keepin’ it all in sync</p><ul>  <li>    <p>run this from your CLI:</p>    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  curl -Ls http://git.io/6VTovw | php</code></pre></div>    </div>  </li>  <li>    <p>or download the <a href=\"https://gist.github.com/druu/7541557#file-normalizedsync-php\">normalizedSync.php</a> file and run it locally</p>  </li></ul><p><strong>So… just what exactly is going on here?</strong></p><p><strong>Picture this:</strong></p><ul>  <li><i class=\"icon-angle-right\"></i>  You’re facing yourself with the task to frequently pull data from <strong><em>theSERVICE</em></strong> via their API and keep a synchronized copy on your DB cluster.</li>  <li><i class=\"icon-angle-right\"></i>  You skim the docs, run some little test scripts and have soon found just the right combination of URL and request data to get exactly the data you need to have.</li>  <li><i class=\"icon-angle-right\"></i>  You head happily and motivated into implementing and testing your little cron jobby.</li></ul><p>And then you realize…</p><p><strong>Yeah, but what happened???</strong></p><p>Well… Someone over at <strong><em>theSERVICE</em></strong> thought:</p><p><em>“Nah, our users surely won’t need the relational data from our systems… Let’s give ‘em the human friendly, easy readable, flat version.”</em></p><p>Or maybe someone though:</p><p><em>“3NF - WHAT? Ain’t nobody got tyme fo’ dat!”</em></p><p>So basically, you’re facing this situation:</p><p><code>&lt;pre&gt;   +----------------------+---------------------------+--------------------+-------------+   |  vendor              | category                  | name               |    ....     |   +----------------------|---------------------------|--------------------|-------------+   |                      |                           |                    |             |   |  Vendor 1            | Category 2                | Product 1          |             |   +-------------------------------------------------------------------------------------+   |                      |                           |                    |             |   |  Vendor 1            | Category 2                | Product 2          |             |   +-------------------------------------------------------------------------------------+   |                      |                           |                    |             |   |  Vendor 2            | Category 1                | Product 3          |             |   +-------------------------------------------------------------------------------------+   |                      |                           |                    |             |   |  Vendor 3            | Catefory 3                | Product 4          |             |   +----------------------+---------------------------+--------------------+-------------+   \\\\===&gt; This is the structure of the data you received...&lt;/pre&gt;</code><strong>But:</strong></p><p>Your system looks like this:</p><p><code>&lt;pre&gt;   +-----+-----------------------+          +-----+--------------------------+   | id  |  name                 |          | id  |  name                    |   |-----|-----------------------|          |-----|--------------------------|   |     |                       |          |     |                          |   | 1   |  Vendor 1             |          | 1   |  Category 43             |   +-----------------------------+          +--------------------------------+   |     |                       |          |     |                          |   | 2   |  Vendor 2             |          | 2   |  Category 1              |   +-----------------------------+          +--------------------------------+   |     |                       |          |     |                          |   +-----+-----------------------+          +-----+--------------------------+   \\\\==============&gt; vendors table          \\\\==============&gt; categories table&lt;/pre&gt;</code></p><p><code>&lt;pre&gt;   +-----+--------------+-----------------+----------------------+-----------+   | id  | vendor_id    | category_id     | name                 |    ...    |   |-----|--------------|-----------------|----------------------|-----------|   |     |              |                 |                      |           |   | 1   | 1            | 2               | Product 1            |           |   +-------------------------------------------------------------------------+   |     |              |                 |                      |           |   | 2   | 1            | 3               | Product 2            |           |   +-------------------------------------------------------------------------+   |     |              |                 |                      |           |   | 3   | 2            | 12              | Product OVER 9000    |           |   +-------------------------------------------------------------------------+   \\\\=========================================================&gt; products table&lt;/pre&gt;</code></p><p><strong>And:</strong></p><p>Your cron-script takes an hour to complete…</p><blockquote>  <p>Dis no good.</p></blockquote><p><strong>Enter: This Demo Script!</strong>Again: just run <em>“curl -Ls http://git.io/6VTovw | php”</em> from your CLI and see the data flowing in.</p><p>Let me quickly describe what’s going on there:</p><ul>  <li><i class=\"icon-angle-right\"></i> PHP parses the source file for any class declarations</li>  <li><i class=\"icon-angle-right\"></i> The script grabs Jeremy Dorn’s (@jdorn) <a href=\"https://github.com/jdorn/sql-formatter\">SqlFormatter</a> to get some juice ;)</li>  <li><i class=\"icon-angle-right\"></i> The main loop is called. Just 3 iterations of a formloop, with constantly growing result sets</li>  <li><i class=\"icon-angle-right\"></i> Within the loop:    <ul>      <li><i class=\"icon-angle-right\"></i> Related data (vendors, categories) get extracted from the flat dataset</li>      <li><i class=\"icon-angle-right\"></i> Then 2 batch insert queries are fired <em>(ON DUPLICATE KEY UPDATE)</em> and the results are instantly retrieved</li>      <li><i class=\"icon-angle-right\"></i> And a lookup transformation is applied: \t\t <i class=\"icon-angle-right\"></i> <strong>Before:</strong> <em>vendors[] = {“id”: 1, “name”: “Vendor 1”}</em> \t\t <i class=\"icon-angle-right\"></i> <strong>After:</strong>  <em>vendors[“Vendor 1”] = {“id”: 1, “name”: “Vendor 1”}</em> \t* <i class=\"icon-angle-right\"></i> So with that easy accessible array of meta-infos, for every row of the received data, the columns <em>vendor</em> and <em>category</em> will be replaced by <em>vendor_id</em>, respectively <em>category_id</em> \t* <i class=\"icon-angle-right\"></i> Out of this <em>normalized</em> result set, we can quickly create another batch insert</li>      <li><i class=\"icon-angle-right\"></i> And be done.</li>    </ul>  </li></ul><p>But seriously, read the source, get a hang of what’s happening.  This was more or less hastily done, and probably has loads of things to optimize.</p><p>But you get the idea ;)</p><p><strong>One more thing…</strong></p><p>There are a few things I’d like to point out and/or explain:</p><p><strong>Why do you use <em>array_map()</em> that much? Why no loops?</strong></p><ul>  <li><i class=\"icon-angle-right\"></i> I easily could’ve used loops, but I wanted to keep it relatively short.</li></ul><p><strong>Why the hell did you even write this?</strong></p><ul>  <li><i class=\"icon-angle-right\"></i>Well, I started answering a question about how that particular person could implement an efficient way to solve exactly this problem.</li>  <li><i class=\"icon-angle-right\"></i> The thing got out of hand…</li></ul><p><strong>So, is it efficient?</strong></p><ul>  <li><i class=\"icon-angle-right\"></i> To be fair, I just lab-tested it. I have no real-life benchmarks or anything.</li>  <li><i class=\"icon-angle-right\"></i> This particular thing uses 15 db queries in total, and the queries aren’t super complex either. But again, I have not analyzed in regards of performance</li></ul><p><strong>Okay, Lab-tested? You sure have run it against a DB, haven’t ya?</strong></p><p><strong><em>OK! Here’s the interesting bit:</em></strong></p><p>We’ve got 3 classes (Sorry @jdorn ):</p><ul>  <li><i class=\"icon-angle-right\"></i> Helper</li>  <li><i class=\"icon-angle-right\"></i> Extractor</li>  <li><i class=\"icon-angle-right\"></i> DB</li></ul><p>It is <em>Helper’s</em> job to simulate the API-call, perform the lookup transformations, generate the query string, and so on. Just a little collection of sort of generic methods.</p><p>When you run the script you will see some output like</p><p><code>&lt;pre&gt;*** SysStats: *******************************************************\t$&gt; Received 918 products!\t$&gt; DB Stats:\t$&gt; COUNT(vendors.*) : 100 rows\t$&gt; COUNT(categories.*) : 100 rows\t$&gt; COUNT(products.*) : 1867 rows\t$&gt; Current query count: 15*** End of SysStats *************************************************&lt;/pre&gt;</code></p><p>When you take a look at <em>Helper::get_products()</em> you will find that I’ve limited the number of unique vendors and categories to a hundred results each.  That’s just for the sake of creating key-collision so the update part of the query is fired to, demonstrating the desired behaviour. (Albeit only accumulating data at this point)</p><p>Then we’ve got the <em>Extractor</em> <em>(cue dramatic music)</em>It’s whole purpose is just to extract the meta-info from the API’s data, induce the assembly of the query string, and initiate the lookup optimization.</p><blockquote>  <p>…sigh.</p></blockquote><p>Yeah, and then there’s the weird uncle at the family reunion, that no one is sure of his actual relation to your family. He also stinks, and doesn’t like you.</p><p><strong>Ladies and gentlemen, please welcome: the <em>Database</em>-Emulator!</strong></p><p>I can’t quite explain what led my to produce this piece of… this thing. But hey! It does it’s job!</p><p>It emulates an <strong>extremely</strong> reduced subset of a DBMS, taking an actual SQL-Query, extracting the wanted data from it, and storing it in a projection of what should’ve been some sort of Relational DBMS scheme.</p><p>Also, not wanting to overcomplicate it too much, I just gave it a few quick’n’dirty shorthand methods, to make it obey. :)</p><p>As I said, check the source! It’s always fun to see, what the human brain comes up with, when you’re actually drifting into insanity. :D</p><p>Drop me a note, if I haven’t scared you already :)</p><p><strong>And just btw:</strong><a href=\"http://i.imgur.com/JRWcbfC.png\">Here’s a call graph.</a>And <a href=\"https://gist.github.com/druu/7541557\">here’s the Gist</a></p><blockquote>  <p>Have Fun!druu</p></blockquote><p><strong>P.S.:</strong> Thanks to Jeremy Dorn (@jdorn) for that supreme SQL Formatter and to Marco Monteiro for editing and publishing this bit :) You rock! \\o/</p>",
                "url": "http://localhost:4000/post/normalizedsync-single-file-demo/",
                
                
                "categories": ["data","database","how-to","sync","tutorial"],                
                
                "tags": ["data,database,how-to,sync,tutorial"],
                "date_published": "2013-11-19T00:00:00+00:00",
                "date_modified": "2013-11-19T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Keep your sanity with office pranks",
                "content_text": "I’ve been part of what we call the work force for a few years now. Worked at a few places before my current job. They were all different. The people was obviously hence the mood/vibe was always changing from place to place, but one thing was the same across the board: office pranks.They have always been a part of me since I started working. From the classic stapler wrapped in pudding (from the office tv show) to any other (but we’ll get to that).Let’s talk about some of the good office pranks that happened just in the last 9 to 10 months, and what they’ve done for everyone at work.When people start working at a new place, normally they don’t know what to expect. They don’t know anyone. People need some way to establish trust and most of all, companionship. that’s when office pranks play one of the biggest roles of all (drinking can help too though).The wrapperOnce upon a time, a colleague from work was on vacation. What’s the best way to welcome someone when they were away for two weeks? — Prank obviously.That was exactly what I did. I wrapped everything in wrapping plastic paper. Dexter style. And I mean everything: chair, computer, table, keyboard, even the pens were individually wrapped. Took me about one hour to accomplish that.You tell me if it was worth it.If you want to see how that was done here’s a gif showing how: the process.You should be careful choosing the person you’re doing this. You have to be sure that the person will take it as a good and hilarious thing. When they do take it that way, you now have a friend for life.The barbie setupNewton’s Third Law of Motion says the following:  For every action, there is an equal and opposite reaction.Like so, if you prank someone at the office you are now next in line to be pranked, awesome right? When I went on vacation earlier this year I knew something was going to happen. At least I was hoping for that. I would be disappointed if nothing happened.To give you some context about this one: one of my mates from work and me moved in together, you know, roommates. Living alone is just too damn expensive. The thing was, everyone at the office was always joking about me moving in with the guy. The typical gay jokes were in place.When I came from my vacation I found my new work environment. Everything was pink. There was even a framed picture of the guy that it was going to live with. Heart shaped framed pictures I might add.The picture will do the \"talking\" for me hereI was really proud of everyone when I saw it. Actually I was so proud that I used my computer like that for almost a week. People from every department would come over and visit me just to see the work of art.The loud oneThis one was not made for me, I was not even a part of the team that accomplished the prank. But great minds think alike. The conversation went something like this:Person 1: You know what would be amazing?Person 2: What?Person 1: Do the horn prank on a chair.Person 2: Oh man, that would be awesome.Person 1: Do it!And he did. Unfortunately I was away when it happened so I didn’t get to see the result. But I do know that everyone in the building heard it. I don’t have the real picture with me but here’s the prank I’m talking about.Genius right?The little thingsThen there’s the little things that some of the guys at work do that just make your day better. Sure they’re dumb, and some people wouldn’t like them. For me, that just means they care, but most of all, they do make my day better.Yeah! I haven't grew up to the point were dick jokes aren't funny anymore. Sorry.Those small things can go from changing the volume on your computer to change keyboards or mice that are normally connected to the computers with bluetooth.The best one of allNow, the one that actually made me write this post.I work for a very active company. They’re always trying to do something for the people that work there. For instance, this year everyone is going skydiving. Every now and then you’ll get a random text from the CEO telling you something like:  How would you feel like skydiving this weekend?We’re more than 80 people, so it takes a while to get your turn. This week I finally go that message. I went nuts, this was always something that I wanted to do, so you can imagine my reaction. I felt like dancing. To the point that some of my coworkers were annoyed. Because you know, I wouldn’t shut up about it.So they did something about it. They stole my phone. Changed one of their names to the name I had for our CEO and sent me a text that was something like this:  I’m sorry Marco, but you are not skydiving this weekend. I’m sure another opportunity will come up in the future.I felt like someone just took candy from me. And they let that feeling sink in for more than two hours. I moaned and moaned. But then, they called me from that number and said: GOT YA!!!I couldn’t believe it. I was impressed. Was it bad? No, it was the best thing ever. Knowing that it was all a lie, and that they thought about all that in less than an hour? I think my work is done. They can now prank on their own.One thing is for sure. We all had a really good laugh and most of all, we’re now even closer than we were before. That’s what office pranks do for you. It makes your 9 to 5 work day more fun than it normally would. If you do know any bad side to office pranks let me know. I haven’t found one yet.One more thing, I did jump last weekend and it was amazing.One of the best experiences so far.",
                "content_html": "<p>I’ve been part of what we call the work force for a few years now. Worked at a few places before my current <a href=\"http://blog.marcomonteiro.net/post/the-ch-experience\">job</a>. They were all different. The people was obviously hence the mood/vibe was always changing from place to place, but one thing was the same across the board: <strong>office pranks</strong>.</p><p>They have always been a part of me since I started working. From the classic stapler wrapped in pudding (from the office tv show) to any other (but we’ll get to that).</p><!--more--><p>Let’s talk about some of the good office pranks that happened just in the last 9 to 10 months, and what they’ve done for everyone at work.</p><p>When people start working at a new place, normally they don’t know what to expect. They don’t know anyone. People need some way to establish trust and most of all, companionship. that’s when office pranks play one of the biggest roles of all (drinking can help too though).</p><p><strong>The wrapper</strong></p><p>Once upon a time, a colleague from work was on vacation. What’s the best way to welcome someone when they were away for two weeks? — Prank obviously.</p><p>That was exactly what I did. I wrapped everything in wrapping plastic paper. Dexter style. And I mean everything: chair, computer, table, keyboard, even the pens were individually wrapped. Took me about one hour to accomplish that.</p><p><img src=\"https://dl.dropboxusercontent.com/u/404972/blog/mac_mena.jpg\" alt=\"office prank\" /></p><p><small><center>You tell me if it was worth it.</center></small></p><p>If you want to see how that was done here’s a gif showing how: <a href=\"https://dl.dropboxusercontent.com/u/404972/blog/macmena.gif\">the process</a>.</p><p>You should be careful choosing the person you’re doing this. You have to be sure that the person will take it as a good and hilarious thing. When they do take it that way, you now have a friend for life.</p><p><strong>The barbie setup</strong></p><p>Newton’s Third Law of Motion says the following:</p><blockquote>  <p>For every action, there is an equal and opposite reaction.</p></blockquote><p>Like so, if you prank someone at the office you are now next in line to be pranked, awesome right? When I went on vacation earlier this year I knew something was going to happen. At least I was hoping for that. I would be disappointed if nothing happened.</p><p>To give you some context about this one: one of my mates from work and me moved in together, you know, roommates. Living alone is just too damn expensive. The thing was, everyone at the office was always joking about me moving in with the guy. The typical gay jokes were in place.</p><p>When I came from my vacation I found my new work environment. Everything was pink. There was even a framed picture of the guy that it was going to live with. Heart shaped framed pictures I might add.</p><p><img src=\"https://dl.dropboxusercontent.com/u/404972/blog/pink.jpg\" alt=\"Office pranks\" /></p><p><small><center>The picture will do the \"talking\" for me here</center></small></p><p>I was really proud of everyone when I saw it. Actually I was so proud that I used my computer like that for almost a week. People from every department would come over and visit me just to see the work of art.</p><p><strong>The loud one</strong></p><p>This one was not made for me, I was not even a part of the team that accomplished the prank. But great minds think alike. The conversation went something like this:</p><p><em><strong>Person 1:</strong> You know what would be amazing?</em></p><p><em><strong>Person 2:</strong> What?</em></p><p><em><strong>Person 1:</strong> Do the horn prank on a chair.</em></p><p><em><strong>Person 2:</strong> Oh man, that would be awesome.</em></p><p><em><strong>Person 1:</strong> Do it!</em></p><p>And he did. Unfortunately I was away when it happened so I didn’t get to see the result. But I do know that everyone in the building heard it. I don’t have the real picture with me but here’s the prank I’m talking about.</p><p><img src=\"https://dl.dropboxusercontent.com/u/404972/blog/laud.jpg\" alt=\"office prank\" /></p><p><small><center>Genius right?</center></small></p><p><strong>The little things</strong></p><p>Then there’s the little things that some of the guys at work do that just make your day better. Sure they’re dumb, and some people wouldn’t like them. For me, that just means they care, but most of all, they do make my day better.</p><p><img src=\"https://dl.dropboxusercontent.com/u/404972/blog/dick.jpg\" alt=\"Office prank dick\" /></p><p><small><center>Yeah! I haven't grew up to the point were dick jokes aren't funny anymore. Sorry.</center></small></p><p>Those small things can go from changing the volume on your computer to change keyboards or mice that are normally connected to the computers with bluetooth.</p><p><strong>The best one of all</strong></p><p>Now, the one that actually made me write this post.</p><p>I work for a very active company. They’re always trying to do something for the people that work there. For instance, this year everyone is going skydiving. Every now and then you’ll get a random text from the CEO telling you something like:</p><blockquote>  <p>How would you feel like skydiving this weekend?</p></blockquote><p>We’re more than 80 people, so it takes a while to get your turn. This week I finally go that message. I went nuts, this was always something that I wanted to do, so you can imagine my reaction. I felt like dancing. To the point that some of my coworkers were annoyed. Because you know, I wouldn’t shut up about it.</p><p>So they did something about it. They stole my phone. Changed one of their names to the name I had for our CEO and sent me a text that was something like this:</p><blockquote>  <p>I’m sorry Marco, but you are not skydiving this weekend. I’m sure another opportunity will come up in the future.</p></blockquote><p>I felt like someone just took candy from me. And they let that feeling sink in for more than two hours. I moaned and moaned. But then, they called me from that number and said: <strong>GOT YA!!!</strong></p><p>I couldn’t believe it. I was impressed. Was it bad? No, it was the best thing ever. Knowing that it was all a lie, and that they thought about all that in less than an hour? I think my work is done. They can now prank on their own.</p><p>One thing is for sure. We all had a really good laugh and most of all, we’re now even closer than we were before. That’s what office pranks do for you. It makes your 9 to 5 work day more fun than it normally would. If you do know any bad side to office pranks let me know. I haven’t found one yet.</p><p>One more thing, I did jump last weekend and it was amazing.</p><p><img src=\"https://dl.dropboxusercontent.com/u/404972/blog/skydiving.jpg\" alt=\"Skydiving\" /></p><p><small><center>One of the best experiences so far.</center></small></p>",
                "url": "http://localhost:4000/post/keep-your-sanity-with-office-pranks/",
                
                
                "categories": ["Inspiration","jobs","life","office pranks","personal","work"],                
                
                "tags": ["Inspiration,jobs,life,office pranks,personal,work"],
                "date_published": "2013-11-14T00:00:00+00:00",
                "date_modified": "2013-11-14T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Ross Tuck - HTTP and Your Angry Dog",
                "content_text": "This was probably one of my favorite talks from Laracon EU 2013. I loved almost everything about it. It was informative, sometimes funny and most of all everyone in the room was interested. What can I say, Ross Tuck is a natural speaker.Ross Tuck is an American developer, living in the Netherlands, working at Ibuildings, wearing a hat, and wishing he was reading a book.Talk: HTTP and Your Angry Dog  What is an etag, exactly? What’s all that stuff in the Accept header? And what the heck does a Vary header do anyways?! Web developers use HTTP everyday but most of us don’t know how to get the most out of it. This talk goes past memorizing status codes (although we’ll see those too) and teaches how to get the most out of every request and response. Slides",
                "content_html": "<p>This was probably one of my favorite talks from <a href=\"http://laracon.eu/2013/\">Laracon EU 2013</a>. I loved almost everything about it. It was informative, sometimes funny and most of all everyone in the room was interested. What can I say, Ross Tuck is a natural speaker.</p><p>Ross Tuck is an American developer, living in the Netherlands, working at Ibuildings, wearing a hat, and wishing he was reading a book.</p><!--more--><p><strong>Talk:</strong> HTTP and Your Angry Dog</p><blockquote>  <p>What is an etag, exactly? What’s all that stuff in the Accept header? And what the heck does a Vary header do anyways?! Web developers use HTTP everyday but most of us don’t know how to get the most out of it. This talk goes past memorizing status codes (although we’ll see those too) and teaches how to get the most out of every request and response.</p></blockquote><iframe width=\"100%\" height=\"350\" src=\"//www.youtube.com/embed/2qBaMsYXtJ4\" frameborder=\"0\" allowfullscreen=\"\"></iframe><p><i class=\"icon-stop\"></i> <a href=\"http://www.slideshare.net/rosstuck/http-and-your-angry-dog\">Slides</a></p>",
                "url": "http://localhost:4000/post/ross-tuck-http-and-your-angry-dog/",
                
                
                "categories": ["http","laracon","laravel","php","talks"],                
                
                "tags": ["http,laracon,laravel,php,talks"],
                "date_published": "2013-11-11T00:00:00+00:00",
                "date_modified": "2013-11-11T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "My Dev setup on Mac",
                "content_text": "I’ve been asked a couple of times about my dev environment: what apps I’m currently using, and how I do use them. I’m going to try and sum it all up, going from terminal to text editor of choice and some of the plugins I have on them. Text editor  Sublime Text 2 may be downloaded and evaluated for free, however a license must be purchased for continued use. There is currently no enforced time limit for the evaluation.I haven’t updated to Sublime Text 3 yet. Actually, I still don’t see the point of upgrading.Packages:   BracketHighlighter Bracket and tag highlighter for Sublime Text   Codeigniter Snippets A list of codeigniter snippets for Sublime Text 2   Doc​Blockr DocBlock comments in Javascript, PHP, CoffeeScript, Actionscript, C &amp; C++   Emmet (ex-Zen Coding) for Sublime Text   Git Plugin for some git integration into sublime text   Git​Gutter A Sublime Text 2/3 plugin to see git diff in gutter   Side​Bar​Enhancements Enhancements to Sublime Text sidebar. Files and folders.   Theme - Nexus Dark custom UI theme for Sublime Text 2 Theme   Tomorrow Color Schemes Tomorrow Color Schemes for SublimeText 2Settings:{\t\"auto_complete_commit_on_tab\": false,\t\"bold_folder_labels\": true,\t\"caret_style\": \"smooth\",\t\"color_scheme\": \"Packages/Tomorrow Color Schemes/Tomorrow-Night.tmTheme\",\t\"detect_indentation\": false,\t\"draw_white_space\": \"all\",\t\"fallback_encoding\": \"UTF-8\",\t\"file_exclude_patterns\":\t[\t\t\"*.pyc\",\t\t\"*.pyo\",\t\t\"*.exe\",\t\t\"*.dll\",\t\t\"*.obj\",\t\t\"*.o\",\t\t\"*.a\",\t\t\"*.lib\",\t\t\"*.so\",\t\t\"*.dylib\",\t\t\"*.ncb\",\t\t\"*.sdf\",\t\t\"*.suo\",\t\t\"*.pdb\",\t\t\"*.idb\",\t\t\".DS_Store\",\t\t\"*.class\",\t\t\"*.psd\",\t\t\"*.db\"\t],\t\"folder_exclude_patterns\":\t[\t\t\".svn\",\t\t\".git\",\t\t\".hg\",\t\t\"CVS\",\t\t\".hgcheck\"\t],\t\"font_face\": \"Inconsolata\",\t\"font_options\":\t[\t\t\"no_bold\",\t\t\"subpixel_antialias\"\t],\t\"font_size\": 13.0,\t\"highlight_line\": true,\t\"highlight_modified_tabs\": true,\t\"ignored_packages\":\t[\t\t\"Vintage\"\t],\t\"line_padding_bottom\": 3,\t\"line_padding_top\": 3,\t\"match_brackets\": true,\t\"match_brackets_angle\": true,\t\"match_brackets_braces\": true,\t\"match_brackets_content\": true,\t\"match_brackets_square\": true,\t\"rulers\":\t[\t\t95\t],\t\"scroll_past_end\": true,\t\"show_full_path\": true,\t\"tab_size\": 4,\t\"theme\": \"Nexus.sublime-theme\",\t\"translate_tabs_to_spaces\": true,\t\"trim_trailing_white_space_on_save\": true,\t\"vintage_start_in_command_mode\": true,\t\"word_wrap\": true} Version ControlFor version control I use Git. Along with that I normally use one git-GUI called SourceTree.SourceTree is a free Git &amp; Mercurial client for Windows or Mac. I specially like this one because it has Git-Flow already out of the box.Along with this I also use those two packages for Sublime. Specially when I want to do something quick like a diff or change branches. That way, I don’t need to go into my Terminal or SourceTree so often. TerminalZSH is a must have. And if you want to use it like me you’ll need the oh-my-zsh awesome sauce.  oh-my-zsh is an open source, community-driven framework for managing your ZSH configuration. It comes bundled with a ton of helpful functions, helpers, plugins, themes, and few things that make you shout…Here’s my ZSH config:# Path to your oh-my-zsh configuration.ZSH=$HOME/.oh-my-zsh#Set name of the theme to load.# Look in ~/.oh-my-zsh/themes/# Optionally, if you set this to \"random\", it'll load a random theme each# time that oh-my-zsh is loaded.ZSH_THEME=\"miloshadzic\"# Aliasesalias zshconfig=\"st ~/.zshrc\"alias ohmyzsh=\"st ~/.oh-my-zsh\"alias vhosts=\"sudo nano /etc/apache2/extra/httpd-vhosts.conf\"alias st='/Applications/Sublime\\ Text\\ 2.app/Contents/SharedSupport/bin/subl'alias ll=\"ls -lG\"alias la=\"ls -AG\"alias l=\"ls -FG\"alias ls=\"ls -G\"alias restarta=\"sudo apachectl restart\"alias update-php=\"sudo curl -s http://php-osx.liip.ch/install.sh | bash -s 5.4\"alias ctags=\"`brew --prefix`/bin/ctags\"alias ctagsbuild=\"ctags -R -f .tags\"# Set to this to use case-sensitive completion# CASE_SENSITIVE=\"true\"# Comment this out to disable weekly auto-update checks# DISABLE_AUTO_UPDATE=\"true\"# Uncomment following line if you want to disable colors in ls# DISABLE_LS_COLORS=\"true\"# Uncomment following line if you want to disable autosetting terminal title.# DISABLE_AUTO_TITLE=\"true\"# Uncomment following line if you want red dots to be displayed while waiting for completion# COMPLETION_WAITING_DOTS=\"true\"# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/# Example format: plugins=(rails git textmate ruby lighthouse)plugins=(git github git-flow brew django node perl rails rails3 mercurial)source $ZSH/oh-my-zsh.shunsetopt correct_all# Customize to your needs...export PATH=/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin:/usr/local/git/binPATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting MarkdownI write all my blog posts in Markdown. I could do it right on my blog, but I do most of my writing when I don’t have a connection. So I need a Markdown app. Mou app is my favourite. One of the best features is that I can include my blog css and see exactly how my post is going to be like while I write it. PHP EnvironmentMost developers using PHP probably use MAMP, personally I don’t like it. I use a simple binary package where you can install or update your php with just one terminal command using curl.curl -s http://php-osx.liip.ch/install.sh | bash -s 5.4 Database managementMost of my projects are using mySQL. Installing mySQL is quite easy, but the best free tool for database management is probably Sequel Pro. Office AppsThese days I actually use the bundle from Apple, since it’s free and it’s a good alternative to the expensive Microsoft one.   Numbers Spreadsheets   Pages Word processor   Keynote Create and deliver presentations Browsers   Chrome Work browser   Firefox Debug browser   Safari Starting to like this one for daily browsing Email ClientSparrow has been acquired by Google, hence the development stopped. However, this is still my favourite email client. Cloud Storage   iCloud Document keeping   Dropbox Safe keeping   Google Drive Shared documents CalendarFor calendar I use the calendar app for mac, synced with my Google account, since I use Android there’s no need for the iCloud stuff here. Package managerHomebrew is the missing package manager for OS X, specially if like me, you had bad experiences with MacPorts. Social appsWe all need to socialize every now and again. For that I use the following.   Twitter app For twitter obviously   Textual IRC   Hangouts chrome extension Google HangoutsLet me know what alternatives you are using besides the ones I listed.",
                "content_html": "<p>I’ve been asked a couple of times about my dev environment: what apps I’m currently using, and how I do use them. I’m going to try and sum it all up, going from terminal to text editor of choice and some of the plugins I have on them.</p><p><strong><i class=\"icon-caret-right\"></i> Text editor</strong></p><blockquote>  <p>Sublime Text 2 may be downloaded and evaluated for free, however a license must be purchased for continued use. There is currently no enforced time limit for the evaluation.</p></blockquote><p>I haven’t updated to Sublime Text 3 yet. Actually, I still don’t see the point of upgrading.</p><p>Packages:</p><ul>  <li><a href=\"https://sublime.wbond.net/packages/BracketHighlighter\"><i class=\"icon-angle-right\"></i> BracketHighlighter <small><em>Bracket and tag highlighter for Sublime Text</em></small></a></li>  <li><a href=\"https://sublime.wbond.net/packages/CodeIgniter%20Snippets\"><i class=\"icon-angle-right\"></i> Codeigniter Snippets <small><em>A list of codeigniter snippets for Sublime Text 2</em></small></a></li>  <li><a href=\"https://sublime.wbond.net/packages/DocBlockr\"><i class=\"icon-angle-right\"></i> Doc​Blockr <small><em>DocBlock comments in Javascript, PHP, CoffeeScript, Actionscript, C &amp; C++</em></small></a></li>  <li><a href=\"https://sublime.wbond.net/packages/Emmet\"><i class=\"icon-angle-right\"></i> Emmet <small><em>(ex-Zen Coding) for Sublime Text</em></small></a></li>  <li><a href=\"https://sublime.wbond.net/packages/Git\"><i class=\"icon-angle-right\"></i> Git <small><em>Plugin for some git integration into sublime text</em></small></a></li>  <li><a href=\"https://sublime.wbond.net/packages/GitGutter\"><i class=\"icon-angle-right\"></i> Git​Gutter <small><em>A Sublime Text 2/3 plugin to see git diff in gutter</em></small></a></li>  <li><a href=\"https://sublime.wbond.net/packages/SideBarEnhancements\"><i class=\"icon-angle-right\"></i> Side​Bar​Enhancements <small><em>Enhancements to Sublime Text sidebar. Files and folders.</em></small></a></li>  <li><a href=\"https://sublime.wbond.net/packages/Theme%20-%20Nexus\"><i class=\"icon-angle-right\"></i> Theme - Nexus <small><em>Dark custom UI theme for Sublime Text 2 Theme</em></small></a></li>  <li><a href=\"https://sublime.wbond.net/packages/Tomorrow%20Color%20Schemes\"><i class=\"icon-angle-right\"></i> Tomorrow Color Schemes <small><em>Tomorrow Color Schemes for SublimeText 2</em></small></a></li></ul><p>Settings:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{\t\"auto_complete_commit_on_tab\": false,\t\"bold_folder_labels\": true,\t\"caret_style\": \"smooth\",\t\"color_scheme\": \"Packages/Tomorrow Color Schemes/Tomorrow-Night.tmTheme\",\t\"detect_indentation\": false,\t\"draw_white_space\": \"all\",\t\"fallback_encoding\": \"UTF-8\",\t\"file_exclude_patterns\":\t[\t\t\"*.pyc\",\t\t\"*.pyo\",\t\t\"*.exe\",\t\t\"*.dll\",\t\t\"*.obj\",\t\t\"*.o\",\t\t\"*.a\",\t\t\"*.lib\",\t\t\"*.so\",\t\t\"*.dylib\",\t\t\"*.ncb\",\t\t\"*.sdf\",\t\t\"*.suo\",\t\t\"*.pdb\",\t\t\"*.idb\",\t\t\".DS_Store\",\t\t\"*.class\",\t\t\"*.psd\",\t\t\"*.db\"\t],\t\"folder_exclude_patterns\":\t[\t\t\".svn\",\t\t\".git\",\t\t\".hg\",\t\t\"CVS\",\t\t\".hgcheck\"\t],\t\"font_face\": \"Inconsolata\",\t\"font_options\":\t[\t\t\"no_bold\",\t\t\"subpixel_antialias\"\t],\t\"font_size\": 13.0,\t\"highlight_line\": true,\t\"highlight_modified_tabs\": true,\t\"ignored_packages\":\t[\t\t\"Vintage\"\t],\t\"line_padding_bottom\": 3,\t\"line_padding_top\": 3,\t\"match_brackets\": true,\t\"match_brackets_angle\": true,\t\"match_brackets_braces\": true,\t\"match_brackets_content\": true,\t\"match_brackets_square\": true,\t\"rulers\":\t[\t\t95\t],\t\"scroll_past_end\": true,\t\"show_full_path\": true,\t\"tab_size\": 4,\t\"theme\": \"Nexus.sublime-theme\",\t\"translate_tabs_to_spaces\": true,\t\"trim_trailing_white_space_on_save\": true,\t\"vintage_start_in_command_mode\": true,\t\"word_wrap\": true}</code></pre></div></div><p><strong><i class=\"icon-caret-right\"></i> Version Control</strong></p><p>For version control I use <a href=\"http://git-scm.com/\">Git</a>. Along with that I normally use one git-GUI called <a href=\"http://www.sourcetreeapp.com/\">SourceTree</a>.</p><p><a href=\"http://www.sourcetreeapp.com/\">SourceTree</a> is a free Git &amp; Mercurial client for Windows or Mac. I specially like this one because it has Git-Flow already out of the box.</p><p>Along with this I also use those two packages for Sublime. Specially when I want to do something quick like a diff or change branches. That way, I don’t need to go into my Terminal or SourceTree so often.</p><p><strong><i class=\"icon-caret-right\"></i> Terminal</strong></p><p>ZSH is a must have. And if you want to use it like me you’ll need the <a href=\"https://github.com/robbyrussell/oh-my-zsh\">oh-my-zsh</a> awesome sauce.</p><blockquote>  <p>oh-my-zsh is an open source, community-driven framework for managing your ZSH configuration. It comes bundled with a ton of helpful functions, helpers, plugins, themes, and few things that make you shout…</p></blockquote><p>Here’s my ZSH config:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># Path to your oh-my-zsh configuration.ZSH=$HOME/.oh-my-zsh#Set name of the theme to load.# Look in ~/.oh-my-zsh/themes/# Optionally, if you set this to \"random\", it'll load a random theme each# time that oh-my-zsh is loaded.ZSH_THEME=\"miloshadzic\"# Aliasesalias zshconfig=\"st ~/.zshrc\"alias ohmyzsh=\"st ~/.oh-my-zsh\"alias vhosts=\"sudo nano /etc/apache2/extra/httpd-vhosts.conf\"alias st='/Applications/Sublime\\ Text\\ 2.app/Contents/SharedSupport/bin/subl'alias ll=\"ls -lG\"alias la=\"ls -AG\"alias l=\"ls -FG\"alias ls=\"ls -G\"alias restarta=\"sudo apachectl restart\"alias update-php=\"sudo curl -s http://php-osx.liip.ch/install.sh | bash -s 5.4\"alias ctags=\"`brew --prefix`/bin/ctags\"alias ctagsbuild=\"ctags -R -f .tags\"# Set to this to use case-sensitive completion# CASE_SENSITIVE=\"true\"# Comment this out to disable weekly auto-update checks# DISABLE_AUTO_UPDATE=\"true\"# Uncomment following line if you want to disable colors in ls# DISABLE_LS_COLORS=\"true\"# Uncomment following line if you want to disable autosetting terminal title.# DISABLE_AUTO_TITLE=\"true\"# Uncomment following line if you want red dots to be displayed while waiting for completion# COMPLETION_WAITING_DOTS=\"true\"# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/# Example format: plugins=(rails git textmate ruby lighthouse)plugins=(git github git-flow brew django node perl rails rails3 mercurial)source $ZSH/oh-my-zsh.shunsetopt correct_all# Customize to your needs...export PATH=/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin:/usr/local/git/binPATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting</code></pre></div></div><p><strong><i class=\"icon-caret-right\"></i> Markdown</strong></p><p>I write all my blog posts in Markdown. I could do it right on my blog, but I do most of my writing when I don’t have a connection. So I need a Markdown app. <a href=\"http://mouapp.com/\">Mou app</a> is my favourite. One of the best features is that I can include my blog css and see exactly how my post is going to be like while I write it.</p><p><strong><i class=\"icon-caret-right\"></i> PHP Environment</strong></p><p>Most developers using PHP probably use <a href=\"http://www.mamp.info/en/index.html\">MAMP</a>, personally I don’t like it. I use a simple binary package where you can install or update your php with just one terminal command using curl.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>curl -s http://php-osx.liip.ch/install.sh | bash -s 5.4</code></pre></div></div><p><strong><i class=\"icon-caret-right\"></i> Database management</strong></p><p>Most of my projects are using mySQL. Installing mySQL is quite easy, but the best free tool for database management is probably <a href=\"http://www.sequelpro.com/\">Sequel Pro</a>.</p><p><strong><i class=\"icon-caret-right\"></i> Office Apps</strong></p><p>These days I actually use the bundle from Apple, since it’s free and it’s a good alternative to the expensive Microsoft one.</p><ul>  <li><a href=\"http://www.apple.com/ios/numbers/\"><i class=\"icon-angle-right\"></i> Numbers <small><em>Spreadsheets</em></small></a></li>  <li><a href=\"http://www.apple.com/ios/pages/\"><i class=\"icon-angle-right\"></i> Pages <small><em>Word processor</em></small></a></li>  <li><a href=\"http://www.apple.com/ios/keynote/\"><i class=\"icon-angle-right\"></i> Keynote <small><em>Create and deliver presentations</em></small></a></li></ul><p><strong><i class=\"icon-caret-right\"></i> Browsers</strong></p><ul>  <li><a href=\"https://www.google.com/intl/en/chrome/browser/\"><i class=\"icon-angle-right\"></i> Chrome <small><em>Work browser</em></small></a></li>  <li><a href=\"http://www.mozilla.org/en-US/firefox/new/\"><i class=\"icon-angle-right\"></i> Firefox <small><em>Debug browser</em></small></a></li>  <li><a href=\"http://www.apple.com/safari/\"><i class=\"icon-angle-right\"></i> Safari <small><em>Starting to like this one for daily browsing</em></small></a></li></ul><p><strong><i class=\"icon-caret-right\"></i> Email Client</strong></p><p><a href=\"http://sparrowmailapp.com/\">Sparrow</a> has been acquired by Google, hence the development stopped. However, this is still my favourite email client.</p><p><strong><i class=\"icon-caret-right\"></i> Cloud Storage</strong></p><ul>  <li><a href=\"https://www.icloud.com/\"><i class=\"icon-angle-right\"></i> iCloud <small><em>Document keeping</em></small></a></li>  <li><a href=\"www.dropbox.com/\"><i class=\"icon-angle-right\"></i> Dropbox <small><em>Safe keeping</em></small></a></li>  <li><a href=\"https://drive.google.com\"><i class=\"icon-angle-right\"></i> Google Drive <small><em>Shared documents</em></small></a></li></ul><p><strong><i class=\"icon-caret-right\"></i> Calendar</strong></p><p>For calendar I use the calendar app for mac, synced with my Google account, since I use Android there’s no need for the iCloud stuff here.</p><p><strong><i class=\"icon-caret-right\"></i> Package manager</strong></p><p><a href=\"http://brew.sh/\">Homebrew</a> is the missing package manager for OS X, specially if like me, you had bad experiences with MacPorts.</p><p><strong><i class=\"icon-caret-right\"></i> Social apps</strong></p><p>We all need to socialize every now and again. For that I use the following.</p><ul>  <li><a href=\"https://itunes.apple.com/en/app/twitter/id409789998\"><i class=\"icon-angle-right\"></i> Twitter app <small><em>For twitter obviously</em></small></a></li>  <li><a href=\"http://www.codeux.com/textual/\"><i class=\"icon-angle-right\"></i> Textual <small><em>IRC</em></small></a></li>  <li><a href=\"https://chrome.google.com/webstore/detail/hangouts/nckgahadagoaajjgafhacjanaoiihapd?utm_source=chrome-ntp-icon\"><i class=\"icon-angle-right\"></i> Hangouts chrome extension <small><em>Google Hangouts</em></small></a></li></ul><p>Let me know what alternatives you are using besides the ones I listed.</p>",
                "url": "http://localhost:4000/post/my-dev-setup-on-mac/",
                
                
                "categories": ["app","development","environment","mac"],                
                
                "tags": ["app,development,environment,mac"],
                "date_published": "2013-11-04T00:00:00+00:00",
                "date_modified": "2013-11-04T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Atomic commits",
                "content_text": "I’m sure this happened to you before, more than one time actually. You have a big file, you changed lots of stuff in it, but those changes are not really related. One may be related to one class and the other to something completely different. Normally you should avoid that, your commits should always be specific to one task, feature or bug. If you do a small search about how to commit better you’ll see that even the commit messages should have this notion.Your commit message should look something like this:Explain in one line what the commit is about (Issue number if possible)Describe the problem the commit solves.Justify why you chose the particular solution.Reference the issue number if not addressed in the title.So if you’re solving a bunch of problems in the same commit, your commit messages will tend to go off-road.Ideally you want to separate those changes into different commits and there’s only one way (that I know of) to do that.Let’s look at the git add command:git add [-n] [-v] [--force | -f] [--interactive | -i] [--patch | -p][--edit | -e] [--[no-]all | --[no-]ignore-removal | [--update | -u]][--intent-to-add | -N] [--refresh] [--ignore-errors] [--ignore-missing][--] [&lt;pathspec&gt;...]The one we’re looking for is git add -p  -p–patchInteractively choose hunks of patch between the index and the work tree and add them to the index. This gives the user a chance to review the difference before adding modified contents to the index.This effectively runs add –interactive, but bypasses the initial command menu and directly jumps to the patch subcommand. See “Interactive mode” for details.The -p flag is not only available for git add but also for git checkout (I haven’t used this one yet).  This means that you can use git checkout -p to selectively discard edits from your current working tree. See the “Interactive Mode” section of git-add(1) to learn how to operate the –patch mode.Personally I have used the git add -p flag without even know about it when using a Git GUI. But sometimes you just need to go old school and use the terminal. Git add reference Git checkout reference",
                "content_html": "<p>I’m sure this happened to you before, more than one time actually. You have a big file, you changed lots of stuff in it, but those changes are not really related. One may be related to one class and the other to something completely different. Normally you should avoid that, your commits should <em>always</em> be specific to one task, feature or bug. If you do a small search about how to commit better you’ll see that even the commit messages should have this notion.</p><!--more--><p>Your commit message should look something like this:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Explain in one line what the commit is about (Issue number if possible)Describe the problem the commit solves.Justify why you chose the particular solution.Reference the issue number if not addressed in the title.</code></pre></div></div><p>So if you’re solving a bunch of problems in the same commit, your commit messages will tend to go off-road.</p><p>Ideally you want to separate those changes into different commits and there’s only one way (that I know of) to do that.</p><p>Let’s look at the git add command:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>git add [-n] [-v] [--force | -f] [--interactive | -i] [--patch | -p][--edit | -e] [--[no-]all | --[no-]ignore-removal | [--update | -u]][--intent-to-add | -N] [--refresh] [--ignore-errors] [--ignore-missing][--] [&lt;pathspec&gt;...]</code></pre></div></div><p>The one we’re looking for is <strong><em>git add -p</em></strong></p><blockquote>  <p>-p–patchInteractively choose hunks of patch between the index and the work tree and add them to the index. This gives the user a chance to review the difference before adding modified contents to the index.This effectively runs add –interactive, but bypasses the initial command menu and directly jumps to the patch subcommand. See “Interactive mode” for details.</p></blockquote><p>The <strong><em>-p</em></strong> flag is not only available for <strong><em>git add</em></strong> but also for <strong><em>git checkout</em></strong> (I haven’t used this one yet).</p><blockquote>  <p>This means that you can use git checkout -p to selectively discard edits from your current working tree. See the “Interactive Mode” section of git-add(1) to learn how to operate the –patch mode.</p></blockquote><p>Personally I have used the <strong><em>git add -p</em></strong> flag without even know about it when using a Git GUI. But sometimes you just need to go old school and use the terminal.</p><p><i class=\"icon-external-link\"></i> <a href=\"http://git-scm.com/docs/git-add\">Git add reference</a></p><p><i class=\"icon-external-link\"></i> <a href=\"http://git-scm.com/docs/git-checkout\">Git checkout reference</a></p>",
                "url": "http://localhost:4000/post/atomic-commits/",
                
                
                "categories": ["Git","tips","Version-control"],                
                
                "tags": ["Git,tips,Version-control"],
                "date_published": "2013-11-04T00:00:00+00:00",
                "date_modified": "2013-11-04T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Useful tips if you're starting with Git",
                "content_text": "When I started using Git I wasn’t doing any version control. I was just working on my projects and I just didn’t see any use to it. I wasn’t seeing the long run. Everything seemed like too much work — Branching, staging, stashing, committing — I was confused.  But then Git was kind forced on me, since I wanted to contribute to open source projects and almost all of them were (and still are thankfully) using Git I had to learn how to use it. This is what I learned from that process. Commit yourself to using GitReally, don’t give up. It’s going to hurt. Your not going to like it at first. But believe me when I say that in a matter of days, you’ll love it. You must avoid exceptions like “I’m just doing this static html thing, why do I need Git for?”. That is the worst thing you can do. Do your homeworkRead a bit, prepared yourself. You’re going to need a little know how before you start. You don’t need to read a book on the subject, but it’s good to know the basics.   How to start a repository?   How to commit?   How to track new files?   How to push and pull from remotes?Simple things that you should take a look first. Don’t overdoStart with something simple, don’t try to use concepts like Git-Flow at first. Find your own workflow. When you’re comfortable with that, then you can do some research on how to do things from there on. I find this one the easiest one when you’re starting.   Git workflow for designers Branching is awesomeYour first impulse will be to stay on the same branch and just work there. Don’t do that, learn the power of branching and you’ll see that is worth it.   Learn Git Branching To use a Git GUI or not to use a Git GUI?I’m not against it, if you’re not comfortable using the terminal, you should use a good Git GUI. As long you’re using Git and are versioning your code the world is a better place. Personally I use this one from time to time SourceTree.That’s it, if you follow this small set of tips you’ll be up and ready in no time.",
                "content_html": "<p>When I started using Git I wasn’t doing any version control. I was just working on my projects and I just didn’t see any use to it. I wasn’t seeing the long run. Everything seemed like too much work — Branching, staging, stashing, committing — I was confused.  But then Git was kind forced on me, since I wanted to contribute to open source projects and almost all of them were (and still are thankfully) using Git I had to learn how to use it. This is what I learned from that process.</p><!--more--><p><strong><i class=\"icon-arrow-right\"></i> Commit yourself to using Git</strong></p><p>Really, don’t give up. It’s going to hurt. Your not going to like it at first. But believe me when I say that in a matter of days, you’ll love it. You must avoid exceptions like <em>“I’m just doing this static html thing, why do I need Git for?”</em>. That is the worst thing you can do.</p><p><strong><i class=\"icon-arrow-right\"></i> Do your homework</strong></p><p>Read a bit, prepared yourself. You’re going to need a little know how before you start. You don’t need to read a book on the subject, but it’s good to know the basics.</p><ul>  <li><i class=\"icon-angle-right\"></i> How to start a repository?</li>  <li><i class=\"icon-angle-right\"></i> How to commit?</li>  <li><i class=\"icon-angle-right\"></i> How to track new files?</li>  <li><i class=\"icon-angle-right\"></i> How to push and pull from remotes?</li></ul><p>Simple things that you should take a look first.</p><p><strong><i class=\"icon-arrow-right\"></i> Don’t overdo</strong></p><p>Start with something simple, don’t try to use concepts like Git-Flow at first. Find your own workflow. When you’re comfortable with that, then you can do some research on how to do things from there on. I find this one the easiest one when you’re starting.</p><ul>  <li><a href=\"http://blog.teamtreehouse.com/git-for-designers-part-1\"><i class=\"icon-angle-right\"></i> Git workflow for designers</a></li></ul><p><strong><i class=\"icon-arrow-right\"></i> Branching is awesome</strong></p><p>Your first impulse will be to stay on the same branch and just work there. Don’t do that, learn the power of branching and you’ll see that is worth it.</p><ul>  <li><a href=\"http://pcottle.github.io/learnGitBranching/\"><i class=\"icon-angle-right\"></i> Learn Git Branching</a></li></ul><p><strong><i class=\"icon-arrow-right\"></i> To use a Git GUI or not to use a Git GUI?</strong></p><p>I’m not against it, if you’re not comfortable using the terminal, you should use a good Git GUI. As long you’re using Git and are versioning your code the world is a better place. Personally I use this one from time to time <a href=\"http://www.sourcetreeapp.com/\">SourceTree</a>.</p><p>That’s it, if you follow this small set of tips you’ll be up and ready in no time.</p>",
                "url": "http://localhost:4000/post/useful-tips-if-you're-starting-to-use-git/",
                
                
                "categories": ["flow","Git","gui","tips","Version-control","workflow"],                
                
                "tags": ["flow,Git,gui,tips,Version-control,workflow"],
                "date_published": "2013-10-30T00:00:00+00:00",
                "date_modified": "2013-10-30T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "The rubber duck",
                "content_text": "Once upon a time there was a rubber duck! No seriously. We are programmers, we solve problems, and every now and then, we come across problems that we never had to solve before. Once in a while we need help. Maybe we don’t have the know how to solve it. Maybe we’re just too close to the project to even see the real problem. Or maybe, just maybe, we just need someone to talk to, share some ideas and the problem will solve itself.So we use rubber ducks to solve problems.  Rubber duck debugging, rubber ducking, and the rubber duckie test are informal terms used in software engineering to refer to a method of debugging code. The name is a reference to a story in the book The Pragmatic Programmer in which a programmer would carry around a rubber duck and debug his code by forcing himself to explain it, line-by-line, to the duck.We should all have rubber ducks to talk to. Problem is: when we try to skip the rubber duck experience and jump right to the “I’ll just ask someone on the Internet” we end up doing it wrong. We assume that everyone will know our project well, and we don’t ask the right questions.That’s why pages like this one on Stack Exchange exist. Or even this one for IRC.I know it’s better to have a rubber duck that actually talks back at you, but you just have to make an effort to be helped and ask your questions the right way. Wikipedia",
                "content_html": "<p>Once upon a time there was a rubber duck! No seriously. We are programmers, we solve problems, and every now and then, we come across problems that we never had to solve before. Once in a while we need help. Maybe we don’t have the know how to solve it. Maybe we’re just too close to the project to even see the real problem. Or maybe, just maybe, we just need someone to talk to, share some ideas and the problem will solve itself.</p><p>So we use rubber ducks to solve problems.</p><!--more--><blockquote>  <p>Rubber duck debugging, rubber ducking, and the rubber duckie test are informal terms used in software engineering to refer to a method of debugging code. The name is a reference to a story in the book The Pragmatic Programmer in which a programmer would carry around a rubber duck and debug his code by forcing himself to explain it, line-by-line, to the duck.</p></blockquote><p>We should all have rubber ducks to talk to. Problem is: when we try to skip the rubber duck experience and jump right to the <em>“I’ll just ask someone on the Internet”</em> we end up doing it wrong. We assume that everyone will know our project well, and we don’t ask the right questions.</p><p>That’s why pages like <a href=\"http://superuser.com/questions/how-to-ask\">this one</a> on Stack Exchange exist. Or even <a href=\"http://jeff.jones.be/technology/articles/how-to-ask-for-help-on-irc/\">this one</a> for IRC.</p><p>I know it’s better to have a rubber duck that actually talks back at you, but you just have to make an effort to be helped and ask your questions the right way.</p><p><a href=\"http://en.wikipedia.org/wiki/Rubber_duck_debugging\"><i class=\"icon-external-link\"></i> Wikipedia</a></p>",
                "url": "http://localhost:4000/post/the-rubber-duck/",
                
                
                "categories": ["asking for help","help","programming","Rubber duck debugging"],                
                
                "tags": ["asking for help,help,programming,Rubber duck debugging"],
                "date_published": "2013-10-29T00:00:00+00:00",
                "date_modified": "2013-10-29T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Glide.js a simple, lightweight & fast jQuery slider",
                "content_text": "Glide is responsive and touch-friendly jQuery slider. Based on CSS3 transitions with fallback to older broswers. It’s simple, lightweight and fast. Designed to slide, no less, no more. A lot has been said this past few weeks about OOCSS markup, Jędrzej Chałubek (creator of Glide.js) needed simple and fast slider with fully customizable OOCSS markup. If you’re into OOCSS this is the way to go.How to usejQuery is the only dependency. Make sure to include it.&lt;script src=\"http://code.jquery.com/jquery-1.9.1.min.js\"&gt;&lt;/script&gt;Include Glide.js&lt;script src=\"jquery.glide.js\"&gt;&lt;/script&gt;Link to slider stylesheet inside document head.&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\"&gt;Make necessary markup for slider.&lt;div class=\"slider\"&gt;\t&lt;ul class=\"slides\"&gt;\t\t&lt;li class=\"slide\"&gt;&lt;/li&gt;\t\t&lt;li class=\"slide\"&gt;&lt;/li&gt;\t\t&lt;li class=\"slide\"&gt;&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;Init our slider on default options …  &lt;script&gt;\t  $('.slider').glide();  &lt;/script&gt;Best features of Glide.js   Lightweight ~4,5kB minifed   Ultra fast CSS3 Transitions   Responsive   Touch &amp; mobile friendly   Public API with callbacks   OOCSS &amp; BEM   Swipe event   Arrows and bullets navigation   Keyboard navigation   Autoplay   Pause on hover Glide.js Github",
                "content_html": "<p>Glide is responsive and touch-friendly jQuery slider. Based on CSS3 transitions with fallback to older broswers. It’s simple, lightweight and fast. Designed to slide, no less, no more. A lot has been said this past few weeks about OOCSS markup, Jędrzej Chałubek (creator of Glide.js) needed simple and fast slider with fully customizable OOCSS markup. If you’re into OOCSS this is the way to go.</p><!--more--><p><strong>How to use</strong></p><p>jQuery is the only dependency. Make sure to include it.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;script src=\"http://code.jquery.com/jquery-1.9.1.min.js\"&gt;&lt;/script&gt;</code></pre></div></div><p>Include Glide.js</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;script src=\"jquery.glide.js\"&gt;&lt;/script&gt;</code></pre></div></div><p>Link to slider stylesheet inside document head.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\"&gt;</code></pre></div></div><p>Make necessary markup for slider.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;div class=\"slider\"&gt;\t&lt;ul class=\"slides\"&gt;\t\t&lt;li class=\"slide\"&gt;&lt;/li&gt;\t\t&lt;li class=\"slide\"&gt;&lt;/li&gt;\t\t&lt;li class=\"slide\"&gt;&lt;/li&gt;\t&lt;/ul&gt;&lt;/div&gt;</code></pre></div></div><p>Init our slider on default options …</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  &lt;script&gt;\t  $('.slider').glide();  &lt;/script&gt;</code></pre></div></div><p><strong>Best features of Glide.js</strong></p><ul>  <li><i class=\"icon-angle-right\"></i> Lightweight ~4,5kB minifed</li>  <li><i class=\"icon-angle-right\"></i> Ultra fast CSS3 Transitions</li>  <li><i class=\"icon-angle-right\"></i> Responsive</li>  <li><i class=\"icon-angle-right\"></i> Touch &amp; mobile friendly</li>  <li><i class=\"icon-angle-right\"></i> Public API with callbacks</li>  <li><i class=\"icon-angle-right\"></i> OOCSS &amp; BEM</li>  <li><i class=\"icon-angle-right\"></i> Swipe event</li>  <li><i class=\"icon-angle-right\"></i> Arrows and bullets navigation</li>  <li><i class=\"icon-angle-right\"></i> Keyboard navigation</li>  <li><i class=\"icon-angle-right\"></i> Autoplay</li>  <li><i class=\"icon-angle-right\"></i> Pause on hover</li></ul><p><a href=\"http://jedrzejchalubek.com/glide/\"><i class=\"icon-link\"></i> Glide.js</a></p><p><a href=\"https://github.com/jedrzejchalubek/Glide.js\"><i class=\"icon-github\"></i> Github</a></p>",
                "url": "http://localhost:4000/post/glidejs-simple-lightweight-and-fast-jquery-slider/",
                
                
                "categories": ["css3","javascript","jquery","plugin","responsive"],                
                
                "tags": ["css3,javascript,jquery,plugin,responsive"],
                "date_published": "2013-10-22T00:00:00+01:00",
                "date_modified": "2013-10-22T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "How Designers Destroyed the World",
                "content_text": "Mike Monteiro is a Portuguese/American designer, one of the founders of Mule Design. He’s probably my favorite speaker when it comes to the subject of Design. He wrote one book called Design is a Job that I highly recommend.A few years back he also gave a talk called Fuck you, pay me. But this year he gave one called How Designers Destroyed the World and it’s amazing. He talks about the responsibility of designers to do the right thing. That design is supposed to be about solving problems and not just about making beautiful things (or yet another camera app).  You are directly responsible for what you put into the world. Yet every day designers all over the world work on projects without giving any thought or consideration to the impact that work has on the world around them. This needs to change.So if you’re a Designer of any kind, Graphic Designer, Web Designer, UI Designer, UX Designer and so on you must watch this.",
                "content_html": "<p>Mike Monteiro is a Portuguese/American designer, one of the founders of <a href=\"http://muledesign.com/\">Mule Design</a>. He’s probably my favorite speaker when it comes to the subject of Design. He wrote one book called <a href=\"http://www.abookapart.com/products/design-is-a-job\">Design is a Job</a> that I highly recommend.</p><!--more--><p>A few years back he also gave a talk called <a href=\"https://vimeo.com/22053820\">Fuck you, pay me</a>. But this year he gave one called <strong>How Designers Destroyed the World</strong> and it’s amazing. He talks about the responsibility of designers to do the right thing. That design is supposed to be about solving problems and not just about making beautiful things (or yet another camera app).</p><blockquote>  <p>You are directly responsible for what you put into the world. Yet every day designers all over the world work on projects without giving any thought or consideration to the impact that work has on the world around them. This needs to change.</p></blockquote><p>So if you’re a Designer of any kind, Graphic Designer, Web Designer, UI Designer, UX Designer and so on you <strong>must</strong> watch this.</p><iframe src=\"//player.vimeo.com/video/68470326?title=0&amp;byline=0&amp;portrait=0&amp;color=ffffff\" width=\"100%\" height=\"338\" frameborder=\"0\" webkitallowfullscreen=\"\" mozallowfullscreen=\"\" allowfullscreen=\"\"></iframe>",
                "url": "http://localhost:4000/post/mike-monteiro-how-designers-destroyed-the-world/",
                
                
                "categories": ["design","pep-talk","responsibility","talks","Webdesign"],                
                
                "tags": ["design,pep-talk,responsibility,talks,Webdesign"],
                "date_published": "2013-10-20T00:00:00+01:00",
                "date_modified": "2013-10-20T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Laracon EU recordings",
                "content_text": "You may or may not know, but last month I went to Amsterdam for Laracon EU. I wrote a few posts about it. At the time they promised that everything would be recorded so all the devs out there could see it. They promised and they’re now delivering. For now we access to 5 videos, but soon there will be more. Just keep track of Laracon EU youtube channel. Taylor Otwell - Building Artisan Commands Fabien Potencier - Standardization, the Symfony Way Phill Sparks - Software Design Patterns in L4 Kapil Verma - Engineering Complex Applications with L4 Jeffrey Way - Laravel Testing Tips, Techniques and Pitfalls Other posts about laracon:   Can’t get to Laracon? You’re in luck!   Laravel Amsterdam Conference   Laracon here I come!   Laracon, are you excited?   Laracon EU (I)   Laracon EU (II)   Laracon EU (III)   Laracon EU (IV)   Laracon EU (V) Laracon EU Youtube channel Laracon EU 2013",
                "content_html": "<p>You may or may not know, but last month I went to Amsterdam for <a href=\"http://laracon.eu/2013/\">Laracon EU</a>. I wrote a few posts about it. At the time they promised that everything would be recorded so all the devs out there could see it. They promised and they’re now delivering. For now we access to 5 videos, but soon there will be more. Just keep track of Laracon EU youtube channel.</p><!--more--><p><strong><i class=\"icon-youtube\"></i> Taylor Otwell - Building Artisan Commands</strong></p><iframe width=\"100%\" height=\"350\" src=\"//www.youtube.com/embed/fGwnCWfzLRI\" frameborder=\"0\" allowfullscreen=\"\"></iframe><p><strong><i class=\"icon-youtube\"></i> Fabien Potencier - Standardization, the Symfony Way</strong></p><iframe width=\"100%\" height=\"350\" src=\"//www.youtube.com/embed/0erGiEm07b8\" frameborder=\"0\" allowfullscreen=\"\"></iframe><p><strong><i class=\"icon-youtube\"></i> Phill Sparks - Software Design Patterns in L4</strong></p><iframe width=\"100%\" height=\"350\" src=\"//www.youtube.com/embed/qkIsTtIcTBE\" frameborder=\"0\" allowfullscreen=\"\"></iframe><p><strong><i class=\"icon-youtube\"></i> Kapil Verma - Engineering Complex Applications with L4</strong></p><iframe width=\"100%\" height=\"350\" src=\"//www.youtube.com/embed/DEj1Q0N9o0w\" frameborder=\"0\" allowfullscreen=\"\"></iframe><p><strong><i class=\"icon-youtube\"></i> Jeffrey Way - Laravel Testing Tips, Techniques and Pitfalls</strong></p><iframe width=\"100%\" height=\"350\" src=\"//www.youtube.com/embed/vmeh8XgrC2U\" frameborder=\"0\" allowfullscreen=\"\"></iframe><p><strong><i class=\"icon-youtube\"></i> Other posts about laracon:</strong></p><ul>  <li><a href=\"http://blog.marcomonteiro.net/post/can't-get-to-laracon-you're-in-luck!\"><i class=\"icon-angle-right\"></i> Can’t get to Laracon? You’re in luck!</a></li>  <li><a href=\"http://blog.marcomonteiro.net/post/laravel-amsterdam-conference\"><i class=\"icon-angle-right\"></i> Laravel Amsterdam Conference</a></li>  <li><a href=\"http://blog.marcomonteiro.net/post/laracon-here-i-come!\"><i class=\"icon-angle-right\"></i> Laracon here I come!</a></li>  <li><a href=\"http://blog.marcomonteiro.net/post/laracon,-are-you-excited\"><i class=\"icon-angle-right\"></i> Laracon, are you excited?</a></li>  <li><a href=\"http://blog.marcomonteiro.net/post/laracon-eu-1\"><i class=\"icon-angle-right\"></i> Laracon EU (I)</a></li>  <li><a href=\"http://blog.marcomonteiro.net/post/laracon-eu-(2)\"><i class=\"icon-angle-right\"></i> Laracon EU (II)</a></li>  <li><a href=\"http://blog.marcomonteiro.net/post/laracon-eu-3\"><i class=\"icon-angle-right\"></i> Laracon EU (III)</a></li>  <li><a href=\"http://blog.marcomonteiro.net/post/laracon-eu-(iv)\"><i class=\"icon-angle-right\"></i> Laracon EU (IV)</a></li>  <li><a href=\"http://blog.marcomonteiro.net/post/laracon-(v)\"><i class=\"icon-angle-right\"></i> Laracon EU (V)</a></li></ul><p><a href=\"http://www.youtube.com/channel/UCb9XEo_1SDNR8Ucpbktrg5A?feature=c4-feed-u\"><i class=\"icon-youtube\"></i> Laracon EU Youtube channel</a></p><p><a href=\"http://laracon.eu/2013/\"><i class=\"icon-external-link\"></i> Laracon EU 2013</a></p>",
                "url": "http://localhost:4000/post/laracon-eu-recordings/",
                
                
                "categories": ["laracon","laravel","laravel 4","php","talks"],                
                
                "tags": ["laracon,laravel,laravel 4,php,talks"],
                "date_published": "2013-10-18T00:00:00+01:00",
                "date_modified": "2013-10-18T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "How to add Previous and Next links on wardrobe",
                "content_text": "If you’re a regular here you may have noticed that I’m always making some small improvements on my blog. The last one was quite simple, I just wanted to add some previous and next links when the user is reading an article. However, I wasn’t aiming to just simple arrows. I wanted to user to see the title of those articles.Since my blog uses wardrobe and that is built on top of Laravel, doing that is pretty straight forward.First let’s go to the PostController and get those articles.This is the function you’re looking for:/** * Display the specified resource. * * @param string $slug * * @return Response */public function getShow($slug){\t$post = $this-&gt;posts-&gt;findBySlug($slug);\tif ( ! $post)\t{\t\treturn App::abort(404, 'Page not found');\t}\treturn View::make('themes.'.$this-&gt;theme.'.post', compact('post'));}So let’s get the prev and next articles based on the Post object./** * Display the specified resource. * * @param string $slug * * @return Response */public function getShow($slug){\t$post = $this-&gt;posts-&gt;findBySlug($slug);\tif ( ! $post)\t{\t\treturn App::abort(404, 'Page not found');\t}\t$prev = DB::table('posts')-&gt;orderBy('id', 'asc')-&gt;where('id', '&gt;', $post-&gt;id)-&gt;where('active', '1')-&gt;first();\t$next = DB::table('posts')-&gt;orderBy('id', 'desc')-&gt;where('id', '&lt;', $post-&gt;id)-&gt;where('active', '1')-&gt;first();\treturn View::make('themes.'.$this-&gt;theme.'.post', compact('post', 'next', 'prev'));}Quite easy right? Now you may want to do the same in your getPreview function./** * Show a post preview. * * @param int $id * * @return Response */public function getPreview($id){\t$post = $this-&gt;posts-&gt;find($id);\tif ( ! Auth::check() or ! $post)\t{\t\treturn App::abort(404, 'Page not found');\t}\t$prev = DB::table('posts')-&gt;orderBy('id', 'asc')-&gt;where('id', '&gt;', $post-&gt;id)-&gt;where('active', '1')-&gt;first();\t$next = DB::table('posts')-&gt;orderBy('id', 'desc')-&gt;where('id', '&lt;', $post-&gt;id)-&gt;where('active', '1')-&gt;first();\treturn View::make('themes.'.$this-&gt;theme.'.post', compact('post', 'next', 'prev'));}Now you just need to add that navigation links to your layout. I added mine to my post.blade.php file, since our next and prev links will only be used there.&lt;nav class=\"other_posts\"&gt;\t&lt;ul&gt;\t\t@if($next)\t\t\t&lt;li id=\"next\"&gt;&lt;a href=\"\" rel=\"prev\"&gt; &lt;/a&gt;&lt;/li&gt;\t\t@endif\t\t@if($prev)\t\t\t&lt;li id=\"previous\"&gt;&lt;a href=\"\" rel=\"next\"&gt;&lt;/a&gt;&lt;/li&gt;\t\t@endif\t&lt;/ul&gt;&lt;/nav&gt;That’s is, nice and easy.ps: Soon after I published this post I had this talk with Dan Horrigan. Turns out there’s a better way to do it.Basically he got the same result with just one query. Look at this beauty.  \tpublic function getShow($slug)  \t{  \t$post = $this-&gt;posts-&gt;findBySlug($slug);  \tif ( ! $post)  \t{\t  \treturn App::abort(404, 'Page not found');  \t}  \t$posts = DB::select('SELECT * FROM `posts` WHERE `active` = 1 AND (`id` = (SELECT MIN(`id`) FROM `posts` where `id` &gt; ?) OR `id` = (SELECT MAX(`id`) FROM `posts` where `id` &lt; ?))', array($post-&gt;id, $post-&gt;id));  \t$prev = null;  \t$next = null;  \t$count = count($posts);  \tif ($count == 2) {\t \tlist($prev, $next) = $posts;  \t} elseif ($count == 1) {\t  \tif ($posts[0]-&gt;id &gt; $post-&gt;id) {\t\t  \t$next = $posts[0];\t  \t} else {\t\t  \t$prev = $posts[0];\t  \t}  \t}  return View::make('themes.'.$this-&gt;theme.'.post', compact('post', 'next', 'prev'));  \t}Keep in mind that this is really only useful if it is a high traffic site. Thank you Dan.",
                "content_html": "<p>If you’re a regular here you may have noticed that I’m always making some small improvements on my blog. The last one was quite simple, I just wanted to add some previous and next links when the user is reading an article. However, I wasn’t aiming to just simple arrows. I wanted to user to see the title of those articles.</p><p>Since my blog uses wardrobe and that is built on top of Laravel, doing that is pretty straight forward.</p><!--more--><p>First let’s go to the PostController and get those articles.</p><p>This is the function you’re looking for:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>/** * Display the specified resource. * * @param string $slug * * @return Response */public function getShow($slug){\t$post = $this-&gt;posts-&gt;findBySlug($slug);\tif ( ! $post)\t{\t\treturn App::abort(404, 'Page not found');\t}\treturn View::make('themes.'.$this-&gt;theme.'.post', compact('post'));}</code></pre></div></div><p>So let’s get the prev and next articles based on the Post object.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>/** * Display the specified resource. * * @param string $slug * * @return Response */public function getShow($slug){\t$post = $this-&gt;posts-&gt;findBySlug($slug);\tif ( ! $post)\t{\t\treturn App::abort(404, 'Page not found');\t}\t$prev = DB::table('posts')-&gt;orderBy('id', 'asc')-&gt;where('id', '&gt;', $post-&gt;id)-&gt;where('active', '1')-&gt;first();\t$next = DB::table('posts')-&gt;orderBy('id', 'desc')-&gt;where('id', '&lt;', $post-&gt;id)-&gt;where('active', '1')-&gt;first();\treturn View::make('themes.'.$this-&gt;theme.'.post', compact('post', 'next', 'prev'));}</code></pre></div></div><p>Quite easy right? Now you may want to do the same in your getPreview function.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>/** * Show a post preview. * * @param int $id * * @return Response */public function getPreview($id){\t$post = $this-&gt;posts-&gt;find($id);\tif ( ! Auth::check() or ! $post)\t{\t\treturn App::abort(404, 'Page not found');\t}\t$prev = DB::table('posts')-&gt;orderBy('id', 'asc')-&gt;where('id', '&gt;', $post-&gt;id)-&gt;where('active', '1')-&gt;first();\t$next = DB::table('posts')-&gt;orderBy('id', 'desc')-&gt;where('id', '&lt;', $post-&gt;id)-&gt;where('active', '1')-&gt;first();\treturn View::make('themes.'.$this-&gt;theme.'.post', compact('post', 'next', 'prev'));}</code></pre></div></div><p>Now you just need to add that navigation links to your layout. I added mine to my post.blade.php file, since our next and prev links will only be used there.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;nav class=\"other_posts\"&gt;\t&lt;ul&gt;\t\t@if($next)\t\t\t&lt;li id=\"next\"&gt;&lt;a href=\"\" rel=\"prev\"&gt; &lt;/a&gt;&lt;/li&gt;\t\t@endif\t\t@if($prev)\t\t\t&lt;li id=\"previous\"&gt;&lt;a href=\"\" rel=\"next\"&gt;&lt;/a&gt;&lt;/li&gt;\t\t@endif\t&lt;/ul&gt;&lt;/nav&gt;</code></pre></div></div><p>That’s is, nice and easy.</p><p><strong>ps:</strong> Soon after I published this post I had <a href=\"https://twitter.com/marcogmonteiro/status/390842895458369536\">this talk</a> with <a href=\"https://twitter.com/dhrrgn\">Dan Horrigan</a>. Turns out there’s a better way to do it.</p><p>Basically he got the same result with just one query. Look at this beauty.</p>  \tpublic function getShow($slug)  \t{<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  \t$post = $this-&gt;posts-&gt;findBySlug($slug);  \tif ( ! $post)  \t{\t  \treturn App::abort(404, 'Page not found');  \t}  \t$posts = DB::select('SELECT * FROM `posts` WHERE `active` = 1 AND (`id` = (SELECT MIN(`id`) FROM `posts` where `id` &gt; ?) OR `id` = (SELECT MAX(`id`) FROM `posts` where `id` &lt; ?))', array($post-&gt;id, $post-&gt;id));  \t$prev = null;  \t$next = null;  \t$count = count($posts);  \tif ($count == 2) {\t \tlist($prev, $next) = $posts;  \t} elseif ($count == 1) {\t  \tif ($posts[0]-&gt;id &gt; $post-&gt;id) {\t\t  \t$next = $posts[0];\t  \t} else {\t\t  \t$prev = $posts[0];\t  \t}  \t}  return View::make('themes.'.$this-&gt;theme.'.post', compact('post', 'next', 'prev'));  \t}</code></pre></div></div><p>Keep in mind that this is really only useful if it is a high traffic site. Thank you <a href=\"https://twitter.com/dhrrgn\">Dan</a>.</p>",
                "url": "http://localhost:4000/post/how-to-add-previous-and-next-links-on-wardrobe/",
                
                
                "categories": ["laravel","laravel 4","tips","wardrobe"],                
                
                "tags": ["laravel,laravel 4,tips,wardrobe"],
                "date_published": "2013-10-17T00:00:00+01:00",
                "date_modified": "2013-10-17T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Bye bye Google Analytics, hello Piwik",
                "content_text": "I used to love Google Analytics, I’ve been using it for all my personal or client projects. However, the “new” version has been pissing me off more than usual. First I never got used to the new layout. Then the non integration with the google account that you normally have active it’s insane. If I have multiple accounts it always makes me logout from all of them and login with just one. If I’m using just one, it always make me hit the login button.Anyway, long story short I started looking for an alternative. I had two requirements: I wanted to control the updates of the service; and I wanted to be able to use it like the old analytics. Nice and clean.So I found Piwik Analytics. The first thing I heard while talking to people about this matter was: “why would you bother with Piwik, when you have Google Analytics working fine?” — Like I said, Google Analytics doesn’t work fine.When you start really looking around you’ll find some stuff that Piwik has that Google Analytics doesn’t.   Tracking file downloads   Tracking outbound links   Tracks cart abandonment   Handy summaries in the conversion report to quickly figure out what is going on   Officially supported Mobile App   They publish a clear and open road map of where the application is going   Piwik’s team offers Professional Services to help customize your site for a fee. (You need Google Premium at a $100,000/year to get that)If this is not enough for you, consider this:   What if you do not wish to be limited by Google Analytics or their API   Is it important to own/control your data?   Do you need a tool to collect data so you can create custom dashboards.Personally, having control over my data, and the fact that Google is not using my data for something else it’s more than enough for me to choose Piwik. Piwik",
                "content_html": "<p>I used to love Google Analytics, I’ve been using it for all my personal or client projects. However, the “new” version has been pissing me off more than usual. First I never got used to the new layout. Then the non integration with the google account that you normally have active it’s insane. If I have multiple accounts it always makes me logout from all of them and login with just one. If I’m using just one, it always make me hit the login button.</p><p>Anyway, long story short I started looking for an alternative. I had two requirements: I wanted to control the updates of the service; and I wanted to be able to use it like the old analytics. Nice and clean.</p><!--more--><p>So I found Piwik Analytics. The first thing I heard while talking to people about this matter was: <em>“why would you bother with Piwik, when you have Google Analytics working fine?”</em> — Like I said, Google Analytics doesn’t work fine.</p><p>When you start really looking around you’ll find some stuff that Piwik has that Google Analytics doesn’t.</p><ul>  <li><i class=\"icon-angle-right\"></i> Tracking file downloads</li>  <li><i class=\"icon-angle-right\"></i> Tracking outbound links</li>  <li><i class=\"icon-angle-right\"></i> Tracks cart abandonment</li>  <li><i class=\"icon-angle-right\"></i> Handy summaries in the conversion report to quickly figure out what is going on</li>  <li><i class=\"icon-angle-right\"></i> Officially supported Mobile App</li>  <li><i class=\"icon-angle-right\"></i> They publish a clear and open road map of where the application is going</li>  <li><i class=\"icon-angle-right\"></i> Piwik’s team offers Professional Services to help customize your site for a fee. (You need Google Premium at a $100,000/year to get that)</li></ul><p>If this is not enough for you, consider this:</p><ul>  <li><i class=\"icon-angle-right\"></i> What if you do not wish to be limited by Google Analytics or their API</li>  <li><i class=\"icon-angle-right\"></i> Is it important to own/control your data?</li>  <li><i class=\"icon-angle-right\"></i> Do you need a tool to collect data so you can create custom dashboards.</li></ul><p>Personally, having control over my data, and the fact that Google is not using my data for something else it’s more than enough for me to choose Piwik.</p><p><a href=\"http://piwik.org/\"><i class=\"icon-external-link\"></i> Piwik</a></p>",
                "url": "http://localhost:4000/post/bye-bye-google-analytics-hello-piwik/",
                
                
                "categories": ["google-analytics","piwik","seo","tips","web"],                
                
                "tags": ["google-analytics,piwik,seo,tips,web"],
                "date_published": "2013-10-16T00:00:00+01:00",
                "date_modified": "2013-10-16T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Optimize your content for flipboard",
                "content_text": "Ever since I stopped using normal RSS clients I started using apps like Flipboard to read my content. Since then, I notice that some content coming from some sources would look amazing, and some would look awful. So I’ve done some research and noticed that you can improve how your content looks on flipboard.Here’s a list of classes that you can add to your markup to make it happen.   flipboard-remove — will ignore any element with this class   flipboard-keep — will use this element in the article e.g tagging a paragraph with this will insure it remains part of the excerpt   flipboard-image — will use the element as an image   flipboard-title — will use as title   flipboard-subtitle — will use subtitle   flipboard-author — use as author   flipboard-copyright – set copyright   flipboard-date — set the date of the article   flipboard-caption — set as caption for an image; must be immediately after the image   flipboard-startArticle and flipboard-endArticle — only consider the markup between flipboard-startArticle and flipboard-endArticleSimple example for date using wardrobe:&lt;div class=\"date flipboard-date\"&gt;&lt;/div&gt;This way you can control a bit more on what content should be displayed on Flipboard.",
                "content_html": "<p>Ever since <a href=\"http://blog.marcomonteiro.net/post/a-message-from-the-future\">I stopped using normal RSS clients</a> I started using apps like <a href=\"https://flipboard.com/\">Flipboard</a> to read my content. Since then, I notice that some content coming from some sources would look amazing, and some would look awful. So I’ve done some research and noticed that you can improve how your content looks on flipboard.</p><!--more--><p>Here’s a list of classes that you can add to your markup to make it happen.</p><ul>  <li><i class=\"icon-angle-right\"></i> <strong>flipboard-remove</strong> — will ignore any element with this class</li>  <li><i class=\"icon-angle-right\"></i> <strong>flipboard-keep</strong> — will use this element in the article e.g tagging a paragraph with this will insure it remains part of the excerpt</li>  <li><i class=\"icon-angle-right\"></i> <strong>flipboard-image</strong> — will use the element as an image</li>  <li><i class=\"icon-angle-right\"></i> <strong>flipboard-title</strong> — will use as title</li>  <li><i class=\"icon-angle-right\"></i> <strong>flipboard-subtitle</strong> — will use subtitle</li>  <li><i class=\"icon-angle-right\"></i> <strong>flipboard-author</strong> — use as author</li>  <li><i class=\"icon-angle-right\"></i> <strong>flipboard-copyright</strong> – set copyright</li>  <li><i class=\"icon-angle-right\"></i> <strong>flipboard-date</strong> — set the date of the article</li>  <li><i class=\"icon-angle-right\"></i> <strong>flipboard-caption</strong> — set as caption for an image; must be immediately after the image</li>  <li><i class=\"icon-angle-right\"></i> <strong>flipboard-startArticle and flipboard-endArticle</strong> — only consider the markup between flipboard-startArticle and flipboard-endArticle</li></ul><p>Simple example for date using wardrobe:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;div class=\"date flipboard-date\"&gt;&lt;/div&gt;</code></pre></div></div><p>This way you can control a bit more on what content should be displayed on Flipboard.</p>",
                "url": "http://localhost:4000/post/optimize-your-content-for-flipboard/",
                
                
                "categories": ["app","rss","tips","web"],                
                
                "tags": ["app,rss,tips,web"],
                "date_published": "2013-10-14T00:00:00+01:00",
                "date_modified": "2013-10-14T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "The awesomeness of git hooks",
                "content_text": "Automation is probably the word we developers love the most. We’re lazy, that’s why there’s so many Wordpress and Joomla websites. Oh wait I was talking about developers. Those are something different (let’s leave it at that).So we version our code, and we obviously use git. BUt what if you wanted something to happen every-time we do make an action.Well git-hooks got you covered.The current definition of git hooks:  Hooks are little scripts you can place in $GIT_DIR/hooks directory to trigger action at certain points. When git init is run, a handful of example hooks are copied into the hooks directory of the new repository, but by default they are all disabled. To enable a hook, rename it by removing its .sample suffix.  Note: It is also a requirement for a given hook to be executable. However - in a freshly initialized repository - the .sample files are executable by default.I’m not going to mention all the “actions” you can use with git-hooks. You can RTFM for that.However, I can give you a real life example.Imagine you’re using less with javascript:&lt;link rel=\"stylesheet/less\" type=\"text/css\" href=\"css/styles.less\" /&gt;&lt;script src=\"js/lib/less-1.1.3.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;But now you want that to compiled every time you done editing and commit/push to your development server and the git post-recieve hook runs your build.sh and builds your css adn all that malarkey.  Post-receive  This hook is invoked by git-receive-pack on the remote repository, which happens when a git push is done on a local repository. It executes on the remote repository once after all the refs have been updated.  This hook executes once for the receive operation. It takes no arguments, but gets the same information as the pre-receive hook does on its standard input.  This hook does not affect the outcome of git-receive-pack, as it is called after the real work is done. RTFM Net-Tuts tutorial on git-hooks",
                "content_html": "<p>Automation is probably the word we developers love the most. We’re lazy, that’s why there’s so many Wordpress and Joomla websites. Oh wait I was talking about developers. Those are something different (let’s leave it at that).</p><p>So we version our code, and we obviously use git. BUt what if you wanted something to happen every-time we do make an action.</p><p>Well git-hooks got you covered.</p><!--more--><p>The current definition of git hooks:</p><blockquote>  <p>Hooks are little scripts you can place in $GIT_DIR/hooks directory to trigger action at certain points. When git init is run, a handful of example hooks are copied into the hooks directory of the new repository, but by default they are all disabled. To enable a hook, rename it by removing its .sample suffix.</p></blockquote><blockquote>  <p><small><strong>Note:</strong> It is also a requirement for a given hook to be executable. However - in a freshly initialized repository - the .sample files are executable by default.</small></p></blockquote><p>I’m not going to mention all the “actions” you can use with git-hooks. You can RTFM for that.</p><p>However, I can give you a real life example.</p><p>Imagine you’re using less with javascript:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;link rel=\"stylesheet/less\" type=\"text/css\" href=\"css/styles.less\" /&gt;&lt;script src=\"js/lib/less-1.1.3.min.js\" type=\"text/javascript\"&gt;&lt;/script&gt;</code></pre></div></div><p>But now you want that to compiled every time you done editing and commit/push to your development server and the git post-recieve hook runs your build.sh and builds your css adn all that malarkey.</p><blockquote>  <p><strong>Post-receive</strong></p></blockquote><blockquote>  <p>This hook is invoked by git-receive-pack on the remote repository, which happens when a git push is done on a local repository. It executes on the remote repository once after all the refs have been updated.</p></blockquote><blockquote>  <p>This hook executes once for the receive operation. It takes no arguments, but gets the same information as the pre-receive hook does on its standard input.</p></blockquote><blockquote>  <p>This hook does not affect the outcome of git-receive-pack, as it is called after the real work is done.</p></blockquote><p><a href=\"http://git-scm.com/docs/githooks\"><i class=\"icon-link\"></i> RTFM</a></p><p><a href=\"http://net.tutsplus.com/tutorials/tools-and-tips/quick-tip-automation-with-git-hooks/\"><i class=\"icon-youtube-play\"></i> Net-Tuts tutorial on git-hooks</a></p>",
                "url": "http://localhost:4000/post/the-awesomeness-of-git-hooks/",
                
                
                "categories": ["Git","hook","tips","Version-control","Webdev"],                
                
                "tags": ["Git,hook,tips,Version-control,Webdev"],
                "date_published": "2013-10-10T00:00:00+01:00",
                "date_modified": "2013-10-10T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Taking over a big job",
                "content_text": "Every now and again I see people coming up on IRC asking for help. That’s normal, we’re there to help (and share lol cat pictures). However, it always amazes me when someone is asking for something like this:Is mysql a good option for a database that has 500.000.000.000 records?Sure if you’re insane! But that’s not even the point here. My question is: why is someone so inexperienced taking over a job like that? Clearly that person don’t have the know how.For me, if for some reason I come across a project like that I only see two options.   I have a team of really good developers having my back.   Don’t take the job.I don’t see any other way. So the next time you’re about to take a new job, you need to ask yourself:Am I capable of doing this? Do I have the human resources to manage such project?If you don’t, you have to go with the last option and abandon the project. You will certainly going to screw it up. The client will not like to work with you, and you will end up losing money.There's always stuff to do when you don't have enough workAlways remember, even if you’re having problems getting work there’s always better stuff to do than losing money. Losing money is never an option, and that’s what you’re doing when you try to take over a project that you can’t manage.",
                "content_html": "<p>Every now and again I see people coming up on IRC asking for help. That’s normal, we’re there to help (and share lol cat pictures). However, it always amazes me when someone is asking for something like this:</p><p>Is mysql a good option for a database that has 500.000.000.000 records?</p><p>Sure if you’re insane! But that’s not even the point here. My question is: why is someone so inexperienced taking over a job like that? Clearly that person don’t have the know how.</p><!--more--><p>For me, if for some reason I come across a project like that I only see two options.</p><ul>  <li><i class=\"icon-angle-right\"></i> I have a team of really good developers having my back.</li>  <li><i class=\"icon-angle-right\"></i> Don’t take the job.</li></ul><p>I don’t see any other way. So the next time you’re about to take a new job, you need to ask yourself:</p><p><em>Am I capable of doing this? Do I have the human resources to manage such project?</em></p><p>If you don’t, you have to go with the last option and abandon the project. You will certainly going to screw it up. The client will not like to work with you, and you will end up losing money.</p><p><img src=\"https://dl.dropboxusercontent.com/u/404972/blog/no-work.jpg\" alt=\"No work\" /></p><p><small><center>There's always stuff to do when you don't have enough work</center></small></p><p>Always remember, even if you’re having problems getting work there’s always better stuff to do than losing money. Losing money is never an option, and that’s what you’re doing when you try to take over a project that you can’t manage.</p>",
                "url": "http://localhost:4000/post/taking-over-a-big-job/",
                
                
                "categories": ["life","tips","Webdev","work"],                
                
                "tags": ["life,tips,Webdev,work"],
                "date_published": "2013-10-07T00:00:00+01:00",
                "date_modified": "2013-10-07T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Animations using CSS3",
                "content_text": "I’m not a big fan of big animations on websites. I like to get in, get the thing I was looking for and get out. I hate it if I have to look at your awesome loading animation if the thing I just want is to look at your contacts page.However, from time to time, we need to animate some small elements. These days you can do most of it with just CSS3. People are using less and less javascript for this.But, once again, we’re (lazy) developers, so we don’t want to make our animations from scratch.Well Justin Aguilar got you covered, he compiled CSS3 Animation Cheat Sheet that is a set of preset, plug-and-play animations for your web projects. All you need to do is add the stylesheet to your website and apply the pre-made CSS classes to the elements you want animated.The CSS3 Animation Cheat Sheet uses CSS3 @keyframes and works on all the latest browsers (that’s IE 10). Using CSS3 @keyframes, you don’t have to worry about positioning the element to accommodate the animations - it will animate into place. Also for users with older browsers, the animated element will be visible and in place, even if the animation doesn’t trigger. Below are instructions on how to get started. The project The css fileHowever, there’s another project that you might want to take a look when it comes to animations done with CSS3.It’s called animo.jsThis one is a small javascript library that is used to trigger CSS3 animations. The documentation is near perfect but this one I haven’t tested it yet.This library solves the main problem with CSS3 animations. The problem with CSS alone is that they’re usually fired on page load or a hover event, and you can’t stack animations or trigger another when one has completed. That’s where JavaScript and animo come in. You can easily stack animations to fire one after another, specify callbacks for the completion of an animation, or simply fire animations on any event or at any moment you please. Animo.js website Animo.js repository",
                "content_html": "<p>I’m not a big fan of big animations on websites. I like to get in, get the thing I was looking for and get out. I hate it if I have to look at your awesome loading animation if the thing I just want is to look at your contacts page.</p><p>However, from time to time, we need to animate some small elements. These days you can do most of it with just CSS3. People are using less and less javascript for this.</p><!--more--><p>But, once again, we’re (lazy) developers, so we don’t want to make our animations from scratch.</p><p>Well Justin Aguilar got you covered, he compiled CSS3 Animation Cheat Sheet that is a set of preset, plug-and-play animations for your web projects. All you need to do is add the stylesheet to your website and apply the pre-made CSS classes to the elements you want animated.</p><p>The CSS3 Animation Cheat Sheet uses CSS3 @keyframes and works on all the latest browsers (that’s IE 10). Using CSS3 @keyframes, you don’t have to worry about positioning the element to accommodate the animations - it will animate into place. Also for users with older browsers, the animated element will be visible and in place, even if the animation doesn’t trigger. Below are instructions on how to get started.</p><p><a href=\"http://www.justinaguilar.com/animations/index.html\"><i class=\"icon-external-link\"></i> The project</a></p><p><a href=\"http://www.justinaguilar.com/animations/index.html#download\"><i class=\"icon-css3\"></i> The css file</a></p><p>However, there’s another project that you might want to take a look when it comes to animations done with CSS3.</p><p><strong>It’s called animo.js</strong></p><p>This one is a small javascript library that is used to trigger CSS3 animations. The documentation is near perfect but this one I haven’t tested it yet.</p><p>This library solves the main problem with CSS3 animations. The problem with CSS alone is that they’re usually fired on page load or a hover event, and you can’t stack animations or trigger another when one has completed. That’s where JavaScript and animo come in. You can easily stack animations to fire one after another, specify callbacks for the completion of an animation, or simply fire animations on any event or at any moment you please.</p><p><a href=\"http://labs.bigroomstudios.com/libraries/animo-js\"><i class=\"icon-external-link\"></i> Animo.js website</a></p><p><a href=\"https://github.com/ThrivingKings/animo.js\"><i class=\"icon-github\"></i> Animo.js repository</a></p>",
                "url": "http://localhost:4000/post/animations.css/",
                
                
                "categories": ["animations","css","css3","libraries","tips"],                
                
                "tags": ["animations,css,css3,libraries,tips"],
                "date_published": "2013-10-02T00:00:00+01:00",
                "date_modified": "2013-10-02T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "PHP the right way",
                "content_text": "Personally I use PHP everyday. It has a lot of things that I don’t like. It’s not the best language in the world, it not perfect. However, it’s flexible and easy to start with.The thing I hate more about using PHP is the amount of people that have the following hobby:  I shall hate PHP and every PHP developer for a living.We find these assholes everyday: on forums, twitter and anywhere you can think of.Problem is, these guys don’t really know how PHP works these days. They’ve been using the same arguments for years and years. But PHP evolved, so much so, that there’s a whole project about it.PHP the right way is the one you should be looking at.  There’s a lot of outdated information on the Web that leads new PHP users astray, propagating bad practices and insecure code. PHP: The Right Way is an easy-to-read, quick reference for PHP popular coding standards, links to authoritative tutorials around the Web and what the contributors consider to be best practices at the present time.  There is no canonical way to use PHP. This website aims to introduce new PHP developers to some topics which they may not discover until it is too late, and aims to give seasoned pros some fresh ideas on those topics they’ve been doing for years without ever reconsidering. This website will also not tell you which tools to use, but instead offer suggestions for multiple options, when possible explaining the differences in approach and use-case.PHP the Right way is a living document and will continue to be updated with more helpful information and examples as they become available.If you’re a PHP developer, you can be a better one by taking a look at this project. If you’re one of those annoying assholes, you can now be an informed one. PHP the right way",
                "content_html": "<p>Personally I use PHP everyday. It has a lot of things that I don’t like. It’s not the best language in the world, it not perfect. However, it’s flexible and easy to start with.</p><p>The thing I hate more about using PHP is the amount of people that have the following hobby:</p><blockquote>  <p>I shall hate PHP and every PHP developer for a living.</p></blockquote><p>We find these assholes everyday: on forums, twitter and anywhere you can think of.</p><p>Problem is, these guys don’t really know how PHP works these days. They’ve been using the same arguments for years and years. But PHP evolved, so much so, that there’s a whole project about it.</p><!--more--><p><a href=\"http://www.phptherightway.com/\">PHP the right way</a> is the one you should be looking at.</p><blockquote>  <p>There’s a lot of outdated information on the Web that leads new PHP users astray, propagating bad practices and insecure code. PHP: The Right Way is an easy-to-read, quick reference for PHP popular coding standards, links to authoritative tutorials around the Web and what the contributors consider to be best practices at the present time.</p></blockquote><blockquote>  <p>There is no canonical way to use PHP. This website aims to introduce new PHP developers to some topics which they may not discover until it is too late, and aims to give seasoned pros some fresh ideas on those topics they’ve been doing for years without ever reconsidering. This website will also not tell you which tools to use, but instead offer suggestions for multiple options, when possible explaining the differences in approach and use-case.</p></blockquote><p><strong>PHP the Right way</strong> is a living document and will continue to be updated with more helpful information and examples as they become available.</p><p>If you’re a PHP developer, you can be a better one by taking a look at this project. If you’re one of those annoying assholes, you can now be an informed one.</p><p><a href=\"http://www.phptherightway.com/\"><i class=\"icon-link\"></i> PHP the right way</a></p>",
                "url": "http://localhost:4000/post/php-the-right-way/",
                
                
                "categories": ["php","tips","web","Webdev"],                
                
                "tags": ["php,tips,web,Webdev"],
                "date_published": "2013-10-01T00:00:00+01:00",
                "date_modified": "2013-10-01T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Flash is dead... or is it?",
                "content_text": "A few years back almost every developer made something in Flash. We all hated it, but we had to do it. The client would come into the office and say something like:  I want my website made in flash. I want an awesome intro and a lot of animations and videos.We all hated those clients, but then we gained some balls and started making the clients see the other side of things.   The google bot doesn’t like flash.   The end user don’t like flashy designs with lot’s of animations.   Flash requires a 3rd party plugin installed on your browser.The thing is, we’re now seeing a whole different breed of clients. Now they come to you with random words they hear from their friends or colleges at work.Now they want:    Responsive websites;   The application has to work well on all the devices;    Has to be fast;    Has to run on IE6/7;    Animate all the things;    I don’t want any page loads (everything must be in ajax);I think you already see the problem here, the client don’t really know what they want. They know these words and they just want what they think everyone has.Problem is that we as developers, need to make money. Sometimes, our bosses are consultants that don’t really know what that means and just want to sell something.So we have to do these things. We have to animate all the elements and we’re seeing these websites everyday.Just look at those trends on Awwwards.September 30, 2013Now look at the first website on the that list Hello Monday.It has everything a flash website used to have.   Annoying loading when the website first loads;   It has to explain to the user how to navigate the website;   Animations everywhere;   Everything needs a small loading while opening;   You navigate on the website and nothing happens on the url;I think the only thing missing is the music playing on the background.I guess something has gone terrible wrong. When flash died we had a good couple of years. People were making websites where content was the thing that matter.Now with HTML5, CSS3 and how javascript is evolving we’re again overdoing things.ps: Aparently I commited a brain fart and the example I showed is actually a flash website. Anyways, the website that won the Site of the Day that day was the “Just a reflektor”. On this one you can see the same exact problems. Sorry about that.",
                "content_html": "<p>A few years back almost every developer made something in Flash. We all hated it, but we had to do it. The client would come into the office and say something like:</p><blockquote>  <p>I want my website made in flash. I want an awesome intro and a lot of animations and videos.</p></blockquote><p>We all hated those clients, but then we gained some balls and started making the clients see the other side of things.</p><ul>  <li><i class=\"icon-angle-right\"></i> The google bot doesn’t like flash.</li>  <li><i class=\"icon-angle-right\"></i> The end user don’t like flashy designs with lot’s of animations.</li>  <li><i class=\"icon-angle-right\"></i> Flash requires a 3rd party plugin installed on your browser.</li></ul><p>The thing is, we’re now seeing a whole different breed of clients. Now they come to you with random words they hear from their friends or colleges at work.</p><!--more--><p><strong>Now they want:</strong></p><ul>  <li><i class=\"icon-angle-right\"></i>  Responsive websites;</li>  <li><i class=\"icon-angle-right\"></i> The application has to work well on all the devices;</li>  <li><i class=\"icon-angle-right\"></i>  Has to be fast;</li>  <li><i class=\"icon-angle-right\"></i>  Has to run on IE6/7;</li>  <li><i class=\"icon-angle-right\"></i>  Animate all the things;</li>  <li><i class=\"icon-angle-right\"></i>  I don’t want any page loads (everything must be in ajax);</li></ul><p>I think you already see the problem here, the client don’t really know what they want. They know these words and they just want what they think everyone has.</p><p>Problem is that we as developers, need to make money. Sometimes, our bosses are consultants that don’t really know what that means and just want to sell something.</p><p>So we have to do these things. We have to animate all the elements and we’re seeing these websites everyday.</p><p>Just look at those trends on <a href=\"http://www.awwwards.com/\">Awwwards</a>.</p><p><img src=\"https://dl.dropboxusercontent.com/u/404972/blog/awwwards.png\" alt=\"awwwards\" /></p><p><small><center>September 30, 2013</center></small></p><p>Now look at the first website on the that list <a href=\"http://hellomonday.com/\">Hello Monday</a>.</p><p>It has everything a flash website used to have.</p><ul>  <li><i class=\"icon-angle-right\"></i> Annoying loading when the website first loads;</li>  <li><i class=\"icon-angle-right\"></i> It has to explain to the user how to navigate the website;</li>  <li><i class=\"icon-angle-right\"></i> Animations everywhere;</li>  <li><i class=\"icon-angle-right\"></i> Everything needs a small loading while opening;</li>  <li><i class=\"icon-angle-right\"></i> You navigate on the website and nothing happens on the url;</li></ul><p>I think the only thing missing is the music playing on the background.</p><p>I guess something has gone terrible wrong. When flash died we had a good couple of years. People were making websites where <strong>content</strong> was the thing that matter.</p><p>Now with HTML5, CSS3 and how javascript is evolving <strong>we’re again overdoing things</strong>.</p><p><strong>ps:</strong> Aparently I commited a brain fart and the example I showed is actually a flash website. Anyways, the website that won the <em>Site of the Day</em> that day was the “<a href=\"https://www.justareflektor.com/\">Just a reflektor</a>”. On this one you can see the same exact problems. Sorry about that.</p>",
                "url": "http://localhost:4000/post/flash-is-dead/.-or-is-it/",
                
                
                "categories": ["rant","web","Webdesign","Webdev"],                
                
                "tags": ["rant,web,Webdesign,Webdev"],
                "date_published": "2013-09-30T00:00:00+01:00",
                "date_modified": "2013-09-30T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Repo.js",
                "content_text": "We are developers, we have personal websites, blogs and all that. So from time to time, we want to embed in a blog post or any other type of content a bit of code. There’s a lot of ways to do so. For instance on my blog I use highlight.js. It works fine I don’t have a single complaint about it.However, what if I had a bunch of files I needed to show inside a blog post or even more, imagine I want to show a hole github repository inside a blog post?Well repo.js is here to save the day.All you need to do is add the javascript library into your website. Then you can just do:$('#repo').repo({ user: 'mpmont', name: 'ci-snippets' });That should be all. Repo.js Demo",
                "content_html": "<p>We are developers, we have personal websites, blogs and all that. So from time to time, we want to embed in a blog post or any other type of content a bit of code. There’s a lot of ways to do so. For instance on my blog I use <a href=\"http://softwaremaniacs.org/soft/highlight/en/\">highlight.js</a>. It works fine I don’t have a single complaint about it.</p><p>However, what if I had a bunch of files I needed to show inside a blog post or even more, imagine I want to show a hole github repository inside a blog post?</p><!--more--><p>Well repo.js is here to save the day.</p><p>All you need to do is add the javascript library into your website. Then you can just do:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$('#repo').repo({ user: 'mpmont', name: 'ci-snippets' });</code></pre></div></div><p>That should be all.</p><p><a href=\"https://github.com/darcyclarke/Repo.js\"><i class=\"icon-github\"></i> Repo.js</a></p><p><a href=\"http://darcyclarke.me/dev/repojs/\"><i class=\"icon-link\"></i> Demo</a></p>",
                "url": "http://localhost:4000/post/repo.js/",
                
                
                "categories": ["javascript","jquery","js","libraries","tips"],                
                
                "tags": ["javascript,jquery,js,libraries,tips"],
                "date_published": "2013-09-27T00:00:00+01:00",
                "date_modified": "2013-09-27T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Top 100 with 18k installs",
                "content_text": "That’s right, I’m talking about the Codeigniter snippets package for sublime text. The package is now one of the top 100 most installed packages and it has 18k installs.The current statusThe package is compatible with both Sublime Text 2 and 3. So feel free to use it and add more awesomeness to it. The package has already most of the stuff that you’ll need while using Codeigniter and Sublime Text. But I’m sure you have something to add.Also, thank you! CI-Snippets Status Page",
                "content_html": "<p>That’s right, I’m talking about the Codeigniter snippets package for sublime text. The package is now one of the top 100 most installed packages and it has 18k installs.</p><!--more--><p><img src=\"https://dl.dropboxusercontent.com/u/404972/blog/ci-snippets.png\" alt=\"ci-snippets-stats\" /></p><center><small>The current status</small></center><p>The package is compatible with both Sublime Text 2 and 3. So feel free to use it and add more awesomeness to it. The package has already most of the stuff that you’ll need while using Codeigniter and Sublime Text. But I’m sure you have something to add.</p><p>Also, thank you!</p><p><a href=\"https://github.com/mpmont/ci-snippets\"><i class=\"icon-github\"></i> CI-Snippets</a></p><p><a href=\"https://sublime.wbond.net/packages/CodeIgniter%20Snippets\"><i class=\"icon-bar-chart\"></i> Status Page</a></p>",
                "url": "http://localhost:4000/post/top-100-with-18k-installs/",
                
                
                "categories": ["ci","codeigniter","st2","Sublime Text","text-editor"],                
                
                "tags": ["ci,codeigniter,st2,Sublime Text,text-editor"],
                "date_published": "2013-09-24T00:00:00+01:00",
                "date_modified": "2013-09-24T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Bootstrap Magic",
                "content_text": "We all know and love Twitter Bootstrap.  Or maybe you don’t (in that case here’s a small description: “Sleek, intuitive, and powerful mobile first front-end framework for faster and easier web development.”).There’s many ways of using it, some developers just download the massive css file(s) and start hacking into it. Some configure the available variables and then hack into it. Others do it the right way and download the less version and then make their changes.However, now there’s a tool that can help you customize all those variables and even more in a more intuitive way. It’s called Bootstrap Magic.Why is this one better?Well, this way you change the variables and see the result at the same time.Some of the main features:   Bootstrap 3   Importing your own variables   Contextual and live preview   Colorpicker   Google Webfonts Twitter Bootstrap Bootstrap Magic",
                "content_html": "<p>We all know and love <a href=\"http://getbootstrap.com/\">Twitter Bootstrap</a>.  Or maybe you don’t (in that case here’s a small description: <em>“Sleek, intuitive, and powerful mobile first front-end framework for faster and easier web development.”</em>).</p><p>There’s many ways of using it, some developers just download the massive css file(s) and start hacking into it. Some configure the available variables and then hack into it. Others do it the right way and download the <a href=\"https://github.com/twbs/bootstrap/\">less version</a> and then make their changes.</p><!--more--><p>However, now there’s a tool that can help you customize all those variables and even more in a more intuitive way. It’s called Bootstrap Magic.</p><p><strong>Why is this one better?</strong></p><p>Well, this way you change the variables and see the result at the same time.</p><p><strong>Some of the main features:</strong></p><ul>  <li><i class=\"icon-angle-right\"></i> Bootstrap 3</li>  <li><i class=\"icon-angle-right\"></i> Importing your own variables</li>  <li><i class=\"icon-angle-right\"></i> Contextual and live preview</li>  <li><i class=\"icon-angle-right\"></i> Colorpicker</li>  <li><i class=\"icon-angle-right\"></i> Google Webfonts</li></ul><p><a href=\"http://getbootstrap.com/\"><i class=\"icon-link\"></i> Twitter Bootstrap</a></p><p><a href=\"http://pikock.github.io/bootstrap-magic/\"><i class=\"icon-link\"></i> Bootstrap Magic</a></p>",
                "url": "http://localhost:4000/post/bootstrap-magic/",
                
                
                "categories": ["css","front-end","less","twitter bootstrap"],                
                
                "tags": ["css,front-end,less,twitter bootstrap"],
                "date_published": "2013-09-23T00:00:00+01:00",
                "date_modified": "2013-09-23T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Go social",
                "content_text": "Nowadays everything is about social networks. My question is, do you have your website prepared for all of that malarkey? Facebook released their open-graph. But is Facebook the only one with it?For Facebook all you need to do it add all these meta tags into your header. That way, every time someone shares your links on facebook they will have a lot more info with it.image&lt;meta property=\"og:image\" content=\"http://blog.marcomonteiro.net/themes/default/img/facebooklogo.jpg\"/&gt;It’s best to use a square image, as Facebook displays them in that matter. That image should be at least 50x50 in any of the usually supported image forms (JPG, PNG, etc.)title&lt;meta property=\"og:title\" content=\"Go social\"/&gt;In most cases, this should be the article or page title.urlFamiliarize yourself with the canonical LINK type if you aren’t aware of its purpose – it could help your SEO out greatly!site_name&lt;meta property=\"og:site_name\" content=\"$blog++\"/&gt;This is very useful as Facebook may have no way of knowing outside of this META tag.typeProvides Facebook the type of website that you would like your website to be categorized by:&lt;meta property=\"og:type\" content=\"blog\"/&gt;Read the complete list of website types to best categorize your website.These are not the complete list of open-graph tags.If you use twitter a lot, on the web or on a mobile app you have noticed that some of the links people share now have a description with it, or an image, sometimes even a video. Well that’s because twitter has it’s own tags for content. The main difference is that you have to apply for it. I guess that’s because twitter want’s to filter adult content.You can test and create your tags here. And when you do so, you can add them to your website and request approval from them. It may take a couple of weeks to be approved (I’m still waiting actually).Here’s a example list of twitter tags:  \t  \t  \t  \t  \t \tSo next time you think about going social on your website just remember: the Internet is more than just Facebook.",
                "content_html": "<p>Nowadays everything is about social networks. My question is, do you have your website prepared for all of that malarkey? Facebook released their open-graph. But is Facebook the only one with it?<!--more--></p><p>For Facebook all you need to do it add all these meta tags into your header. That way, every time someone shares your links on facebook they will have a lot more info with it.</p><p><strong>image</strong></p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;meta property=\"og:image\" content=\"http://blog.marcomonteiro.net/themes/default/img/facebooklogo.jpg\"/&gt;</code></pre></div></div><p>It’s best to use a square image, as Facebook displays them in that matter. That image should be at least 50x50 in any of the usually supported image forms (JPG, PNG, etc.)</p><p><strong>title</strong></p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;meta property=\"og:title\" content=\"Go social\"/&gt;</code></pre></div></div><p>In most cases, this should be the article or page title.</p><p><strong>url</strong></p><meta property=\"og:url\" content=\"http://blog.marcomonteiro.net\" /><p>Familiarize yourself with the canonical LINK type if you aren’t aware of its purpose – it could help your SEO out greatly!</p><p><strong>site_name</strong></p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;meta property=\"og:site_name\" content=\"$blog++\"/&gt;</code></pre></div></div><p>This is very useful as Facebook may have no way of knowing outside of this META tag.</p><p><strong>type</strong></p><p>Provides Facebook the type of website that you would like your website to be categorized by:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;meta property=\"og:type\" content=\"blog\"/&gt;</code></pre></div></div><p>Read the <a href=\"http://developers.facebook.com/docs/opengraph/#types\">complete list of website types</a> to best categorize your website.</p><p>These are not the complete list of open-graph tags.</p><p>If you use twitter a lot, on the web or on a mobile app you have noticed that some of the links people share now have a description with it, or an image, sometimes even a video. Well that’s because twitter has it’s own tags for content. The main difference is that you have to apply for it. I guess that’s because twitter want’s to filter adult content.</p><p>You can test and create your tags <a href=\"https://dev.twitter.com/docs/cards/validation/validator\">here</a>. And when you do so, you can add them to your website and request approval from them. It may take a couple of weeks to be approved (I’m still waiting actually).</p><p>Here’s a example list of twitter tags:</p>  \t<meta name=\"twitter:card\" content=\"summary\" />  \t<meta name=\"twitter:site\" content=\"@marcogmonteiro\" />  \t<meta name=\"twitter:title\" content=\"Pixel density of 538ppi?\" />  \t<meta name=\"twitter:description\" content=\"Full HD displays? Eat your heart out, handset manufacturers. LG Display has just laid claim to the world's first Quad HD (2,560 x 1,440) smartphone display, which also boasts the highest pixel density of a mobile device, clocking in at 538ppi.\" />  \t<meta name=\"twitter:creator\" content=\"@marcogmonteiro\" /> \t<meta name=\"twitter:domain\" content=\"blog.marcomonteiro.net\" /><p>So next time you think about going social on your website just remember: the Internet is more than just Facebook.</p>",
                "url": "http://localhost:4000/post/go-social/",
                
                
                "categories": ["socialmedia","tips"],                
                
                "tags": ["socialmedia,tips"],
                "date_published": "2013-09-17T00:00:00+01:00",
                "date_modified": "2013-09-17T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Happy Programmers Day",
                "content_text": "That’s right, today (Friday the 13th) is Programmers Day.Programmers Day is an international professional day recognized in many technology companies and programming firms, that is celebrated on the 256th (hexadecimal 100th, or the 28th) day of each year (September 13 during common years and on September 12 in leap years).The number 256 (28) was chosen because it is the number of distinct values that can be represented with an eight-bit byte, a value well-known to programmers. 256 is the highest power of two that is less than 365, the number of days in a common year.To all the programmers outthere. Have fun!This particular day was proposed by Valentin Balt and Michael Cherviakov, employees of Parallel Technologies (a web design company). As early as 2002, they tried to gather signatures for a petition to the government of Russia to recognize the day as the official programmers’ day.On July 24, 2009, the Ministry of Communications and Mass Media (Russia) issued a draft of an executive order on a new professional holiday, Programmers’ Day.All info based on wikipedia article about the day.",
                "content_html": "<p>That’s right, today (Friday the 13th) is Programmers Day.</p><p>Programmers Day is an international professional day recognized in many technology companies and programming firms, that is celebrated on the 256th (hexadecimal 100th, or the 28th) day of each year (September 13 during common years and on September 12 in leap years).</p><p>The number 256 (28) was chosen because it is the number of distinct values that can be represented with an eight-bit byte, a value well-known to programmers. 256 is the highest power of two that is less than 365, the number of days in a common year.</p><!--more--><p><img src=\"https://dl.dropboxusercontent.com/u/404972/blog/comic.jpg\" alt=\"GoTo\" /></p><center><small>To all the programmers outthere. Have fun!</small></center><p>This particular day was proposed by Valentin Balt and Michael Cherviakov, employees of Parallel Technologies (a web design company). As early as 2002, they tried to gather signatures for a petition to the government of Russia to recognize the day as the official programmers’ day.</p><p>On July 24, 2009, the Ministry of Communications and Mass Media (Russia) issued a draft of an executive order on a new professional holiday, Programmers’ Day.</p><p><small><em>All info based on wikipedia article about the day.</em></small></p>",
                "url": "http://localhost:4000/post/happy-programmers'-day/",
                
                
                "categories": ["life"],                
                
                "tags": ["life"],
                "date_published": "2013-09-13T00:00:00+01:00",
                "date_modified": "2013-09-13T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "HTML5 App Manifest",
                "content_text": "We all have our applications and we all want then to be always using the best tools, but most of all, we all want our content to get to everyone.That’s why we add social sharing functionality, or iox capability so our application can turn into a web app in our phone. However, there are now more and more platforms to deal with, and many more to come. So today I’m going to give you a little snippet so you can turn your website into a HTML5 app. This way your website will run as a “native app” on the new Firefox OS.Mozilla’s awesome new HTML5-based mobile operating system, Firefox OS, is going to be a game-changer in the mobile app space. No more needing to write “native” code for each device, no more reliance on PhoneGap to be a first-class device language. Better yet, essentially all you need to do to make your existing website or web app a Firefox OS app is add a manifest.webapp file to your domain which looks similar to this: \t {\t\"version\": \"1.0\",\t\"name\": \"Your App Name\",\t\"description\": \"Your new awesome HTML5-based mobile web app!\",\t\"launch_path\": \"/index.html\",\t\"icons\": {\t\t\"16\": \"/img/mylogo-16.png\",\t\t\"48\": \"/img/mylogo-48.png\",\t\t\"128\": \"/img/mylogo-128.png\"\t},\t\"developer\": {\t\t\"name\": \"Developer Name\",\t\t\"url\": \"http://yourawesomeapp.com\"\t},\t\"installs_allowed_from\": [\"*\"],\t\"locales\": {\t\t\"pt\": {\t\t\t\"description\": \"A minha nova app\",\t\t\t\"developer\": {\t\t\t\t\"url\": \"http://yourawesomeapp.com\"\t\t\t}\t\t},\t\t\"en\": {\t\t\t\"description\": \"My new web app\",\t\t\t\"developer\": {\t\t\t\t\"url\": \"http://yourawesomeapp.com\"\t\t\t}\t\t}\t},\t\"default_locale\": \"en\"  \t}It really can’t get any easier! To guard yourself against problem when your app is used offline, be sure to include the HTML standard appcache too!This article it’s a part of a series of small articles showing how to make your website more mobile compatible.",
                "content_html": "<p>We all have our applications and we all want then to be always using the best tools, but most of all, we all want our content to get to everyone.</p><p>That’s why we add social sharing functionality, or iox capability so our application can turn into a web app in our phone. However, there are now more and more platforms to deal with, and many more to come. So today I’m going to give you a little snippet so you can turn your website into a HTML5 app. This way your website will run as a “native app” on the new Firefox OS.</p><!--more--><p>Mozilla’s awesome new HTML5-based mobile operating system, Firefox OS, is going to be a game-changer in the mobile app space. No more needing to write “native” code for each device, no more reliance on PhoneGap to be a first-class device language. Better yet, essentially all you need to do to make your existing website or web app a Firefox OS app is add a manifest.webapp file to your domain which looks similar to this:</p> \t {<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t\"version\": \"1.0\",\t\"name\": \"Your App Name\",\t\"description\": \"Your new awesome HTML5-based mobile web app!\",\t\"launch_path\": \"/index.html\",\t\"icons\": {\t\t\"16\": \"/img/mylogo-16.png\",\t\t\"48\": \"/img/mylogo-48.png\",\t\t\"128\": \"/img/mylogo-128.png\"\t},\t\"developer\": {\t\t\"name\": \"Developer Name\",\t\t\"url\": \"http://yourawesomeapp.com\"\t},\t\"installs_allowed_from\": [\"*\"],\t\"locales\": {\t\t\"pt\": {\t\t\t\"description\": \"A minha nova app\",\t\t\t\"developer\": {\t\t\t\t\"url\": \"http://yourawesomeapp.com\"\t\t\t}\t\t},\t\t\"en\": {\t\t\t\"description\": \"My new web app\",\t\t\t\"developer\": {\t\t\t\t\"url\": \"http://yourawesomeapp.com\"\t\t\t}\t\t}\t},\t\"default_locale\": \"en\"  \t}</code></pre></div></div><p>It really can’t get any easier! To guard yourself against problem when your app is used offline, be sure to include the <a href=\"https://developer.mozilla.org/en-US/docs/HTML/Using_the_application_cache\">HTML standard appcache</a> too!</p><p>This article it’s a part of a series of small articles showing how to make your website more mobile compatible.</p>",
                "url": "http://localhost:4000/post/html5-app-manifest/",
                
                
                "categories": ["firefox OS","html5","mobile","tips"],                
                
                "tags": ["firefox OS,html5,mobile,tips"],
                "date_published": "2013-09-10T00:00:00+01:00",
                "date_modified": "2013-09-10T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "A sad day for PHP",
                "content_text": "Last week I read one of those articles that you never want to read. Anthony Ferrara also known as @ircmaxell on twitter left the Internals project.I got to say, I never participated on the Internals discussions, I actually don’t think I have the know-how to. So I preffer to leave that to the experts and not be the annoying noob in the room.Anthony wrote a complete blog post explaining why he did what he did, and I got to say: after reading the post, I’m amazed by the time he did stay there.So, if you’re a PHP developer go read his article and give him your support on twitter. Blog Post @ircmaxell",
                "content_html": "<p>Last week I read one of those articles that you never want to read. Anthony Ferrara also known as <a href=\"http://twitter.com/ircmaxell\">@ircmaxell</a> on twitter left the Internals project.</p><p>I got to say, I never participated on the Internals discussions, I actually don’t think I have the know-how to. So I preffer to leave that to the experts and not be the annoying noob in the room.</p><p>Anthony wrote a complete blog post explaining why he did what he did, and I got to say: after reading the post, I’m amazed by the time he did stay there.</p><p>So, if you’re a PHP developer go read his article and give him your support on twitter.</p><p><a href=\"http://blog.ircmaxell.com/2013/09/rambling-on-internals.html\"><i class=\"icon-external-link\"></i> Blog Post</a></p><p><a href=\"http://twitter.com/ircmaxell\"><i class=\"icon-twitter\"></i> @ircmaxell</a></p>",
                "url": "http://localhost:4000/post/a-sad-day-for-php/",
                
                
                "categories": ["php"],                
                
                "tags": ["php"],
                "date_published": "2013-09-08T00:00:00+01:00",
                "date_modified": "2013-09-08T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Le.git",
                "content_text": "I’m a big git flow fan, no doubt about that. I use it every day and I still think that it is the perfect way to work with a team of people. But, from time to time, you find yourself working on a small project. One that you’re just going to hack during the weekend and you want something simpler.Legit (Git workflow for humans) got you covered.Basically it works like this:$ git sync# Synchronizes current branch. Auto-merge/rebase, un/stash.$ git switch &lt;branch&gt;# Switches to branch. Stashes and restores unstaged changes.$ git publish &lt;branch&gt;# Publishes branch to remote server.$ git unpublish &lt;branch&gt;# Removes branch from remote server.$ git branches# Nice &amp; pretty list of branches + publication status.See how easy it to work with a feature branch?Now let’s say you want to install it and start using it, if you use homebrew like myself then once again I got you covered.$ brew install legitTo enable the git aliases:$ legit installNice and simple — the way it should be.",
                "content_html": "<p>I’m a big git flow fan, no doubt about that. I use it every day and I still think that it is the perfect way to work with a team of people. But, from time to time, you find yourself working on a small project. One that you’re just going to hack during the weekend and you want something simpler.</p><p><a href=\"http://www.git-legit.org/\">Legit</a> (Git workflow for humans) got you covered.</p><!--more--><p>Basically it works like this:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ git sync# Synchronizes current branch. Auto-merge/rebase, un/stash.$ git switch &lt;branch&gt;# Switches to branch. Stashes and restores unstaged changes.$ git publish &lt;branch&gt;# Publishes branch to remote server.$ git unpublish &lt;branch&gt;# Removes branch from remote server.$ git branches# Nice &amp; pretty list of branches + publication status.</code></pre></div></div><p>See how easy it to work with a feature branch?</p><p>Now let’s say you want to install it and start using it, if you use <a href=\"http://brew.sh/\">homebrew</a> like myself then once again I got you covered.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ brew install legitTo enable the git aliases:$ legit install</code></pre></div></div><p>Nice and simple — the way it should be.</p>",
                "url": "http://localhost:4000/post/le.git/",
                
                
                "categories": ["Git","tips"],                
                
                "tags": ["Git,tips"],
                "date_published": "2013-09-07T00:00:00+01:00",
                "date_modified": "2013-09-07T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Laracon EU (V)",
                "content_text": "The last day of Laracon was amazing. I must say, I learned a lot. The talks were amazing. All of them, but there was one that I need to reference in particular. Kapil Verma’s talk.  Kapil is a software engineer that specializes in application architecture design. He has significant experience in designing software that is able to quickly react to vague and constantly evolving business requirements. He is currently involved as a project-manager, consultant and developer at multiple startups in Delhi.Engineering Complex Applications with Laravel 4  One of Laravel’s core strengths is that it grows with the developer. In this talk we focus on what exactly that means. How can we improve our application architectures past what developers have come to expect from MVC frameworks? We’ll explore strategies for code organization, modeling your domain and creating code that is loosely coupled and easy to maintain, all done with examples based on real-world experience.I was so confused during this talk and I think I was not alone on this wagon. A lot of people seemed confused at the time. The talk had one main problem: Kapil didn’t had much time to explain is point.Hence, he didn’t had much time to explain the problem, and jumped right to the solution. So when he was doing so, many people at the audience were struggling with it.In conclusion I just think Kapil is miles away from my skill set, and many other developers at the audience.However we had some other interesting talks during that day, like the one from Ross Tuck.  Ross Tuck is an American developer, living in the Netherlands, working at Ibuildings, wearing a hat, and wishing he was reading a book.HTTP and Your Angry Dog  What is an etag, exactly? What’s all that stuff in the Accept header? And what the heck does a Vary header do anyways?! Web developers use HTTP everyday but most of us don’t know how to get the most out of it. This talk goes past memorizing status codes (although we’ll see those too) and teaches how to get the most out of every request and response.He was probably the speaker that did more homework there, because his talk was really well prepared. Everything about it was thought before hand. He always knew what to say and when to say it, not a single - hummm, errrrr.",
                "content_html": "<p>The last day of Laracon was amazing. I must say, I learned a lot. The talks were amazing. All of them, but there was one that I need to reference in particular. Kapil Verma’s talk.</p><blockquote>  <p>Kapil is a software engineer that specializes in application architecture design. He has significant experience in designing software that is able to quickly react to vague and constantly evolving business requirements. He is currently involved as a project-manager, consultant and developer at multiple startups in Delhi.</p></blockquote><!--more--><p><strong>Engineering Complex Applications with Laravel 4</strong></p><blockquote>  <p>One of Laravel’s core strengths is that it grows with the developer. In this talk we focus on what exactly that means. How can we improve our application architectures past what developers have come to expect from MVC frameworks? We’ll explore strategies for code organization, modeling your domain and creating code that is loosely coupled and easy to maintain, all done with examples based on real-world experience.</p></blockquote><p>I was so confused during this talk and I think I was not alone on this wagon. A lot of people seemed confused at the time. The talk had one main problem: Kapil didn’t had much time to explain is point.</p><p>Hence, he didn’t had much time to explain the problem, and jumped right to the solution. So when he was doing so, many people at the audience were struggling with it.</p><p>In conclusion I just think Kapil is miles away from my skill set, and many other developers at the audience.</p><p>However we had some other interesting talks during that day, like the one from <strong>Ross Tuck</strong>.</p><blockquote>  <p>Ross Tuck is an American developer, living in the Netherlands, working at Ibuildings, wearing a hat, and wishing he was reading a book.</p></blockquote><p><strong>HTTP and Your Angry Dog</strong></p><blockquote>  <p>What is an etag, exactly? What’s all that stuff in the Accept header? And what the heck does a Vary header do anyways?! Web developers use HTTP everyday but most of us don’t know how to get the most out of it. This talk goes past memorizing status codes (although we’ll see those too) and teaches how to get the most out of every request and response.</p></blockquote><p>He was probably the speaker that did more homework there, because his talk was really well prepared. Everything about it was thought before hand. He always knew what to say and when to say it, not a single - hummm, errrrr.</p>",
                "url": "http://localhost:4000/post/laracon-(v)/",
                
                
                "categories": ["laracon","laravel"],                
                
                "tags": ["laracon,laravel"],
                "date_published": "2013-09-05T00:00:00+01:00",
                "date_modified": "2013-09-05T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Internet.org is awesome, but...",
                "content_text": "Apparently Facebook has a new pet. It’s called The Internet. The project has actually some good points.Internet.org is a global partnership between technology leaders, nonprofits, local communities and experts who are working together to bring the internet to the two thirds of the world’s population that doesn’t have it.It all sounds really good. Until…You can see the video [here](http://www.youtube.com/watch?v=NdWaZkvAJfM)I saw their video campaign, and that got me a bit mad. Call me closed minded or even lunatic, I don’t care. But that video showed the armpits of the world. I know they’re trying to do a good thing. But shouldn’t we be more worried about getting food or… I don’t know: electricity and drinkable water instead of lolcats?I know the Internet is way more than lolcats, there’s also porn.We know for a fact that this is true:  “The internet boosts economic, social and political development, and contributes to the progress of humankind as a whole.”  —United Nations Human Rights Council reportAll I’m saying is that this is a good thing, but maybe we ought focus on more important things.  “Making the internet available to every person on earth is a goal too large and too important for any one company, group, or government to solve alone. Internet.org’s partners have come together to meet this challenge because they believe in the power of a connected world.”Another great point, but I think I can see who’s going to benefit from this first. Let’s just take a look at the partners.   Ericsson   Mediatek   Opera Software   Samsung   facebook   Nokia   QualcommAnyway, don’t take this the wrong way. Again, I think this is a good thing, but… priorities.ps: I found this image while I was browsing stuff for this article that can sum everything I’m trying to say. internet.org",
                "content_html": "<p>Apparently Facebook has a new pet. It’s called <em>The Internet</em>. The project has actually some good points.</p><p>Internet.org is a global partnership between technology leaders, nonprofits, local communities and experts who are working together to bring the internet to the two thirds of the world’s population that doesn’t have it.</p><p>It all sounds really good. Until…</p><!--more--><p><img src=\"https://dl.dropboxusercontent.com/u/404972/blog/interenet.org.png\" alt=\"Internet.org\" /></p><center><small>You can see the video <strong>[here](http://www.youtube.com/watch?v=NdWaZkvAJfM)</strong></small></center><p>I saw their video campaign, and that got me a bit mad. Call me closed minded or even lunatic, I don’t care. But that video showed the armpits of the world. I know they’re trying to do a good thing. But shouldn’t we be more worried about getting food or… I don’t know: electricity and drinkable water instead of lolcats?</p><p>I know the Internet is way more than lolcats, there’s also porn.</p><p>We know for a fact that this is true:</p><blockquote>  <p>“The internet boosts economic, social and political development, and contributes to the progress of humankind as a whole.”</p></blockquote><blockquote>  <p><span style=\"text-align: right;\"><small>—United Nations Human Rights Council report</small></span></p></blockquote><p>All I’m saying is that this is a good thing, but maybe we ought focus on more important things.</p><blockquote>  <p>“Making the internet available to every person on earth is a goal too large and too important for any one company, group, or government to solve alone. Internet.org’s partners have come together to meet this challenge because they believe in the power of a connected world.”</p></blockquote><p>Another great point, but I think I can see who’s going to benefit from this first. Let’s just take a look at the partners.</p><ul>  <li><i class=\"icon-angle-right\"></i> Ericsson</li>  <li><i class=\"icon-angle-right\"></i> Mediatek</li>  <li><i class=\"icon-angle-right\"></i> Opera Software</li>  <li><i class=\"icon-angle-right\"></i> Samsung</li>  <li><i class=\"icon-angle-right\"></i> facebook</li>  <li><i class=\"icon-angle-right\"></i> Nokia</li>  <li><i class=\"icon-angle-right\"></i> Qualcomm</li></ul><p>Anyway, don’t take this the wrong way. Again, I think this is a good thing, but… priorities.</p><p><strong>ps:</strong> I found this <a href=\"https://fbcdn-sphotos-f-a.akamaihd.net/hphotos-ak-ash3/q71/574517_364119343690702_1948436063_n.jpg\">image</a> while I was browsing stuff for this article that can sum everything I’m trying to say.</p><p><a href=\"http://internet.org/\"><i class=\"icon-external-link\"></i> internet.org</a></p>",
                "url": "http://localhost:4000/post/internet.org/",
                
                
                "categories": ["internet","rant"],                
                
                "tags": ["internet,rant"],
                "date_published": "2013-09-02T00:00:00+01:00",
                "date_modified": "2013-09-02T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Laracon EU (III)",
                "content_text": "At the end of the first day the legend Fabien Potencier took the stage. If you don’t know who he is, he’s a developer by passion, he started to build websites with PHP5 in 2004 and created the Symfony framework to help SensioLabs, his company, leverage the power of PHP for its customers.As expected his talk was all about Symfony.  Symfony is all about standardization and interoperability. The Symfony foundation is largely based on existing standards like HTTP, but it also leverages existing best-practices and design patterns like dependency injection. Learn more about the fundamental philosophy of Symfony and why embracing these core concepts is good for PHP as a whole.After all the talk about standardization there was a really interesting Q&amp;A. Mostly about general PHP stuff and some decisions and the Symfony roadmap.This is how great Laracon EU is, we’re here not just to talk about Laravel. Mostly we’re were to talk about PHP in general. Actually I talked to a lot of people and most don’t even use Laravel that much. But we all love it and learn from it.",
                "content_html": "<p>At the end of the first day the legend Fabien Potencier took the stage. If you don’t know who he is, he’s a developer by passion, he started to build websites with PHP5 in 2004 and created the Symfony framework to help SensioLabs, his company, leverage the power of PHP for its customers.</p><p>As expected his talk was all about Symfony.</p><blockquote>  <p>Symfony is all about standardization and interoperability. The Symfony foundation is largely based on existing standards like HTTP, but it also leverages existing best-practices and design patterns like dependency injection. Learn more about the fundamental philosophy of Symfony and why embracing these core concepts is good for PHP as a whole.</p></blockquote><p>After all the talk about standardization there was a really interesting Q&amp;A. Mostly about general PHP stuff and some decisions and the Symfony roadmap.</p><p>This is how great Laracon EU is, we’re here not just to talk about Laravel. Mostly we’re were to talk about PHP in general. Actually I talked to a lot of people and most don’t even use Laravel that much. But we all love it and learn from it.</p>",
                "url": "http://localhost:4000/post/laracon-eu-3/",
                
                
                "categories": ["laracon","laravel"],                
                
                "tags": ["laracon,laravel"],
                "date_published": "2013-08-31T00:00:00+01:00",
                "date_modified": "2013-08-31T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Laracon EU (IV)",
                "content_text": "The second day had some really good talks. However there’s one that want to talk for a bit.  Ben Corlett is the lead engineer at Cartalyst, Director of Webcomm and developer for Kapture. His days typically involve a mix of developing the hottest Composer-based PHP packages and applying the theoretical use of the newest technologies, frameworks and code in real-world scenarios.Once again the subject was all about composer. But this time it was more about how to build new packages, good practices and whatnot.One of the things that composer tries to achieve is cross framework code. To achive this you have to follow on simple rule:  Your code must be framework agnostic.This is quite easy to understand. Makes no sense to build Laravel libraries, or Codeigniter libraries. We should be all building packages that can be used by any framework.One other point that Ben talked a lot was how do you go about making a decision to make a new package. He even made a graph and all.  The Graph Ben’s Twitter",
                "content_html": "<p>The second day had some really good talks. However there’s one that want to talk for a bit.</p><blockquote>  <p>Ben Corlett is the lead engineer at Cartalyst, Director of Webcomm and developer for Kapture. His days typically involve a mix of developing the hottest Composer-based PHP packages and applying the theoretical use of the newest technologies, frameworks and code in real-world scenarios.</p></blockquote><!--more--><p>Once again the subject was all about composer. But this time it was more about how to build new packages, good practices and whatnot.</p><p>One of the things that composer tries to achieve is cross framework code. To achive this you have to follow on simple rule:</p><blockquote>  <p>Your code <strong>must</strong> be framework agnostic.</p></blockquote><p>This is quite easy to understand. Makes no sense to build Laravel libraries, or Codeigniter libraries. We should be all building packages that can be used by any framework.</p><p>One other point that Ben talked a lot was how do you go about making a decision to make a new package. He even made a graph and all.</p><p><a href=\"https://twitter.com/marcogmonteiro/status/373756031899549697\"><i class=\"icon-external-link\"></i>  The Graph</a></p><p><a href=\"https://twitter.com/ben_corlett\"><i class=\"icon-twitter\"></i> Ben’s Twitter</a></p>",
                "url": "http://localhost:4000/post/laracon-eu-(iv)/",
                
                
                "categories": ["laracon","laravel"],                
                
                "tags": ["laracon,laravel"],
                "date_published": "2013-08-31T00:00:00+01:00",
                "date_modified": "2013-08-31T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Laracon EU (I)",
                "content_text": "We gathered at the beautiful Bimhuis. After we all got our credentials and whatnot ready it was time to start.Phill Sparks Opened the conference with a really good talk about Software Design Patterns in Laravel 4. He’s a member of the Laravel Core Team with shared responsibility for community engagement and support. Throughout the talk the showed many examples on those Patterns and how they are used inside Laravel. That was pretty cool.Then Jeffrey Way took the stage with his talk about Laravel Testing Tips, Techniques and Pitfalls. The talk wasn’t that much about Laravel, but more about testing in general and how to use it in the real world. But most of all he talked on how to get into it and get started. He had loads of examples.Right now, Taylor Otwell is doing a small Q&amp;A about Laravel and general development actually.I’m pretty sure all the talks will be avaiable soon.If want to know in real time what’s happenng you can use this twitter feed.Twitter Feed",
                "content_html": "<p>We gathered at the beautiful Bimhuis. After we all got our credentials and whatnot ready it was time to start.</p><p>Phill Sparks Opened the conference with a really good talk about Software Design Patterns in Laravel 4. He’s a member of the Laravel Core Team with shared responsibility for community engagement and support. Throughout the talk the showed many examples on those Patterns and how they are used inside Laravel. That was pretty cool.</p><p>Then Jeffrey Way took the stage with his talk about Laravel Testing Tips, Techniques and Pitfalls. The talk wasn’t that much about Laravel, but more about testing in general and how to use it in the real world. But most of all he talked on how to get into it and get started. He had loads of examples.</p><!--more--><p>Right now, Taylor Otwell is doing a small Q&amp;A about Laravel and general development actually.</p><p>I’m pretty sure all the talks will be avaiable soon.</p><p>If want to know in real time what’s happenng you can use this twitter feed.</p><p><a href=\"https://twitter.com/search?q=%23laraconeu&amp;src=savs\">Twitter Feed</a></p>",
                "url": "http://localhost:4000/post/laracon-eu-1/",
                
                
                "categories": ["laracon","laravel","laravel 4"],                
                
                "tags": ["laracon,laravel,laravel 4"],
                "date_published": "2013-08-30T00:00:00+01:00",
                "date_modified": "2013-08-30T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Laracon EU (II)",
                "content_text": "On the second part of the first day, Jordi Boggiano took the stage. Jordi is a lead developer of Composer, the PHP dependency manager that has taken the PHP world by storm.In-Depth with Composer was the name of his talk.So as expected his talk was all about composer. As you can see in his talk here it was mostly about tricks and tips about it.One of the best quotes so far from his talk was probably this one:  It’s cool to be bleeding edge, but it’s bleeding for a reason.I couldn’t agree more. People should be careful while using beeding edge tecnology. Specially with composer packages. icon Jordi’s Talk Jordi’s Twitter",
                "content_html": "<p>On the second part of the first day, Jordi Boggiano took the stage. Jordi is a lead developer of Composer, the PHP dependency manager that has taken the PHP world by storm.</p><p><strong>In-Depth with Composer</strong> was the name of his talk.</p><p>So as expected his talk was all about composer. As you can see in his talk <a href=\"http://joind.in/9028\">here</a> it was mostly about tricks and tips about it.</p><p>One of the best quotes so far from his talk was probably this one:</p><blockquote>  <p>It’s cool to be bleeding edge, but it’s bleeding for a reason.</p></blockquote><p>I couldn’t agree more. People should be careful while using beeding edge tecnology. Specially with composer packages.</p><p><a href=\"http://slides.seld.be/?file=2013-08-30+In-Depth+with+Composer.html#1\"><i class=\"icon-paper-clip\"></i> icon Jordi’s Talk</a></p><p><a href=\"http://twitter.com/seldaek\"><i class=\"icon-twitter\"></i> Jordi’s Twitter</a></p>",
                "url": "http://localhost:4000/post/laracon-eu-(2)/",
                
                
                "categories": ["composer","laracon","laravel"],                
                
                "tags": ["composer,laracon,laravel"],
                "date_published": "2013-08-30T00:00:00+01:00",
                "date_modified": "2013-08-30T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Laracon, are you excited?",
                "content_text": "Oh my, did you noticed that Laracon is right around the corner? That’s right, next week I’ll be traveling to Amsterdam for a small geek gathering.I look forward to check out the city, that’s why I’m going to stay there for a couple extra days. Also I’ll be with some of the people that went with me to Ciconf last year. But, most of all I can’t wait to met new people. People that I talk almost every week on twitter or IRC and the ones that I don’t even know about.Bimhuis is one of the most beautiful and intimate venues in Amsterdam. There’s always that awkward feeling when you put a face on a avatar. But you know what the best part is? Going to conferences like this one, even if you’re a guru that wrongly thinks that has nothing to learn, you always do.I look forward to learn with you.",
                "content_html": "<p>Oh my, did you noticed that Laracon is right around the corner? That’s right, next week I’ll be traveling to Amsterdam for a small geek gathering.</p><p>I look forward to check out the city, that’s why I’m going to stay there for a couple extra days. Also I’ll be with some of the people that went with me to Ciconf last year. But, most of all I can’t wait to met new people. People that I talk almost every week on twitter or IRC and the ones that I don’t even know about.</p><!--more--><p><img src=\"https://dl.dropboxusercontent.com/u/404972/blog/laracon.png\" alt=\"The venue\" /></p><center><small>Bimhuis is one of the most beautiful and intimate venues in Amsterdam. </small></center><p>There’s always that awkward feeling when you put a face on a avatar. But you know what the best part is? Going to conferences like this one, even if you’re a guru that wrongly thinks that has nothing to learn, you always do.</p><p>I look forward to learn with you.</p>",
                "url": "http://localhost:4000/post/laracon,-are-you-excited/",
                
                
                "categories": ["conference","laracon","laravel"],                
                
                "tags": ["conference,laracon,laravel"],
                "date_published": "2013-08-24T00:00:00+01:00",
                "date_modified": "2013-08-24T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Pixel density of 538ppi?",
                "content_text": "Full HD displays? Eat your heart out, handset manufacturers. LG Display has just laid claim to the world’s first Quad HD (2,560 x 1,440) smartphone display, which also boasts the highest pixel density of a mobile device, clocking in at 538ppi.world's first with 2,560 x 1,440 LCD for smartphonesDo you even know what this means for developers, specially front-end developers that do a lot of responsive webdesign? This means that a little device like that has more pixels than most 27” displays! So we’re heading towards huge images for phones and normal ones for desktops… This. Is. Insane.Apple’s retina displays is 326ppi and we already have enough trouble with it. This is almost double the size. The web will look awful using this LG screen.Just saying.",
                "content_html": "<p>Full HD displays? Eat your heart out, handset manufacturers. LG Display has just laid claim to the world’s first Quad HD (2,560 x 1,440) smartphone display, which also boasts the highest pixel density of a mobile device, clocking in at 538ppi.</p><!--more--><p><img src=\"https://dl.dropboxusercontent.com/u/404972/blog/lgd-qhd-panel.jpg\" alt=\"LG QHD panel\" /></p><center><small>world's first with 2,560 x 1,440 LCD for smartphones</small></center><p>Do you even know what this means for developers, specially front-end developers that do a lot of responsive webdesign? This means that a little device like that has more pixels than most 27” displays! So we’re heading towards huge images for phones and normal ones for desktops… This. Is. Insane.</p><p>Apple’s retina displays is 326ppi and we already have enough trouble with it. This is almost double the size. The web will look awful using this LG screen.</p><p>Just saying.</p>",
                "url": "http://localhost:4000/post/pixel-density-of-538ppi/",
                
                
                "categories": ["mobile","rant","responsive"],                
                
                "tags": ["mobile,rant,responsive"],
                "date_published": "2013-08-21T00:00:00+01:00",
                "date_modified": "2013-08-21T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "The CH experience",
                "content_text": "Earlier this year I got out of the previous company I was working for. My plan was simple. Earn enough money to live on my own as a freelancer.However things didn’t go exactly as expected. Mainly because living as a freelancer in Portugal sucks. Almost all the companies are in the toilet hence you only get paid when they can and not when you should.So I decided to try the market again and go after another full time job. I only had two requirements:   Work for a small company   Don’t have to move to another cityI got my resume ready (as in export my profile from linkedin) and sent it to Grupo CH because one of the companies there was hiring. Did the whole interview thing. Twice. One with human resources, and the second with the CEO.Got the job. Moved to another city and within a week I was working for a company with 75-100 people.  Well I guess my two requirements went out the window then.I was afraid at the time. My main concerns were that the group was just “too corporate” for me and I wouldn’t like it. Because you know, I like to wear shorts and ironic t-shirts to work.This is CH in all its gloryAll of that disappeared when I started working inside that little corner of the building they call Monstros e companhia (monsters &amp; cia - The company I’m working for in the group). I love it there. We work hard, but we still find a way to have a good time.We live in our own world there. That’s the best description I find for my work environment. We are a young and small team of 7-10 people that work mostly for small clients and for the other companies inside our group.The teamThe work stuff is going great. I like what, and how I’m doing things. I live close to the office so I don’t spend much time in commutes. I even have time to work on side projects like my blog and freelance stuff. But most of all, I have time to enjoy my new home.The view from the balcony of my new placeI get to experiment a lot since I mainly work on my projects alone. So I can choose what tools I’ll be using for a specific task, which is great!What can I say? The past 6 months have been great. Lots of new friends and experiences.And yes, I’m going to start blogging more about “work related stuff”.",
                "content_html": "<p>Earlier this year I got out of the previous company I was working for. My plan was simple. Earn enough money to live on my own as a freelancer.</p><p>However things didn’t go exactly as expected. Mainly because living as a freelancer in Portugal sucks. Almost all the companies are in the toilet hence you only get paid when they can and not when you should.</p><p>So I decided to try the market again and go after another full time job. I only had two requirements:</p><ul>  <li><i class=\"icon-angle-right\"></i> Work for a small company</li>  <li><i class=\"icon-angle-right\"></i> Don’t have to move to another city</li></ul><!--more--><p>I got my resume ready (as in export my profile from linkedin) and sent it to Grupo CH because one of the companies there was hiring. Did the whole interview thing. Twice. One with human resources, and the second with the CEO.</p><p>Got the job. Moved to another city and within a week I was working for a company with 75-100 people.</p><blockquote>  <p>Well I guess my two requirements went out the window then.</p></blockquote><p>I was afraid at the time. My main concerns were that the group was just “too corporate” for me and I wouldn’t like it. Because you know, I like to wear shorts and ironic t-shirts to work.</p><p><img src=\"https://dl.dropboxusercontent.com/u/404972/blog/grupo-ch.jpg\" alt=\"Grupo CH\" /></p><center><small>This is CH in all its glory</small></center><p>All of that disappeared when I started working inside that little corner of the building they call <em>Monstros e companhia</em> (monsters &amp; cia - The company I’m working for in the group). I love it there. We work hard, but we still find a way to have a good time.</p><p>We live in our own world there. That’s the best description I find for my work environment. We are a young and small team of 7-10 people that work mostly for small clients and for the other companies inside our group.</p><p><img src=\"https://dl.dropboxusercontent.com/u/404972/blog/monstros.jpg\" alt=\"Monstros &amp; CIA\" /></p><center><small>The team</small></center><p>The work stuff is going great. I like what, and how I’m doing things. I live close to the office so I don’t spend much time in commutes. I even have time to work on side projects like my blog and freelance stuff. But most of all, I have time to enjoy my new home.</p><p><img src=\"https://dl.dropboxusercontent.com/u/404972/blog/home-view.jpg\" alt=\"My home view\" /></p><center><small>The view from the balcony of my new place</small></center><p>I get to experiment a lot since I mainly work on my projects alone. So I can choose what tools I’ll be using for a specific task, which is great!</p><p>What can I say? The past 6 months have been great. Lots of new friends and experiences.</p><p>And yes, I’m going to start blogging more about “work related stuff”.</p>",
                "url": "http://localhost:4000/post/the-ch-experience/",
                
                
                "categories": ["experience","life","work"],                
                
                "tags": ["experience,life,work"],
                "date_published": "2013-08-19T00:00:00+01:00",
                "date_modified": "2013-08-19T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Wardrobe a minimal blogging application",
                "content_text": "As you may or may not know last week I migrated all my content from tumblr into this new cms called Wardrobe. For now I’m really happy with it. It gives me total control over my content and it doesn’t have all those features that most blogging platforms have. Features that I never needed in the first place.What is Wardrobe anyway?  Wardrobe is a minimalistic blogging application. Wardrobe attempts to make blogging simple and enjoyable by utilizing the latest technologies and keeping the administration as simple as possible with the primary focus on writing.What are the main features of this minimalistic blogging application? Markdown - All content is stored as markdown so its portable and easy to move in and out. Schedule Posts - Write posts and schedule the time and date you want them to appear. Post Tagging - Wardrobe allows you to tag posts for categorization and for grouping. Drag &amp; Drop - Prefer to write in a native app? With Wardrobe you can drag and drop markdown files into the admin to create posts Simple Theming - Wardrobe utilizes a simple but powerful theming system so almost any design can be integrated. Powerful Routing - Themes have the power to over ride routes and also create completely new custom ones. Github Wardrobecms",
                "content_html": "<p>As you may or may not know last week I migrated all my content from tumblr into this new cms called Wardrobe. For now I’m really happy with it. It gives me total control over my content and it doesn’t have all those features that most blogging platforms have. Features that I never needed in the first place.</p><p><strong>What is Wardrobe anyway?</strong></p><blockquote>  <p>Wardrobe is a minimalistic blogging application. Wardrobe attempts to make blogging simple and enjoyable by utilizing the latest technologies and keeping the administration as simple as possible with the primary focus on writing.</p></blockquote><!--more--><p><strong>What are the main features of this minimalistic blogging application?</strong></p><p><i class=\"icon-angle-right\"></i> <strong>Markdown</strong> - All content is stored as markdown so its portable and easy to move in and out.</p><p><i class=\"icon-angle-right\"></i> <strong>Schedule Posts</strong> - Write posts and schedule the time and date you want them to appear.</p><p><i class=\"icon-angle-right\"></i> <strong>Post Tagging</strong> - Wardrobe allows you to tag posts for categorization and for grouping.</p><p><i class=\"icon-angle-right\"></i> <strong>Drag &amp; Drop</strong> - Prefer to write in a native app? With Wardrobe you can drag and drop markdown files into the admin to create posts</p><p><i class=\"icon-angle-right\"></i> <strong>Simple Theming</strong> - Wardrobe utilizes a simple but powerful theming system so almost any design can be integrated.</p><p><i class=\"icon-angle-right\"></i> <strong>Powerful Routing</strong> - Themes have the power to over ride routes and also create completely new custom ones.</p><p><a href=\"https://github.com/ericbarnes/wardrobe\"><i class=\"icon-github\"></i> Github</a></p><p><a href=\"http://wardrobecms.com/\"><i class=\"icon-external-link\"></i> Wardrobecms</a></p>",
                "url": "http://localhost:4000/post/wardrobe-a-minimal-blogging-application/",
                
                
                "categories": ["blog","laravel","wardrobe","Webdev"],                
                
                "tags": ["blog,laravel,wardrobe,Webdev"],
                "date_published": "2013-08-15T00:00:00+01:00",
                "date_modified": "2013-08-15T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "PuPHPet",
                "content_text": "PuPHPet is a simple GUI to set up virtual machines for PHP development.This is a gui configurator for the Vagrant automation tool. It uses Puppet as the provisioning backend.This is similar to another tool that recently came out, Rove.io, although that one is more focused on using Vagrant with Chef, and has different configuration options. Github PuPHPet",
                "content_html": "<p>PuPHPet is a simple GUI to set up virtual machines for PHP development.</p><p>This is a gui configurator for the <a href=\"http://vagrantup.com/\">Vagrant</a> automation tool. It uses <a href=\"http://puppetlabs.com/\">Puppet</a> as the provisioning backend.This is similar to another tool that recently came out, <a href=\"http://rove.io/\">Rove.io</a>, although that one is more focused on using Vagrant with Chef, and has different configuration options.</p><p><a href=\"https://github.com/puphpet/puphpet/\"><i class=\"icon-github\"></i> Github</a></p><p><a href=\"https://puphpet.com/\"><i class=\"icon-external-link\"></i> PuPHPet</a></p>",
                "url": "http://localhost:4000/post/puphpet/",
                
                
                "categories": ["php","puppet","vagrant","virtual machines","vm"],                
                
                "tags": ["php,puppet,vagrant,virtual machines,vm"],
                "date_published": "2013-08-13T00:00:00+01:00",
                "date_modified": "2013-08-13T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "A New Face",
                "content_text": "My tumblr experience ended. It was good while it lasted but we had to part ways. You changed the way people manage and write their posts and I didn’t like that one bit.Then I found this little project called Wardrobe built in Laravel 4 and I was in-love. Editor in markdown and a base templates focussed on the reading experience.Took me one literally one days work to migrate all my articles and comments. First I used the jekyllrb plugin to export all my articles from tumblr. Then I imported everything into wardrobe in no time. The comments was the worst part, I had to change all the slugs to match them. After that I was good to go.Couple of changes to the template and BAM I got myself a blog platform.Best part is that since it’s built in Laravel 4 I can now play around with it and add more functionality to it.",
                "content_html": "<p>My tumblr experience ended. It was good while it lasted but we had to part ways. You changed the way people manage and write their posts and I didn’t like that one bit.</p><p>Then I found this little project called <a href=\"http://wardrobecms.com/\">Wardrobe</a> built in Laravel 4 and I was in-love. Editor in markdown and a base templates focussed on the reading experience.</p><p>Took me one literally one days work to migrate all my articles and comments. First I used the <a href=\"http://jekyllrb.com/\">jekyllrb</a> plugin to export all my articles from tumblr. Then I imported everything into wardrobe in no time. The comments was the worst part, I had to change all the slugs to match them. After that I was good to go.</p><p>Couple of changes to the template and BAM I got myself a blog platform.</p><p>Best part is that since it’s built in Laravel 4 I can now play around with it and add more functionality to it.</p>",
                "url": "http://localhost:4000/post/a-new-face/",
                
                                
                
                "date_published": "2013-08-09T00:00:00+01:00",
                "date_modified": "2013-08-09T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "The creative badge",
                "content_text": "I’ve been working in the creative business for a while now, and being around people that need to be creative for a living can have it’s advantages, and disadvantages.In one hand if you work with really good creatives you tend to be blown away by their ideas. On the other hand, you have to deal with the creative badges that they so proudly use. The “I’m so damn busy badge”.Or, the other good one called, “I have so much stuff to do!” badge.It’s a fact. Creative people - like designers and such - always like to brag about having so much stuff to do, and most of all saying that they don’t even have time to sleep.So here’s my view on these so called badges.Creative folks, get your shit together, if you have too much stuff to do, or don’t even have time to sleep that can only mean one of three things.   You’re not productive.   You don’t know how to manage your own time.   You don’t know how to say the word no.If you work alone and suffer from one of these, I would say that’s ok. It’s your problem after all. However, when you work as a team, working with people that suffer from these diseases can be frustrating.I think the second and the third are the main problems. The first one is actually more of an effect from those two. So let’s review those.You don’t know how to manage your own timeMy guess is that you normally don’t divide your time in tasks. You don’t know how much time you’ll need to deliver a product, and the worst problem of it all, you don’t respect deadlines.You don’t know how to say noHere’s the thing, everyone has to say no some time. If you don’t have time to do something get some help. Don’t say that you’ll going to deliver everything by yourself when you know you can’t. You’ll end up making a lazy job or even worst not delivering at all.People! Stop using these badges proudly. You should be ashamed if you use them.",
                "content_html": "<p>I’ve been working in the creative business for a while now, and being around people that need to be creative for a living can have it’s advantages, and disadvantages.</p><p>In one hand if you work with really good creatives you tend to be blown away by their ideas. On the other hand, you have to deal with the creative badges that they so proudly use. The “I’m so damn busy badge”.<!--more-->Or, the other good one called, “I have so much stuff to do!” badge.</p><p>It’s a fact. Creative people - like designers and such - always like to brag about having so much stuff to do, and most of all saying that they don’t even have time to sleep.</p><p><strong>So here’s my view on these so called badges.</strong></p><p>Creative folks, get your shit together, if you have too much stuff to do, or don’t even have time to sleep that can only mean one of three things.</p><ul>  <li><i class=\"icon-angle-right\"></i> You’re not productive.</li>  <li><i class=\"icon-angle-right\"></i> You don’t know how to manage your own time.</li>  <li><i class=\"icon-angle-right\"></i> You don’t know how to say the word no.</li></ul><p>If you work alone and suffer from one of these, I would say that’s ok. It’s your problem after all. However, when you work as a team, working with people that suffer from these diseases can be frustrating.</p><p>I think the second and the third are the main problems. The first one is actually more of an effect from those two. So let’s review those.</p><p><strong>You don’t know how to manage your own time</strong></p><p>My guess is that you normally don’t divide your time in tasks. You don’t know how much time you’ll need to deliver a product, and the worst problem of it all, you don’t respect deadlines.</p><p><strong>You don’t know how to say no</strong></p><p>Here’s the thing, everyone has to say no some time. If you don’t have time to do something get some help. Don’t say that you’ll going to deliver everything by yourself when you know you can’t. You’ll end up making a lazy job or even worst not delivering at all.</p><p>People! Stop using these badges proudly. You should be ashamed if you use them.</p>",
                "url": "http://localhost:4000/post/the-creative-badge/",
                
                
                "categories": ["creative","life","rant","work"],                
                
                "tags": ["creative,life,rant,work"],
                "date_published": "2013-07-30T00:00:00+01:00",
                "date_modified": "2013-07-30T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Laracon here I come!",
                "content_text": "That’s right, I just won a VIP ticket to Laracon. I’m not going to lie - it would be hard for me to go without this. Being a portuguese developer is not that easy these days.I have almost everything sorted, just need to finish some final arrangements with hostel and I’m on my way.Its going to be amazing I tell you. I’m going to be with a lot of the people I met during CIConf last year, and a lot of new people.The line up for the event is awesome.Couple of things that I can tell you now about this trip.   Expect drunk tweets   Expect some blogging during the eventsIf you’re going to be in the conference or are just in Amsterdam during that time and want to say hello, just let me know, both here or twitter, whatever works for you.",
                "content_html": "<p>That’s right, I just won a VIP ticket to Laracon. I’m not going to lie - it would be hard for me to go without this. Being a portuguese developer is not that easy these days.<!--more--></p><p>I have almost everything sorted, just need to finish some final arrangements with hostel and I’m on my way.</p><p>Its going to be amazing I tell you. I’m going to be with a lot of the people I met during CIConf last year, and a lot of new people.</p><p>The line up for the event is awesome.</p><p><strong>Couple of things that I can tell you now about this trip.</strong></p><ul>  <li><i class=\"icon-angle-right\"></i> Expect drunk tweets</li>  <li><i class=\"icon-angle-right\"></i> Expect some blogging during the events</li></ul><p>If you’re going to be in the conference or are just in Amsterdam during that time and want to say hello, just let me know, both here or twitter, whatever works for you.</p>",
                "url": "http://localhost:4000/post/laracon-here-i-come!/",
                
                
                "categories": ["conference","laracon","laravel","laravel 4","php"],                
                
                "tags": ["conference,laracon,laravel,laravel 4,php"],
                "date_published": "2013-07-15T00:00:00+01:00",
                "date_modified": "2013-07-15T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Hands-on Testing with PHPUnit - review",
                "content_text": "One of the things that is actually starting to matter in our PHP world is testing. THe PHP community disregarded this for far too long. However, more modern frameworks took this issue seriously and the community responded well.PHPUnit is a testing framework that is supported, integrated and suggested by the majority of PHP frameworks. Test Driven Development (TDD), and Continuous Integration are here to stay and PHPUnit is an industry standard that caters for both.Things I liked about the book:   The book is short, but it takes the reader from easy examples to something that is far more complex than the normal tests you may find on the interwebs.   The amount of real life examples and not just theoretical ones.   Great book if you’re just starting with testing in PHP.Thinks you may want to consider before buying this book   This is not a manual on how to use PHPUnit.   If you already have an intermediate experience with testing this book might not be the best one for you.Overall the book is great and it accomplishes quite well it’s purpose - getting people started with phpUnit. So if that’s your case you should definitely give it a go.You can find the book at:   Packt   Amazon",
                "content_html": "<p>One of the things that is actually starting to matter in our PHP world is testing. THe PHP community disregarded this for far too long. However, more modern frameworks took this issue seriously and the community responded well.</p><p>PHPUnit is a testing framework that is supported, integrated and suggested by the majority of PHP frameworks. Test Driven Development (TDD), and Continuous Integration are here to stay and PHPUnit is an industry standard that caters for both.<!--more--><strong>Things I liked about the book:</strong></p><ul>  <li><i class=\"icon-angle-right\"></i> The book is short, but it takes the reader from easy examples to something that is far more complex than the normal tests you may find on the interwebs.</li>  <li><i class=\"icon-angle-right\"></i> The amount of real life examples and not just theoretical ones.</li>  <li><i class=\"icon-angle-right\"></i> Great book if you’re just starting with testing in PHP.</li></ul><p><strong>Thinks you may want to consider before buying this book</strong></p><ul>  <li><i class=\"icon-angle-right\"></i> This is not a manual on how to use PHPUnit.</li>  <li><i class=\"icon-angle-right\"></i> If you already have an intermediate experience with testing this book might not be the best one for you.</li></ul><p>Overall the book is great and it accomplishes quite well it’s purpose - getting people started with phpUnit. So if that’s your case you should definitely give it a go.</p><p>You can find the book at:</p><ul>  <li><a href=\"http://www.packtpub.com/how-to-hands-on-testing-with-phpunit/book\"><i class=\"icon-link\"></i> Packt</a></li>  <li><a href=\"http://www.amazon.com/dp/178216958X/?tag=packtpubli-20\"><i class=\"icon-link\"></i> Amazon</a></li></ul>",
                "url": "http://localhost:4000/post/hands-on-testing-with-phpunit-review/",
                
                
                "categories": ["books","frameworks","php","tests","unit-testing"],                
                
                "tags": ["books,frameworks,php,tests,unit-testing"],
                "date_published": "2013-06-25T00:00:00+01:00",
                "date_modified": "2013-06-25T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Sublime pro tip CTags",
                "content_text": "One of the best features about the new version of Sublime that is now in beta is probably the goto definition. That was actually the main feature that was making me consider the update.However, now you can have that feature in your sublime text 2 powered by CTags.The ctags command is searched for on the system PATH. It works by doing a binary search of a memory-mapped tags file, so it will work efficiently with very large (50MB+) tags files if needed.To install the package you can do it in two ways. Either use the package manager or just clone the repository into your Packages directory.If like me anyone is having trouble getting the CTags -R flag to work on OSX, you are probably using the stock CTags installation.To get a proper copy of ctags, use one of the following options:Using Homebrew:\tbrew install ctagsUsing MacPorts:\tport install ctagsMake sure that Sublime Text is using the right version of CTags:If ‘which ctags’ doesn’t point at ctags in ‘/usr/local/bin’, make sure you add ‘/usr/local/bin’ to your PATH ahead of the folder ‘which ctags’ reported.Add or modify the ‘export PATH=…’ (e.g. in /.profile) to make the change permanentAlso if you installed it via brew you may want to add this to your alias list:\t$ alias ctags=\"`brew --prefix`/bin/ctags\"UsageThis uses .tags files created in ctags -R -f .tags recursive mode (by default).The plugin will try to find a .tags file in the same directory as the current view, walking up directories until it finds one. If it can’t find one it will offer to build one ( in the directory of the current view ). CTags ",
                "content_html": "<p>One of the best features about the new version of Sublime that is now in beta is probably the goto definition. That was actually the main feature that was making me consider the update.However, now you can have that feature in your sublime text 2 powered by CTags.</p><p>The ctags command is searched for on the system PATH. It works by doing a binary search of a memory-mapped tags file, so it will work efficiently with very large (50MB+) tags files if needed.<!--more--></p><p>To install the package you can do it in two ways. Either use the package manager or just clone the repository into your Packages directory.</p><p>If like me anyone is having trouble getting the CTags -R flag to work on OSX, you are probably using the stock CTags installation.</p><p>To get a proper copy of ctags, use one of the following options:</p><p><strong>Using Homebrew:</strong></p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\tbrew install ctags</code></pre></div></div><p><strong>Using MacPorts:</strong></p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\tport install ctags</code></pre></div></div><p>Make sure that Sublime Text is using the right version of CTags:</p><p>If ‘which ctags’ doesn’t point at ctags in ‘/usr/local/bin’, make sure you add ‘/usr/local/bin’ to your PATH ahead of the folder ‘which ctags’ reported.</p><p>Add or modify the ‘export PATH=…’ (e.g. in /.profile) to make the change permanent</p><p>Also if you installed it via brew you may want to add this to your alias list:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t$ alias ctags=\"`brew --prefix`/bin/ctags\"</code></pre></div></div><p><strong>Usage</strong></p><p>This uses .tags files created in ctags -R -f .tags recursive mode (by default).</p><p>The plugin will try to find a .tags file in the same directory as the current view, walking up directories until it finds one. If it can’t find one it will offer to build one ( in the directory of the current view ).</p><p><a href=\"https://github.com/SublimeText/CTags\"><i class=\"icon-link\"></i> CTags </a></p>",
                "url": "http://localhost:4000/post/sublime-pro-tip-ctags/",
                
                
                "categories": ["osx","package","Sublime Text","text-editor"],                
                
                "tags": ["osx,package,Sublime Text,text-editor"],
                "date_published": "2013-06-06T00:00:00+01:00",
                "date_modified": "2013-06-06T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "A message from the future",
                "content_text": "This is a message from the future for you. Yes, you! The guy that is still using Google Reader completely unprepared for what is about to happen.Well, thinking about that I started not using GR a few months ago and now I’m here to tell you that life is possible without it.Here’s how:First I tried to replace GR with another online reader, but none was as good as the one I used to love. Then I tried a few desktop apps and that failed completely. I would simply forget about them apps and don’t even read my feeds.Then I remembered, I have a tablet don’t I? So I tried using apps like Flipboard and that seems to work greatly for stuff like daily news, tech news and whatnot. However I needed something to keep me up to date with my favorite blogs and using something like Flipboard for that was just silly.So I came up with a solution for those. I called it the “survival of the fittest strategy”. I simply stopped using any kind of rss reader for that king of blogs. If they’re actually good I still remember to visit them at least once a week. If that’s not the case, well that means that the blog in question was not that good, therefore I can live without it (these are normally personal blogs and all that).Now I have way more time for gif’s and lolcats on reddit and life is perfect.ps: If you’re reading this message on Google Reader that just proves that this is in fact a message from the future. Because the life I’m living now is a life with no Google Reader.",
                "content_html": "<p>This is a message from the future for you. Yes, you! The guy that is still using Google Reader completely unprepared for what is about to happen.</p><p>Well, thinking about that I started not using GR a few months ago and now I’m here to tell you that life is possible without it.<!--more--><strong>Here’s how:</strong></p><p>First I tried to replace GR with another online reader, but none was as good as the one I used to love. Then I tried a few desktop apps and that failed completely. I would simply forget about them apps and don’t even read my feeds.</p><p>Then I remembered, I have a tablet don’t I? So I tried using apps like Flipboard and that seems to work greatly for stuff like daily news, tech news and whatnot. However I needed something to keep me up to date with my favorite blogs and using something like Flipboard for that was just silly.</p><p>So I came up with a solution for those. I called it the “survival of the fittest strategy”. I simply stopped using any kind of rss reader for that king of blogs. If they’re actually good I still remember to visit them at least once a week. If that’s not the case, well that means that the blog in question was not that good, therefore I can live without it (these are normally personal blogs and all that).</p><p>Now I have way more time for gif’s and lolcats on reddit and life is perfect.</p><p><strong>ps:</strong> <em>If you’re reading this message on Google Reader that just proves that this is in fact a message from the future. Because the life I’m living now is a life with no Google Reader.</em></p>",
                "url": "http://localhost:4000/post/a-message-from-the-future/",
                
                
                "categories": ["message","rant"],                
                
                "tags": ["message,rant"],
                "date_published": "2013-05-21T00:00:00+01:00",
                "date_modified": "2013-05-21T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Git ProTip Rebase Commits into smaller commits",
                "content_text": "Yeah, that’s right. If you’re like me you have a small compulsion to commit every small task you complete. In some cases that can be a good practice. However, when you’re working with a large team, or even on a open source project that has lot’s of contributors that can be a PITA in the long run. Imagine you’re looking for all the changes done while creating a feature, and your history is full of small commits. Finding what you’re looking for is not going to be easy.So I started digging a way so I can continue on my normal commit rate, but before I push things into my remote(s) I can decide if my code will go divide into all of those commits or if I want to …merge“ them into a single commit.Let’s look at the rebase command and if you’ll see that is one called —interactive. Apparently the most common use for this one is to squash commits. What I mean by that is that you can pick up all your commits and combine them into larger ones.-i, --interactive Let the user edit the list of commits to rebaseA word of caution: Only do this on commits that haven’t been pushed an external repository. If others have based work off of the commits that you’re going to delete, plenty of conflicts can occur. Just don’t rewrite your history if it’s been shared with others.",
                "content_html": "<p>Yeah, that’s right. If you’re like me you have a small compulsion to commit every small task you complete. In some cases that can be a good practice. However, when you’re working with a large team, or even on a open source project that has lot’s of contributors that can be a PITA in the long run. Imagine you’re looking for all the changes done while creating a feature, and your history is full of small commits. Finding what you’re looking for is not going to be easy.</p><!--more--><p>So I started digging a way so I can continue on my normal commit rate, but before I push things into my remote(s) I can decide if my code will go divide into all of those commits or if I want to …merge“ them into a single commit.</p><p>Let’s look at the rebase command and if you’ll see that is one called —interactive. Apparently the most common use for this one is to squash commits. What I mean by that is that you can pick up all your commits and combine them into larger ones.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>-i, --interactive Let the user edit the list of commits to rebase</code></pre></div></div><p>A word of caution: Only do this on commits that haven’t been pushed an external repository. If others have based work off of the commits that you’re going to delete, plenty of conflicts can occur. Just don’t rewrite your history if it’s been shared with others.</p>",
                "url": "http://localhost:4000/post/git-protip-rebase-commits-into-smaller-commits/",
                
                
                "categories": ["Git","merge","Versioncontrol"],                
                
                "tags": ["Git,merge,Versioncontrol"],
                "date_published": "2013-05-16T00:00:00+01:00",
                "date_modified": "2013-05-16T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Laravel Amsterdam Conference",
                "content_text": "That’s right, with the US laracon finished it’s time to start thinking about the next one, and they are. In this case, if you’re interested in this just go here and show your interest.Take the survey and let’s make this happen.",
                "content_html": "<p>That’s right, with the US laracon finished it’s time to start thinking about the next one, and they are. In this case, if you’re interested in this just go <a href=\"https://heybigname.typeform.com/to/oXujNm\">here</a> and show your interest.</p><p>Take <a href=\"https://heybigname.typeform.com/to/oXujNm\">the survey</a> and let’s make this happen.</p>",
                "url": "http://localhost:4000/post/laravel-amsterdam-conference/",
                
                                
                
                "date_published": "2013-05-04T00:00:00+01:00",
                "date_modified": "2013-05-04T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "Font Awesome",
                "content_text": "Do you use bootstrap? Who am I kidding, of course you do.Ok, here’s the problem that I used to have: I build a lot of back-end applications, most of them are powered by booststrap and one thing that I always found was that it didn’t had many icons to work with.That’s were Font awesome comes in. You just need to include another css file and you’re done. Now you can use many, many icons and better than that. You can use them in different sizes.How awesome is that? Font-awesomeUse it and abuse it.",
                "content_html": "<p>Do you use bootstrap? Who am I kidding, of course you do.</p><p>Ok, here’s the problem that I used to have: I build a lot of back-end applications, most of them are powered by booststrap and one thing that I always found was that it didn’t had many icons to work with.</p><p>That’s were Font awesome comes in. You just need to include another css file and you’re done. Now you can use many, many icons and better than that. You can use them in different sizes.</p><p>How awesome is that?</p><p><a href=\"http://fortawesome.github.io/Font-Awesome/\"><i class=\"icon-link\"></i> Font-awesome</a></p><p>Use it and abuse it.</p>",
                "url": "http://localhost:4000/post/font-awesome/",
                
                
                "categories": ["css","frameworks","twitter bootstrap"],                
                
                "tags": ["css,frameworks,twitter bootstrap"],
                "date_published": "2013-04-30T00:00:00+01:00",
                "date_modified": "2013-04-30T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Can't get to Laracon? You're in luck!",
                "content_text": "First thing this morning (a little past midnight UK time), a guy by the name of Chris Borgia posted a campaign on indiegogo. The campaign, “Film Laracon” is pretty self-explanatory. In the project summary he pointed out that there were no plans for the talks to be recorded, meaning those of us unable to attend Laracon would be left out of the mix. As it happens, Chris already owns the relatively wide range of gear necessary to record a conference and he’d managed to secure a slot on the guest list, so all he had to cover was the cost of a hotel and parking at a total of $560.Can’t make it to #laracon? We can record videos of the talks, but we need a little extra help from you! Lend a hand? igg.me/at/laraconFebruary 7, 2013As someone living in the UK without a Passport I didn’t have a hope in hell of actually being there, even if I wanted to be. With that in mind, when I saw @laravelphp’s tweet, I had to do something about it. $20 was enough to get me early access to the recordings via FTP; translate that to real money (GBP) and you’re left with about 13 quid. I’m not generally the superstitious type but hey, I didn’t wanna jinx it so I rounded up to 25 anyway.I made my donation at 00:19. After that, a couple more people donated as you’d expect. Then someone came along and threw in no less than two hundred and fifty dollars. Yeah, you read that right. I won’t give their name because they changed the privacy setting to not disclose the amount, but they deserve a bloody medal.Needless to say, their very generous donation brought the running total to be $6 short of the target. I took to IRC to say “Holy crap!” but someone else had already seen the donation. They went one step further with “holy crap on a stick”, so I changed my mind. In the mean time, the odd number was driving me crazy so the race was on to donate that final 6 dollars.Long story short, in the 25 minutes since going live, the campaign had already reached its goal. Looks like a few others had the same idea as me though - by 30 minutes the total was almost $100 over the initial target. Amazing what difference a community can make!So thanks to Chris, the indiegogo contributors and of course the organisers for letting him in, we’ll all be able to watch the conference from the comfort of our armchairs (or office chairs) as and when we want. For those of you that can’t donate for whatever reason or didn’t opt for early access, videos will likely be released daily, one talk at a time.As I sit here typing this now at 04:30, the pot is overflowing by 345USD, thus bringing the total to $906. Kinda makes me wish I didn’t donate that extra 6 dollars now… There’s still plenty of time to contribute though. If you want to be credited, get first dibs on the footage or even just say “thanks” with your wallet, Let’s Film Laracon is “open” ‘til 13th February (next Wednesday).Post by Dave Shoreman give him some love on his website or Twitter.ps: and yes I was too lazy to write my own blog post!",
                "content_html": "<p>First thing this morning (a little past midnight UK time), a guy by the name of Chris Borgia posted a campaign on indiegogo. The campaign, “Film Laracon” is pretty self-explanatory. In the project summary he pointed out that there were no plans for the talks to be recorded, meaning those of us unable to attend Laracon would be left out of the mix. As it happens, Chris already owns the relatively wide range of gear necessary to record a conference and he’d managed to secure a slot on the guest list, so all he had to cover was the cost of a hotel and parking at a total of $560.<!--more--></p><p>Can’t make it to #laracon? We can record videos of the talks, but we need a little extra help from you! Lend a hand? igg.me/at/laracon</p><p>February 7, 2013As someone living in the UK without a Passport I didn’t have a hope in hell of actually being there, even if I wanted to be. With that in mind, when I saw @laravelphp’s tweet, I had to do something about it. $20 was enough to get me early access to the recordings via FTP; translate that to real money (GBP) and you’re left with about 13 quid. I’m not generally the superstitious type but hey, I didn’t wanna jinx it so I rounded up to 25 anyway.</p><p>I made my donation at 00:19. After that, a couple more people donated as you’d expect. Then someone came along and threw in no less than two hundred and fifty dollars. Yeah, you read that right. I won’t give their name because they changed the privacy setting to not disclose the amount, but they deserve a bloody medal.</p><p>Needless to say, their very generous donation brought the running total to be $6 short of the target. I took to IRC to say “Holy crap!” but someone else had already seen the donation. They went one step further with “holy crap on a stick”, so I changed my mind. In the mean time, the odd number was driving me crazy so the race was on to donate that final 6 dollars.</p><p>Long story short, in the 25 minutes since going live, the campaign had already reached its goal. Looks like a few others had the same idea as me though - by 30 minutes the total was almost $100 over the initial target. Amazing what difference a community can make!</p><p>So thanks to Chris, the indiegogo contributors and of course the organisers for letting him in, we’ll all be able to watch the conference from the comfort of our armchairs (or office chairs) as and when we want. For those of you that can’t donate for whatever reason or didn’t opt for early access, videos will likely be released daily, one talk at a time.</p><p>As I sit here typing this now at 04:30, the pot is overflowing by 345USD, thus bringing the total to $906. Kinda makes me wish I didn’t donate that extra 6 dollars now… There’s still plenty of time to contribute though. If you want to be credited, get first dibs on the footage or even just say “thanks” with your wallet, Let’s Film Laracon is “open” ‘til 13th February (next Wednesday).</p><p>Post by <a href=\"http://www.codem0nk3y.com/2013/02/cant-get-to-laracon-youre-in-luck/\">Dave Shoreman</a> give him some love on his website or <a href=\"https://twitter.com/codem0nk3y\">Twitter</a>.</p><p><strong>ps:</strong> <em>and yes I was too lazy to write my own blog post!</em></p>",
                "url": "http://localhost:4000/post/can't-get-to-laracon-you're-in-luck!/",
                
                
                "categories": ["laracon","laravel"],                
                
                "tags": ["laracon,laravel"],
                "date_published": "2013-02-07T00:00:00+00:00",
                "date_modified": "2013-02-07T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Php Fig The Php Framework Interop Group",
                "content_text": "The idea behind the group is for project representatives to talk about the commonalities between our projects and find ways we can work together. Our main audience is each other, but we’re very aware that the rest of the PHP community is watching. If other folks want to adopt what we’re doing they are welcome to do so, but that is not the aim.There’s a few ways to get involved into this thing:      Join the malling list.        Get on the IRC Chat #php-fig.        Start using PSR-0 / PSR-1 / PSR-2 / PSR-3 in your code styles.        Check out the github page for the fig standards.  ",
                "content_html": "<p>The idea behind the group is for project representatives to talk about the commonalities between our projects and find ways we can work together. Our main audience is each other, but we’re very aware that the rest of the PHP community is watching. If other folks want to adopt what we’re doing they are welcome to do so, but that is not the aim.</p><!--more--><p>There’s a few ways to get involved into this thing:</p><ul>  <li>    <p>Join the <a href=\"https://groups.google.com/forum/?fromgroups#!forum/php-fig\">malling list</a>.</p>  </li>  <li>    <p>Get on the IRC Chat <a href=\"http://www.php-fig.org/irc/\">#php-fig</a>.</p>  </li>  <li>    <p>Start using PSR-0 / PSR-1 / PSR-2 / PSR-3 in your code styles.</p>  </li>  <li>    <p>Check out the <a href=\"https://github.com/php-fig/fig-standards\">github page</a> for the fig standards.</p>  </li></ul>",
                "url": "http://localhost:4000/post/php-fig-the-php-framework-interop-group/",
                
                                
                
                "date_published": "2013-02-04T00:00:00+00:00",
                "date_modified": "2013-02-04T00:00:00+00:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "Laravel Starter front to back",
                "content_text": "I just finished reading this book, so it’s now time to give it the review it deserves. First and foremost this is a really small book that you can read in hours. However you shouldn’t judge a book by its weight. Even though the book is small, it’s actually full of useful content.Like any other book about a framework, it starts by walking the reader into the process of downloading and getting started with the framework. Getting everything ready on all the operating systems.The second part of the book walks the reader into making his own web-application. This is when it starts getting interesting. The thing I liked the most about the book is that Shawn didn’t focus on the usual subjects. He could’ve skipped the migrations subject entirely and just give the reader the necessary code to create the users table. But he didn’t, he used the migrations and moreover he explains the importance of using migrations while developing web-applications, especially while working with a team.Another good example of this is when the book gets to the point of using the routing system. Although there are people building entire applications with just routes and not using controllers at all, Shawn takes the time to explain why it’s important to use controllers. This is a very important thing that Shawn keeps saying throughout the book. Laravel is a framework where convention prevails over configuration. This is why I think he chose to explain all of these concepts: you should always follow the conventions while developing with Laravel.After the chapter where Shawn shows the reader how to build a simple CRUD application, he takes them onto 5 important features that some users of Laravel tend to forget.Eloquent relationshipsHere he explains why they are important and most of all how they can save you time. All this while showing examples of how to do it. This is actually a big chapter in the book, and I really think Shawn did a good job explaining all the concepts related to using the built in ORM of Laravel.AuthenticationAnother feature that some users tend to forget, instead using their own authentication libraries. Here Shawn shows how it is actually a good thing to use the built in authentication.FiltersIn this section, Shawn shows the reader how to use filters in Laravel. Note that while he’s showing all of this he’s always showing examples using the small CRUD application he built in the second chapter of the book. That means the reader gets a pretty good explanation about all this with the help of real life examples.ValidationValidation is actually really important, and here Shawn shows the reader just how important it is. Showing that you can use the validation not only to validate forms, but actually anything in your application. This is great because most people tend to forget that and end up using the validation just for forms.BundlesThe last one is obviously the bundles. Here Shawn shows how you can can make the application modular. And perhaps more importantly, how you can re-use the code. In this chapter he also gives the reader what I think is really good advice.  The core purpose behind the existence of bundles is code re-use. On the road to mastering Laravel, we recommend implementing new code first without bundles. Then, once you find a need to re-use that code, you may then prefer to bundle the code up and refactor it as necessary. This prevents you from being slowed down by both learning how bundles are put together and by implementing code for the first time in Laravel.So in case you’re wanting to try Laravel and like to start by reading a good book, I definitely recommend this one. It gives you the quick boost you need to create beautiful things with Laravel.",
                "content_html": "<p>I just finished reading this book, so it’s now time to give it the review it deserves. First and foremost this is a really small book that you can read in hours. However you shouldn’t judge a book by its weight. Even though the book is small, it’s actually full of useful content.Like any other book about a framework, it starts by walking the reader into the process of downloading and getting started with the framework. Getting everything ready on all the operating systems.<!--more-->The second part of the book walks the reader into making his own web-application. This is when it starts getting interesting. The thing I liked the most about the book is that Shawn didn’t focus on the usual subjects. He could’ve skipped the migrations subject entirely and just give the reader the necessary code to create the users table. But he didn’t, he used the migrations and moreover he explains the importance of using migrations while developing web-applications, especially while working with a team.</p><p>Another good example of this is when the book gets to the point of using the routing system. Although there are people building entire applications with just routes and not using controllers at all, Shawn takes the time to explain why it’s important to use controllers. This is a very important thing that Shawn keeps saying throughout the book. Laravel is a framework where convention prevails over configuration. This is why I think he chose to explain all of these concepts: you should always follow the conventions while developing with Laravel.</p><p>After the chapter where Shawn shows the reader how to build a simple CRUD application, he takes them onto 5 important features that some users of Laravel tend to forget.</p><p><strong>Eloquent relationships</strong></p><p>Here he explains why they are important and most of all how they can save you time. All this while showing examples of how to do it. This is actually a big chapter in the book, and I really think Shawn did a good job explaining all the concepts related to using the built in ORM of Laravel.</p><p><strong>Authentication</strong></p><p>Another feature that some users tend to forget, instead using their own authentication libraries. Here Shawn shows how it is actually a good thing to use the built in authentication.</p><p><strong>Filters</strong></p><p>In this section, Shawn shows the reader how to use filters in Laravel. Note that while he’s showing all of this he’s always showing examples using the small CRUD application he built in the second chapter of the book. That means the reader gets a pretty good explanation about all this with the help of real life examples.</p><p><strong>Validation</strong></p><p>Validation is actually really important, and here Shawn shows the reader just how important it is. Showing that you can use the validation not only to validate forms, but actually anything in your application. This is great because most people tend to forget that and end up using the validation just for forms.</p><p><strong>Bundles</strong></p><p>The last one is obviously the bundles. Here Shawn shows how you can can make the application modular. And perhaps more importantly, how you can re-use the code. In this chapter he also gives the reader what I think is really good advice.</p><blockquote>  <p>The core purpose behind the existence of bundles is code re-use. On the road to mastering Laravel, we recommend implementing new code first without bundles. Then, once you find a need to re-use that code, you may then prefer to bundle the code up and refactor it as necessary. This prevents you from being slowed down by both learning how bundles are put together and by implementing code for the first time in Laravel.</p></blockquote><p>So in case you’re wanting to try Laravel and like to start by reading a good book, I definitely recommend this one. It gives you the quick boost you need to create beautiful things with Laravel.</p>",
                "url": "http://localhost:4000/post/laravel-starter-front-to-back/",
                
                
                "categories": ["books","frameworks","laravel","php"],                
                
                "tags": ["books,frameworks,laravel,php"],
                "date_published": "2013-01-08T00:00:00+00:00",
                "date_modified": "2013-01-08T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "The bittersweet news",
                "content_text": "Well since I’m now working as a freelancer I now have a bit more power over what framework should be used for this or that project. Therefore, I think I’m not going to use Codeigniter by choice anymore. This means I’ll use it if the client requests it. Or if by any chance I’m working with someone else that is only familiar with CI and not Laravel.Also I still need to support a lot of applications that were built with CI, and since the code doen’t re-write itself I’m going to continue with Codeigniter on those.I might even chose Codeigniter if somehow I get a long term project that needs support for a long time. Because like I said on other posts, Codeigniter is amazing for that.Now, when we’re talking about projects that will not last longer in terms of support I’m going to use Laravel.For now I’m still not confortable about using Laravel 4 in production. But I feel quite confortable using Laravel 3, specially when they told me on #laravel@freenode that Laravel 3 will be supported even after Laravel 4 comes out. This is great news, because what it means is that Laravel 3 will be some kind of LTS (Long Term Support) version of Laravel. Getting all of those sweet security updates and whatnot.Anyhow, I don’t want people from the CI community to think that I’m out for good. I’m not, but I’m probably not going to be that active as I used to be there.Ps: All the codeigniter projects that I’m involved with will continue being supported. Like my helpers and the snippets package for sublime text.",
                "content_html": "<p>Well since I’m now working as a freelancer I now have a bit more power over what framework should be used for this or that project. Therefore, I think I’m not going to use Codeigniter by choice anymore. This means I’ll use it if the client requests it. Or if by any chance I’m working with someone else that is only familiar with CI and not Laravel.<!--more-->Also I still need to support a lot of applications that were built with CI, and since the code doen’t re-write itself I’m going to continue with Codeigniter on those.</p><p>I might even chose Codeigniter if somehow I get a long term project that needs support for a long time. Because like I said on other posts, Codeigniter is amazing for that.</p><p>Now, when we’re talking about projects that will not last longer in terms of support I’m going to use Laravel.</p><p>For now I’m still not confortable about using Laravel 4 in production. But I feel quite confortable using Laravel 3, specially when they told me on #laravel@freenode that Laravel 3 will be supported even after Laravel 4 comes out. This is great news, because what it means is that Laravel 3 will be some kind of LTS (Long Term Support) version of Laravel. Getting all of those sweet security updates and whatnot.</p><p>Anyhow, I don’t want people from the CI community to think that I’m out for good. I’m not, but I’m probably not going to be that active as I used to be there.</p><p>Ps: All the codeigniter projects that I’m involved with will continue being supported. Like my helpers and the snippets package for sublime text.</p>",
                "url": "http://localhost:4000/post/the-bittersweet-news/",
                
                
                "categories": ["ci","codeigniter","freelancer","laravel"],                
                
                "tags": ["ci,codeigniter,freelancer,laravel"],
                "date_published": "2013-01-07T00:00:00+00:00",
                "date_modified": "2013-01-07T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Is 2012 gone yet?",
                "content_text": "Yeah, that’s right. It’s gone, vanish, it’s in fact the past now. So let’s look back and see what 2012 as done.I started this blog in late 2010. Rather than dumping all the information I wanted here, I had a really slow start. Blogging only every now and them. Actually 2010 had only 8 posts and for some weird reason that I can’t really remember my next post only came 6 months after that.So 2011 was also a slow year. Them I made one of my 2012 year resolutions that I’ll be using my blog more often.Then I started planning and taking it more seriously, doing series of posts about specific subjects. Screencasting, which was weird for me (still is), and yes, 2012 has more posts (with what I think is useful information) than the other two years put together.The only thing I really wish for 2013 related to this project is making it even better. Like I told you I’m planing a screencast series, something that I haven’t done before. Also I’m going to keep posting like I did during 2012 or better, time will tell.For now, thanks for stoping by and I wish you a really good 2013.",
                "content_html": "<p>Yeah, that’s right. It’s gone, vanish, it’s in fact the past now. So let’s look back and see what 2012 as done.</p><p>I started this blog in late 2010. Rather than dumping all the information I wanted here, I had a really slow start. Blogging only every now and them. Actually 2010 had only 8 posts and for some weird reason that I can’t really remember my next post only came 6 months after that.So 2011 was also a slow year. Them I made one of my 2012 year resolutions that I’ll be using my blog more often.<!--more-->Then I started planning and taking it more seriously, doing series of posts about specific subjects. Screencasting, which was weird for me (still is), and yes, 2012 has more posts (with what I think is useful information) than the other two years put together.</p><p>The only thing I really wish for 2013 related to this project is making it even better. Like I told you I’m planing a screencast series, something that I haven’t done before. Also I’m going to keep posting like I did during 2012 or better, time will tell.</p><p>For now, thanks for stoping by and I wish you a really good 2013.</p>",
                "url": "http://localhost:4000/post/is-2012-gone-yet/",
                
                
                "categories": [2012,"review","2012"],                
                
                "tags": ["2012,review"],
                "date_published": "2012-12-31T00:00:00+00:00",
                "date_modified": "2012-12-31T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": 2013,
                "content_text": "Looks like the world didn’t end after all. I’m disappointed. So what’s going to happen in 2013?Hell if I know! I’m not sure what’s going to happen around me, so I most certainly don’t know what’s going to happen in the world.2012 ended up being good with a small turn in the end (but this wasn’t the only one). It was just a matter of time for this thing called the Economy come and bite me in the ass. I just left the company I was working for. So, starting in January 2013 I’ll be working fulltime as a freelancer.Now, there’s good news and bad news.First the bad news.I never done anything like this before and things aren’t that good at the moment where I live (Portugal) so we’ll see how it goes.Need to take care of those boring tasks attached with this life. Like sending invoices and whatnot. I hate that.Then the good news.Working from home.Don’t need to put up with shit that only happens when you work for someone.More time to blog (this can be a good thing if that means that I can manage my time properly, or a really bad thing if I’m doing it because I have too much free time).Now the best thing is: I’m already fully booked with work for January and maybe a bit for February, and that’s going to be my plan for the moment. Live by the month and see how it goes. If I can work this out, I can start thinking about doing this in a more long term. If it doesn’t work, hell I’m a citizen of the world and I’ll get a job somewhere else.For now, 2013, bring it on!",
                "content_html": "<p>Looks like the world didn’t end after all. I’m disappointed. So what’s going to happen in 2013?</p><p>Hell if I know! I’m not sure what’s going to happen around me, so I most certainly don’t know what’s going to happen in the world.<!--more-->2012 ended up being good with a small turn in the end (but this wasn’t the only one). It was just a matter of time for this thing called the Economy come and bite me in the ass. I just left the company I was working for. So, starting in January 2013 I’ll be working fulltime as a freelancer.Now, there’s good news and bad news.</p><p><strong>First the bad news.</strong></p><p>I never done anything like this before and things aren’t that good at the moment where I live (Portugal) so we’ll see how it goes.Need to take care of those boring tasks attached with this life. Like sending invoices and whatnot. I hate that.Then the good news.</p><p><strong>Working from home.</strong></p><p>Don’t need to put up with shit that only happens when you work for someone.More time to blog (this can be a good thing if that means that I can manage my time properly, or a really bad thing if I’m doing it because I have too much free time).Now the best thing is: I’m already fully booked with work for January and maybe a bit for February, and that’s going to be my plan for the moment. Live by the month and see how it goes. If I can work this out, I can start thinking about doing this in a more long term. If it doesn’t work, hell I’m a citizen of the world and I’ll get a job somewhere else.</p><p>For now, 2013, bring it on!</p>",
                "url": "http://localhost:4000/post/2013/",
                
                
                "categories": ["life","Miscellaneous","Webdev"],                
                
                "tags": ["life,Miscellaneous,Webdev"],
                "date_published": "2012-12-28T00:00:00+00:00",
                "date_modified": "2012-12-28T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "So you're a webdeveloper. Where's your Digital Footprint?",
                "content_text": "Something that always amazed me is the amount of webdevelopers I happen to find on the web with literally almost no Digital Fooprint. Specially with people that I find on Freenode.This normally happens when I’m looking for some small freelance stuff, or even just going voyeur style and find someone talking big.**People saying **  I did this and that big project here’s my twitter account and whatnot, help me, but I’m not allowed to show code.Then when I’m really bored and in the right mood, I search his name. I’m amazed about the times I get only that profile the person just shared, that normally has one or two tweets.Then sometimes when I get to talk to someone like that I actually ask them:  But why? Why can’t I find anything about you or your work? Why don’t you have a personal website or something?**The answer is the same almost every time. **  Are you insane? I’m a information freak, I don’t want people searching my name, and finding stuff about me.My normal reaction is always.  Well sure, if you were a drug lord I could understand that. But from what you say you’re “just” a webdeveloper. Being one means spending a lot of time on the internet.Let’s be serious, if you’re a webdeveloper you do this all the time.Inevitable if you are a “normal” webdeveloper you will end up with some kind of digital footprint because you:  help people in forums.  have a twitter account.  contributed to open-source projects.  have a personal website.  hopefully you blog.  are not afraid of this thing called the Internet.What I’m trying to say is: it’s ok if you want to protect your personal information from the Elders of the internet. Actually I think the Internet appreciates that. I think there’s enough weird family photos around already.However, I’m sure you use stackoverflow all the time. You find answers on forums everyday. Every now and again you even ask for help yourself. But when you see that lonely person asking for help on a forum, and you actually know the solution to that poor soul problem, you just close the window and move on with your life.If you are that kind of webdeveloper. I’m sorry to tell you this, but you’re also a douche.Note that I’m not saying that you should answer every question you find. I don’t do it myself if that question can be answered with a simple google search. But don’t expect people to help you all the time because the person on the other side can be a douche just like you.",
                "content_html": "<p>Something that always amazed me is the amount of webdevelopers I happen to find on the web with literally almost no Digital Fooprint. Specially with people that I find on Freenode.</p><p>This normally happens when I’m looking for some small freelance stuff, or even just going voyeur style and find someone talking big.<!--more-->**People saying **</p><blockquote>  <p>I did this and that big project here’s my twitter account and whatnot, help me, but I’m not allowed to show code.</p></blockquote><p>Then when I’m really bored and in the right mood, I search his name. I’m amazed about the times I get only that profile the person just shared, that normally has one or two tweets.</p><p><strong>Then sometimes when I get to talk to someone like that I actually ask them:</strong></p><blockquote>  <p>But why? Why can’t I find anything about you or your work? Why don’t you have a personal website or something?</p></blockquote><p>**The answer is the same almost every time. **</p><blockquote>  <p>Are you insane? I’m a information freak, I don’t want people searching my name, and finding stuff about me.</p></blockquote><p><strong>My normal reaction is always.</strong></p><blockquote>  <p>Well sure, if you were a drug lord I could understand that. But from what you say you’re “just” a webdeveloper. Being one means spending a lot of time on the internet.</p></blockquote><p>Let’s be serious, if you’re a webdeveloper you do this all the time.</p><p>Inevitable if you are a “normal” webdeveloper you will end up with some kind of digital footprint because you:</p><ul>  <li>help people in forums.</li>  <li>have a twitter account.</li>  <li>contributed to open-source projects.</li>  <li>have a personal website.</li>  <li>hopefully you blog.</li>  <li>are not afraid of this thing called the Internet.</li></ul><p>What I’m trying to say is: it’s ok if you want to protect your personal information from the Elders of the internet. Actually I think the Internet appreciates that. I think there’s enough weird family photos around already.</p><p>However, I’m sure you use stackoverflow all the time. You find answers on forums everyday. Every now and again you even ask for help yourself. But when you see that lonely person asking for help on a forum, and you actually know the solution to that poor soul problem, you just close the window and move on with your life.</p><p>If you are that kind of webdeveloper. I’m sorry to tell you this, but you’re also a douche.</p><p><strong>Note that I’m not saying that you should answer every question you find. I don’t do it myself if that question can be answered with a simple google search. But don’t expect people to help you all the time because the person on the other side can be a douche just like you.</strong></p>",
                "url": "http://localhost:4000/post/so-you're-a-webdeveloper.-where's-your-digital-footprint/",
                
                
                "categories": ["life","rant","web","Webdev"],                
                
                "tags": ["life,rant,web,Webdev"],
                "date_published": "2012-12-20T00:00:00+00:00",
                "date_modified": "2012-12-20T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "I Used To Be A Blogger But Then I Took An Arrow To The Knee",
                "content_text": "My fellow readers, you probably didn’t noticed but I’ve been off the grid for the last 2 or 3 weeks. I had a minor problem with my knee. My real knee, not my skyrim knee. Therefore, I wasn’t able to blog much for the past weeks. Or even try new things to blog about.Ironically I made a new skyrim character during the past two weeks and I played a lot of xbox. But hey, I’m back to business now and it’s time to start over.I’m planing a screencast series and I also have a few articles lined up. I’m excited about it. What about you?I hope you’re still on the other side of the Interwebs waiting for my dumps of information.",
                "content_html": "<p>My fellow readers, you probably didn’t noticed but I’ve been off the grid for the last 2 or 3 weeks. I had a minor problem with my knee. My real knee, not my skyrim knee. Therefore, I wasn’t able to blog much for the past weeks. Or even try new things to blog about.</p><p>Ironically I made a new skyrim character during the past two weeks and I played a lot of xbox. But hey, I’m back to business now and it’s time to start over.</p><p>I’m planing a screencast series and I also have a few articles lined up. I’m excited about it. What about you?</p><p>I hope you’re still on the other side of the Interwebs waiting for my dumps of information.</p>",
                "url": "http://localhost:4000/post/i-used-to-be-a-blogger-but-then-i-took-an-arrow-to-the-knee/",
                
                                
                
                "date_published": "2012-12-14T00:00:00+00:00",
                "date_modified": "2012-12-14T00:00:00+00:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "Composer + Oh-My-Zsh",
                "content_text": "Oh-my-zsh is a community driven framework that you can use to manage your zsh configuration.What about composer?I have a blog you know? I write stuff from time to time. Keep up, Internet.The plugin!This plugin is quite simple actually. It gives you auto-complete and a bunch of useful aliases:\tc = 'composer'\tc  for autcomplete\tcsu = 'composer self-update'\tcu = 'composer update'\tci = 'composer install'\tccp = 'composer create-project'\tcget = installs composer on the current pathIf you’re looking for the composer commands you can see those here.To add the plugin just make sure you’re running the latest version of oh-my-zsh then edit your .zshrc file and add the composer plugin to the list of your active plugins.There, done!",
                "content_html": "<p>Oh-my-zsh is a community driven framework that you can use to manage your zsh configuration.</p><p><strong>What about composer?</strong>I have a blog you know? I write stuff from time to time. Keep up, Internet.</p><!--more--><p><strong>The plugin!</strong>This plugin is quite simple actually. It gives you auto-complete and a bunch of useful aliases:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\tc = 'composer'\tc  for autcomplete\tcsu = 'composer self-update'\tcu = 'composer update'\tci = 'composer install'\tccp = 'composer create-project'\tcget = installs composer on the current path</code></pre></div></div><p>If you’re looking for the composer commands you can see those <a href=\"http://getcomposer.org/doc/03-cli.md\">here</a>.</p><p>To add the plugin just make sure you’re running the latest version of oh-my-zsh then edit your .zshrc file and add the composer plugin to the list of your active plugins.</p><p>There, done!</p>",
                "url": "http://localhost:4000/post/composer-+-oh-my-zsh/",
                
                
                "categories": ["composer","my-zsh","php","zsh"],                
                
                "tags": ["composer,my-zsh,php,zsh"],
                "date_published": "2012-11-23T00:00:00+00:00",
                "date_modified": "2012-11-23T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Ghost In The Wires",
                "content_text": "I’ve been meaning to read this book for a while. I was also postponing that start because I knew one thing - as soon I would start reading I was not going to stop (I was right).First don’t be afraid, even if you don’t have any knowledge of networking, hacking or something like that you’ll be alright reading this. But still, if you have such skills, don’t worry, the book is entertaining and amazing either way.The Mitnick’s story is just mind blowing.By Kevin D. MitnickMy rating: 5 of 5 stars",
                "content_html": "<p>I’ve been meaning to read this book for a while. I was also postponing that start because I knew one thing - as soon I would start reading I was not going to stop (I was right).</p><p>First don’t be afraid, even if you don’t have any knowledge of networking, hacking or something like that you’ll be alright reading this. But still, if you have such skills, don’t worry, the book is entertaining and amazing either way.</p><!--more--><p>The Mitnick’s story is just mind blowing.</p><p>By Kevin D. Mitnick</p><p>My rating: 5 of 5 stars</p>",
                "url": "http://localhost:4000/post/ghost-in-the-wires/",
                
                                
                
                "date_published": "2012-11-20T00:00:00+00:00",
                "date_modified": "2012-11-20T00:00:00+00:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "Codeigniter wiki was awesome!",
                "content_text": "One of the best things about using Codeigniter is obviously the community and how easy it is to find solutions to your problems. You have a lot of options, the IRC channel, the forums, the awesome documentation and you had the wiki.Well codeigniter moved all the code from bitbucket to github and that was awesome. However, ElisLab always had their own wiki. People used it a lot, adding libraries, helpers and some good advices on how to do stuff with the framework. The sky was the limit and there was no disturbance in the force.Somehow ElisLab decided that it would be great to have everything on github, since every repo can have their own wiki so why not move the wiki to the repository? Sounded like a great thing to do.So they did it, they moved everything to github and there was a disturbance in the force. They forgot to update all the links, move all the attachements and so forth.Result: nothing works.I rarely use the wiki, however, from time to time google sent me there and I was happy about that. Now we don’t have that option anymore and God how annoying it is to click on a link on google thinking that you have the solution to your problems only to see that link is going nowhere.",
                "content_html": "<p>One of the best things about using Codeigniter is obviously the community and how easy it is to find solutions to your problems. You have a lot of options, the IRC channel, the forums, the awesome documentation and you had the wiki.</p><p>Well codeigniter moved all the code from bitbucket to github and that was awesome. However, ElisLab always had their own wiki. People used it a lot, adding libraries, helpers and some good advices on how to do stuff with the framework. The sky was the limit and there was no disturbance in the force.<!--more-->Somehow ElisLab decided that it would be great to have everything on github, since every repo can have their own wiki so why not move the wiki to the repository? Sounded like a great thing to do.</p><p>So they did it, they moved everything to github and there was a disturbance in the force. They forgot to update all the links, move all the attachements and so forth.</p><p>Result: nothing works.</p><p>I rarely use the wiki, however, from time to time google sent me there and I was happy about that. Now we don’t have that option anymore and God how annoying it is to click on a link on google thinking that you have the solution to your problems only to see that link is going nowhere.</p>",
                "url": "http://localhost:4000/post/codeigniter-wiki-was-awesome/",
                
                
                "categories": ["ci","codeigniter","php","rant"],                
                
                "tags": ["ci,codeigniter,php,rant"],
                "date_published": "2012-11-19T00:00:00+00:00",
                "date_modified": "2012-11-19T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "To Hmvc Or Not To Hmvc",
                "content_text": "I’ve been trying some stuff out on Laravel 3 and also Laravel 4. One thing that I like about laravel 3 is the use of bundles. Making it easy to re-use your code, which makes the application modular and so forth.While in Codeigniter I never missed this feature, well at least not until I had a taste of what it really was using other frameworks. Now I think I’m going to try and use the HMVC pattern with Codeigniter.When I first made my research I ended up here: codeigniter modular extensions hmvc after reading the wiki and talking about it with the folks at #codeigniter (Freenode) I think this is the way to go.So what is this HMVC thing?Modular HMVC means modular MVC triads. Modular Separation and Modular Extensions allows related controllers, models, libraries, views, etc. to be grouped together in module directories and used like a mini application. But, Modular Extensions goes one step further and allows those modules to …talk“ to each other. You can get controller output without having to go out through the http interface again.I think on my next project I’m going to stop using sparks and MVC. I shall embrace composer and HMVC. Until now I’ve been using composer and sparks at the same time but that’s gotta stop.",
                "content_html": "<p>I’ve been trying some stuff out on Laravel 3 and also Laravel 4. One thing that I like about laravel 3 is the use of bundles. Making it easy to re-use your code, which makes the application modular and so forth.</p><p>While in Codeigniter I never missed this feature, well at least not until I had a taste of what it really was using other frameworks. Now I think I’m going to try and use the HMVC pattern with Codeigniter.</p><p>When I first made my research I ended up here: codeigniter modular extensions hmvc after reading the wiki and talking about it with the folks at #codeigniter (Freenode) I think this is the way to go.</p><!--more--><p><strong>So what is this HMVC thing?</strong></p><p>Modular HMVC means modular MVC triads. Modular Separation and Modular Extensions allows related controllers, models, libraries, views, etc. to be grouped together in module directories and used like a mini application. But, Modular Extensions goes one step further and allows those modules to …talk“ to each other. You can get controller output without having to go out through the http interface again.</p><p>I think on my next project I’m going to stop using sparks and MVC. I shall embrace composer and HMVC. Until now I’ve been using composer and sparks at the same time but that’s gotta stop.</p>",
                "url": "http://localhost:4000/post/to-hmvc-or-not-to-hmvc/",
                
                                
                
                "date_published": "2012-11-18T00:00:00+00:00",
                "date_modified": "2012-11-18T00:00:00+00:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "Pagodabox FTW",
                "content_text": "I know, this is going to sound like a promotion post. Guess what, it is. I’m hosting my website (marcomonteiro.net) there for free so I guessed this was the least I could do for them.So what so great about it?  It’s not hosting, it’s a hosting framework.  Priced based on monthly usage.  Deployment of apps through a Git-based system.  It’s beautiful.  Scalable.  Completely free for open source projects.As you can see since you pay depending on the resources you’re using, for a website like mine that is just html and I don’t really have many visits, most of them are here on tumblr I don’t even need a paid account.If you’re looking for a hosting at the moment, give it a go. For you and your clients.Awesome right?",
                "content_html": "<p>I know, this is going to sound like a promotion post. Guess what, it is. I’m hosting my website (marcomonteiro.net) there for free so I guessed this was the least I could do for them.So what so great about it?<!--more--></p><ul>  <li>It’s not hosting, it’s a hosting framework.</li>  <li>Priced based on monthly usage.</li>  <li>Deployment of apps through a Git-based system.</li>  <li>It’s beautiful.</li>  <li>Scalable.</li>  <li>Completely free for open source projects.</li></ul><p>As you can see since you pay depending on the resources you’re using, for a website like mine that is just html and I don’t really have many visits, most of them are here on tumblr I don’t even need a paid account.</p><p>If you’re looking for a hosting at the moment, give it a go. For you and your clients.</p><p>Awesome right?</p>",
                "url": "http://localhost:4000/post/pagodabox-ftw/",
                
                
                "categories": ["hosting","tips"],                
                
                "tags": ["hosting,tips"],
                "date_published": "2012-11-16T00:00:00+00:00",
                "date_modified": "2012-11-16T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Yoda Conditions",
                "content_text": "\tif  ( 5 == count)Lately I picked up on this thing called Yoda Conditions. I started using this on a new project I’ve been working on. First it was a bit odd I must say, but once I got into it boy do I love to declare my conditions like this.The big upside from this is that when you’re reading the code you actually see the expected result first. You can actually see that on the image example.The term “Yoda Conditions” was coined by zneak a stackoverflow user.",
                "content_html": "<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\tif  ( 5 == count)</code></pre></div></div><p>Lately I picked up on this thing called Yoda Conditions. I started using this on a new project I’ve been working on. First it was a bit odd I must say, but once I got into it boy do I love to declare my conditions like this.</p><p>The big upside from this is that when you’re reading the code you actually see the expected result first. You can actually see that on the image example.</p><p>The term “Yoda Conditions” was coined by <a href=\"http://stackoverflow.com/users/251153/zneak\">zneak</a> a stackoverflow user.</p>",
                "url": "http://localhost:4000/post/yoda-conditions/",
                
                                
                
                "date_published": "2012-11-14T00:00:00+00:00",
                "date_modified": "2012-11-14T00:00:00+00:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "The \"go rogue\" philosophy",
                "content_text": "I’ve been meaning to write this post for a long time now. The problem was I never quite find the right words to do it.The ”go rogue” philosophy is something that people follow every-time they want something to change. See it as a way to fight the system.Imagine you’re told to do something, something that you know is wrong and there’s a lot of better ways to do it. You have three options when that happens:  You can shut up and do as you’re told.  You can try to make them change their minds into doing the right thing.  You can do the right thing either way.  Obviously you should only jump into option number 3 if the second is not an option anymore.*Let’s just say there’s consequences to each one of the roads you take. The first one, will end up biting you in the ass later. Because the more likely thing to happen is you having to do everything again because they realized that you’re right in the middle of the process.The second option can also have some consequences. You do it a lot of times and you’ll end up being seen as the lone wolf that is always against the system. Hence if you just jump into option two you’re discrediting yourself. People will think that you’re being against the system just because you don’t care or are frustrated about something else.So the best thing is to try and balance the second and third options. When you have the time to do the right thing and no time to argue with your team during the process just go for the third option and don’t thing about it. If you have that time, and you are sure you can change everyone’s minds so try and do it. That way you don’t have to do this ever again. At least on the subject you’re discussing.So going rogue doesn’t mean to fight against the system for no reason. Is fighting for what you think is right and better for the team. But most of all, it’s about saving your ass from decisions that will make you re-do stuff a countless number of times.",
                "content_html": "<p>I’ve been meaning to write this post for a long time now. The problem was I never quite find the right words to do it.</p><p>The ”go rogue” philosophy is something that people follow every-time they want something to change. See it as a way to fight the system.Imagine you’re told to do something, something that you know is wrong and there’s a lot of better ways to do it. You have three options when that happens:<!--more--></p><ul>  <li>You can shut up and do as you’re told.</li>  <li>You can try to make them change their minds into doing the right thing.</li>  <li>You can do the right thing either way.</li>  <li>Obviously you should only jump into option number 3 if the second is not an option anymore.*Let’s just say there’s consequences to each one of the roads you take. The first one, will end up biting you in the ass later. Because the more likely thing to happen is you having to do everything again because they realized that you’re right in the middle of the process.</li></ul><p>The second option can also have some consequences. You do it a lot of times and you’ll end up being seen as the lone wolf that is always against the system. Hence if you just jump into option two you’re discrediting yourself. People will think that you’re being against the system just because you don’t care or are frustrated about something else.</p><p>So the best thing is to try and balance the second and third options. When you have the time to do the right thing and no time to argue with your team during the process just go for the third option and don’t thing about it. If you have that time, and you are sure you can change everyone’s minds so try and do it. That way you don’t have to do this ever again. At least on the subject you’re discussing.</p><p>So going rogue doesn’t mean to fight against the system for no reason. Is fighting for what you think is right and better for the team. But most of all, it’s about saving your ass from decisions that will make you re-do stuff a countless number of times.</p>",
                "url": "http://localhost:4000/post/the-go-rogue-philosophy/",
                
                
                "categories": ["experience","life","motivation","pep-talk","thoughts","Webdev"],                
                
                "tags": ["experience,life,motivation,pep-talk,thoughts,Webdev"],
                "date_published": "2012-11-03T00:00:00+00:00",
                "date_modified": "2012-11-03T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Community is a Beautiful Thing by @machuga",
                "content_text": "Today I witnessed a beautiful thing emerge from an awful situation.I started off the day by hearing from my buddy, Mark Provan, that the offer to continue at his internship had been withdrawn due to financial complications at the company.  Without delving into Mark’s personal life, he was relying on this job to maintain his way of life and was rather (understandably) upset by the whole ordeal.  I must say I’m astounded that he never lost his cool and kept good spirits about it despite being rather stressed.In an effort to secure funds for he and his girlfriend he reached out to the Forrst community for help in locating any freelance work, job positions, or advice people could offer.  Just minutes after Mark tweeted about his post, Forrst retweeted him, instantly boosting Mark’s morale.Within an hour or two, Mark had several replies offering advice, help, and positions.  He almost had an entire novel of help and advice written by my friend and coworker, Jon-Paul Lussier (t4nkd).  By the time he left work today he was pretty positive he was going with one of the offers.I was outright astounded how awesome people, and the community as a whole, responded to a fellow member in need.  Mark is an great and humble guy and really it couldn’t have happened to a better person.  I just wanted to make sure that this display of community and helpfulness was not completely overlooked by the masses, and I could at least spread it to my followers on twitter and visitors to my blog.  This is what a community should be, and am incredibly proud of what I witnessed today.Thank you, everyone :)",
                "content_html": "<p>Today I witnessed a beautiful thing emerge from an awful situation.</p><p>I started off the day by hearing from my buddy, Mark Provan, that the offer to continue at his internship had been withdrawn due to financial complications at the company.  Without delving into Mark’s personal life, he was relying on this job to maintain his way of life and was rather (understandably) upset by the whole ordeal.  I must say I’m astounded that he never lost his cool and kept good spirits about it despite being rather stressed.<!--more-->In an effort to secure funds for he and his girlfriend he reached out to the Forrst community for help in locating any freelance work, job positions, or advice people could offer.  Just minutes after Mark tweeted about his post, Forrst retweeted him, instantly boosting Mark’s morale.</p><p>Within an hour or two, Mark had several replies offering advice, help, and positions.  He almost had an entire novel of help and advice written by my friend and coworker, Jon-Paul Lussier (t4nkd).  By the time he left work today he was pretty positive he was going with one of the offers.</p><p>I was outright astounded how awesome people, and the community as a whole, responded to a fellow member in need.  Mark is an great and humble guy and really it couldn’t have happened to a better person.  I just wanted to make sure that this display of community and helpfulness was not completely overlooked by the masses, and I could at least spread it to my followers on twitter and visitors to my blog.  This is what a community should be, and am incredibly proud of what I witnessed today.</p><p>Thank you, everyone :)</p>",
                "url": "http://localhost:4000/post/community-is-a-beautiful-thing-by-@machuga/",
                
                
                "categories": ["community","jobs"],                
                
                "tags": ["community,jobs"],
                "date_published": "2012-10-30T00:00:00+00:00",
                "date_modified": "2012-10-30T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Untested reinvention? Are you sure?",
                "content_text": "There’s one thing that has been bothering me a lot lately. It really “grinds my gears” when web-designers try to reinvent concepts that are well founded and tested. Let’s get one thing out of the way, I’m not against reinvention. But one shouldn’t just reinvent with the only purpose of being different.Why am I writing about this in the first place? Well last week I tweeted this:  Webdesigners! A tag should look like a select tag. Why do you always try to re-invent the damn thing?Oct12, 2012I tweeted this because I was kinda fed up with all the selection boxes that looked just like buttons until you click then. When you do, instead of being taken to another page or something being submitted like any other button does. No, you now have more options. People even go to the trouble of making a fake select that triggers the original hidden select.So I’m writing this post because I need to explain my rant on twitter a bit better.That tweet wasn’t about selects obviously, I was just explaining my frustration on how some web-designers are doing their work.I’m all about innovation, I think the web has been evolving amazingly well since I know it. But all those changes happened for a reason. Most of them happened because people understood how the users where behaving inside the applications we built for them. If those changes are accepted by the users then they are moving one step forward to becoming standards. However, these days most “changes” are just trends. Worst than that, webdesigners test their “new” concepts in real life, with real users, without making some tests on a controlled environment first. You know, basic usability. Let’s see one example.Forget about the looks of it and look at this structure and tell me if you don’t see this everywhere? Menu on top, the freaking slideshow and 3 or 4 columns of content at the bottom.First let’s talk about the slideshow seriously, web makers. We should know by now that our users don’t want to wait for one image to slide every 5 seconds. Why? Because people these days are impatient, they want everything here and now. They hate the wait. Forget about putting a next and prev buttons in your slideshow, if that slideshow doen’t have a specific and well defined purpose the user will not use them. But no, people continue to reinvent the slideshow navigation. Arrows, bullets, numbers, random click… you name it.Then there’s the 3 columns of random meaningless text that actually points to pointless places. At least there’s a pattern here (pointless text =&gt; pointless places). I bet you that in most cases the contacts are not even one of those columns. There’s actually statistics that say that it’s easier to find someone’s contact by using google than that person/company’s website.What’s my point here?My point is: webdesigners have to start making a bit more effort when doing their work; they need to design stuff that works first and that actually needs to exist, then think about the looks of it. Most of all, if you’re changing a core element of the web make sure that the user is going to recognize it for its affordance. Make some tests, and see how the users react to that element.",
                "content_html": "<p>There’s one thing that has been bothering me a lot lately. It really “grinds my gears” when web-designers try to reinvent concepts that are well founded and tested. Let’s get one thing out of the way, I’m not against reinvention. But one shouldn’t just reinvent with the only purpose of being different.<!--more-->Why am I writing about this in the first place? Well last week I tweeted this:</p><blockquote>  <p>Webdesigners! A tag should look like a select tag. Why do you always try to re-invent the damn thing?Oct12, 2012</p></blockquote><p>I tweeted this because I was kinda fed up with all the selection boxes that looked just like buttons until you click then. When you do, instead of being taken to another page or something being submitted like any other button does. No, you now have more options. People even go to the trouble of making a fake select that triggers the original hidden select.</p><p>So I’m writing this post because I need to explain my rant on twitter a bit better.</p><p>That tweet wasn’t about selects obviously, I was just explaining my frustration on how some web-designers are doing their work.</p><p>I’m all about innovation, I think the web has been evolving amazingly well since I know it. But all those changes happened for a reason. Most of them happened because people understood how the users where behaving inside the applications we built for them. If those changes are accepted by the users then they are moving one step forward to becoming standards. However, these days most “changes” are just trends. Worst than that, webdesigners test their “new” concepts in real life, with real users, without making some tests on a controlled environment first. You know, basic usability. Let’s see one example.</p><p>Forget about the looks of it and look at this structure and tell me if you don’t see this everywhere? Menu on top, the freaking slideshow and 3 or 4 columns of content at the bottom.</p><p>First let’s talk about the slideshow seriously, web makers. We should know by now that our users don’t want to wait for one image to slide every 5 seconds. Why? Because people these days are impatient, they want everything here and now. They hate the wait. Forget about putting a next and prev buttons in your slideshow, if that slideshow doen’t have a specific and well defined purpose the user will not use them. But no, people continue to reinvent the slideshow navigation. Arrows, bullets, numbers, random click… you name it.</p><p>Then there’s the 3 columns of random meaningless text that actually points to pointless places. At least there’s a pattern here (pointless text =&gt; pointless places). I bet you that in most cases the contacts are not even one of those columns. There’s actually statistics that say that it’s easier to find someone’s contact by using google than that person/company’s website.</p><p>What’s my point here?</p><p>My point is: webdesigners have to start making a bit more effort when doing their work; they need to design stuff that works first and that actually needs to exist, then think about the looks of it. Most of all, if you’re changing a core element of the web make sure that the user is going to recognize it for its affordance. Make some tests, and see how the users react to that element.</p>",
                "url": "http://localhost:4000/post/untested-reinvention-are-you-sure/",
                
                
                "categories": ["rant"],                
                
                "tags": ["rant"],
                "date_published": "2012-10-25T00:00:00+01:00",
                "date_modified": "2012-10-25T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "How To Use Codeigniter Docs Inside Sublime Text 2",
                "content_text": "",
                "content_html": "<iframe src=\"https://player.vimeo.com/video/51850148?color=ffffff\" width=\"100%\" height=\"338\" frameborder=\"0\" webkitallowfullscreen=\"\" mozallowfullscreen=\"\" allowfullscreen=\"\"></iframe>",
                "url": "http://localhost:4000/post/how-to-use-codeigniter-docs-inside-sublime-text-2/",
                
                                
                
                "date_published": "2012-10-20T00:00:00+01:00",
                "date_modified": "2012-10-20T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "How The Internet Will (one Day) Transform Government",
                "content_text": "The open-source world has learned to deal with a flood of new, oftentimes divergent, ideas using hosting services like GitHub — so why can’t governments? In this rousing talk Clay Shirky shows how democracies can take a lesson from the Internet, to be not just transparent but also to draw on the knowledge of all their citizens.Clay Shirky argues that the history of the modern world could be rendered as the history of ways of arguing, where changes in media change what sort of arguments are possible — with deep social and political implications.It did not take long after the rise of the commercial printing press before someone figured out that erotic novels were a good idea. â€¦ It took people another 150 years to even think of the scientific journal.",
                "content_html": "<iframe src=\"http://embed.ted.com/talks/clay_shirky_how_the_internet_will_one_day_transform_government.html\" width=\"100%\" height=\"350\" frameborder=\"0\" scrolling=\"no\" webkitallowfullscreen=\"\" mozallowfullscreen=\"\" allowfullscreen=\"\"></iframe><p>The open-source world has learned to deal with a flood of new, oftentimes divergent, ideas using hosting services like GitHub — so why can’t governments? In this rousing talk Clay Shirky shows how democracies can take a lesson from the Internet, to be not just transparent but also to draw on the knowledge of all their citizens.</p><!--more--><p>Clay Shirky argues that the history of the modern world could be rendered as the history of ways of arguing, where changes in media change what sort of arguments are possible — with deep social and political implications.</p><p>It did not take long after the rise of the commercial printing press before someone figured out that erotic novels were a good idea. â€¦ It took people another 150 years to even think of the scientific journal.</p>",
                "url": "http://localhost:4000/post/how-the-internet-will-(one-day)-transform-government/",
                
                                
                
                "date_published": "2012-10-16T00:00:00+01:00",
                "date_modified": "2012-10-16T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "Php magic methods - The complete guide",
                "content_text": "PHP has a few ‘magic’ methods that you can use in OOP (Object oriented programming). All of them must be identified with two underscore prefix and they act as interceptors that will run then certain required conditions are met. So as you can see these methods are extremely useful.List of magic methodsThe function names __construct(), __destruct(), __call(), __callStatic(), __get(), __set(), __isset(), __unset(), __sleep(), __wakeup(), __toString(), __invoke(), __set_state() and __clone() are magical in PHP classes. You cannot have functions with these names in any of your classes unless you want the magic functionality associated with them.CautionPHP reserves all function names starting with __ as magical. It is recommended that you do not use function names with __  in PHP unless you want some documented magic functionality.__constructor() and __destructor()Classes which have a constructor method call this method on each newly-created object, so it is suitable for any initialization that the object may need before it is used. Opposed to that the destructor method will be called as soon as there are no other references to a particular object, or in any order during the shutdown sequence.class MyDestructableClass {   function __construct() {\t   print \"In constructor\\n\";\t   $this-&gt;name = \"MyDestructableClass\";   }   function __destruct() {\t   print \"Destroying \" . $this-&gt;name . \"\\n\";   }}$obj = new MyDestructableClass();__call() and __callStatic()‘Call’ is triggered when invoking inaccessible methods in an object context. For methods in a static context you should use ‘callStatic’.class MethodTest{\tpublic function __call($name, $arguments)\t{\t\t// Note: value of $name is case sensitive.\t\techo \"Calling object method '$name' \"\t\t\t . implode(', ', $arguments). \"\\n\";\t}\tpublic static function __callStatic($name, $arguments)\t{\t\t// Note: value of $name is case sensitive.\t\techo \"Calling static method '$name' \"\t\t\t . implode(', ', $arguments). \"\\n\";\t}}$obj = new MethodTest;$obj-&gt;runTest('in object context');MethodTest::runTest('in static context');__get(), __set(), __isset() and __unset()‘set’ is run when writing data to inaccessible properties. ‘get’ is utilized for reading data from inaccessible properties. ‘isset’ is triggered by calling isset() or empty() on inaccessible properties. ‘unset’ is invoked when unset() is used on inaccessible properties.class PropertyTest{\t/**  Location for overloaded data.  */\tprivate $data = array();\t/**  Overloading not used on declared properties.  */\tpublic $declared = 1;\t/**  Overloading only used on this when accessed outside the class.  */\tprivate $hidden = 2;\tpublic function __set($name, $value)\t{\t\techo \"Setting '$name' to '$value'\\n\";\t\t$this-&gt;data[$name] = $value;\t}\tpublic function __get($name)\t{\t\techo \"Getting '$name'\\n\";\t\tif (array_key_exists($name, $this-&gt;data)) {\t\t\treturn $this-&gt;data[$name];\t\t}\t\t$trace = debug_backtrace();\t\ttrigger_error(\t\t\t'Undefined property via __get(): ' . $name .\t\t\t' in ' . $trace[0]['file'] .\t\t\t' on line ' . $trace[0]['line'],\t\t\tE_USER_NOTICE);\t\treturn null;\t}\t/**  As of PHP 5.1.0  */\tpublic function __isset($name)\t{\t\techo \"Is '$name' set?\\n\";\t\treturn isset($this-&gt;data[$name]);\t}\t/**  As of PHP 5.1.0  */\tpublic function __unset($name)\t{\t\techo \"Unsetting '$name'\\n\";\t\tunset($this-&gt;data[$name]);\t}\t/**  Not a magic method, just here for example.  */\tpublic function getHidden()\t{\t\treturn $this-&gt;hidden;\t}}You have to be careful with this one, because if you don’t specify __isset() and rely just on __get() while using isset() or empty(), you’re in for some bad time.Note:It is not possible to use overloaded properties in other language  constructs than isset().  This means if empty() is called on  an overloaded property, the overloaded method is  not called.  To workaround that limitation, the overloaded property must be copied into  a local variable in the scope and then be handed to empty().__sleep() and __wakeup()Note:It is not possible for __sleep() to return names of private properties in parent classes. Doing this will result in an E_NOTICE level error. Instead you may use the Serializable interface. The intended use of __sleep() is to commit pending data or perform similar cleanup tasks. Also, the function is useful if you have very large objects which do not need to be saved completely. As for __wakeup() is to reestablish any database connections that may have been lost during serialization and perform other reinitialization tasks.class Connection{\tprotected $link;\tprivate $server, $username, $password, $db;\tpublic function __construct($server, $username, $password, $db)\t{\t\t$this-&gt;server = $server;\t\t$this-&gt;username = $username;\t\t$this-&gt;password = $password;\t\t$this-&gt;db = $db;\t\t$this-&gt;connect();\t}\tprivate function connect()\t{\t\t$this-&gt;link = mysql_connect($this-&gt;server, $this-&gt;username, $this-&gt;password);\t\tmysql_select_db($this-&gt;db, $this-&gt;link);\t}\tpublic function __sleep()\t{\t\treturn array('server', 'username', 'password', 'db');\t}\tpublic function __wakeup()\t{\t\t$this-&gt;connect();\t}}__toString()The __toString() method allows a class to decide how it will react when it is treated like a string. For example, what echo $obj; will print. This method must return a string, as otherwise a fatal E_RECOVERABLE_ERROR level error is emitted.class TestClass{\tpublic $foo;\tpublic function __construct($foo)\t{\t\t$this-&gt;foo = $foo;\t}\tpublic function __toString()\t{\t\treturn $this-&gt;foo;\t}}$class = new TestClass('Hello');echo $class;__invoke()The __invoke() method is called when a script tries to call an object as a function.class CallableClass{\tpublic function __invoke($x)\t{\t\tvar_dump($x);\t}}$obj = new CallableClass;$obj(5);var_dump(is_callable($obj));__set_state()Static object __set_state ( array $properties ) This static method is called for classes exported by var_export() since PHP 5.1.0. The only parameter of this method is an array containing exported properties in the form array(‘property’ =&gt; value, …).class A{\tpublic $var1;\tpublic $var2;\tpublic static function __set_state($an_array) // As of PHP 5.1.0\t{\t\t$obj = new A;\t\t$obj-&gt;var1 = $an_array['var1'];\t\t$obj-&gt;var2 = $an_array['var2'];\t\treturn $obj;\t}}$a = new A;$a-&gt;var1 = 5;$a-&gt;var2 = 'foo';eval('$b = ' . var_export($a, true) . ';'); // $b = A::__set_state(array(\t\t\t\t\t\t\t\t\t\t\t//    'var1' =&gt; 5,\t\t\t\t\t\t\t\t\t\t\t//    'var2' =&gt; 'foo',\t\t\t\t\t\t\t\t\t\t\t// ));__clone()Creating a copy of an object with fully replicated properties is not always the wanted behavior. A good example of the need for copy constructors, is if you have an object which represents a GTK window and the object holds the resource of this GTK window, when you create a duplicate you might want to create a new window with the same properties and have the new object hold the resource of the new window. Another example is if your object holds a reference to another object which it uses and when you replicate the parent object you want to create a new instance of this other object so that the replica has its own separate copy.An object copy is created by using the clone keyword (which calls the object’s __clone() method if possible). An object’s __clone() method cannot be called directly.class SubObject{\tstatic $instances = 0;\tpublic $instance;\tpublic function __construct() {\t\t$this-&gt;instance = ++self::$instances;\t}\tpublic function __clone() {\t\t$this-&gt;instance = ++self::$instances;\t}}class MyCloneable{\tpublic $object1;\tpublic $object2;\tfunction __clone()\t{\t\t// Force a copy of this-&gt;object, otherwise\t\t// it will point to same object.\t\t$this-&gt;object1 = clone $this-&gt;object1;\t}}$obj = new MyCloneable();$obj-&gt;object1 = new SubObject();$obj-&gt;object2 = new SubObject();$obj2 = clone $obj;print(\"Original Object:\\n\");print_r($obj);print(\"Cloned Object:\\n\");print_r($obj2);This is a complete guide for the magic methods in PHP. All the examples are from the php.net website. I hope this can be useful to other PHP developers just starting the world of OOP.",
                "content_html": "<p>PHP has a few ‘magic’ methods that you can use in OOP (Object oriented programming). All of them must be identified with two underscore prefix and they act as interceptors that will run then certain required conditions are met. So as you can see these methods are extremely useful.<!--more--></p><p><strong>List of magic methods</strong></p><p>The function names __construct(), __destruct(), __call(), __callStatic(), __get(), __set(), __isset(), __unset(), __sleep(), __wakeup(), __toString(), __invoke(), __set_state() and __clone() are magical in PHP classes. You cannot have functions with these names in any of your classes unless you want the magic functionality associated with them.</p><p><strong>Caution</strong></p><p>PHP reserves all function names starting with __ as magical. It is recommended that you do not use function names with __  in PHP unless you want some documented magic functionality.</p><p><strong>__constructor() and __destructor()</strong></p><p>Classes which have a constructor method call this method on each newly-created object, so it is suitable for any initialization that the object may need before it is used. Opposed to that the destructor method will be called as soon as there are no other references to a particular object, or in any order during the shutdown sequence.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>class MyDestructableClass {   function __construct() {\t   print \"In constructor\\n\";\t   $this-&gt;name = \"MyDestructableClass\";   }   function __destruct() {\t   print \"Destroying \" . $this-&gt;name . \"\\n\";   }}$obj = new MyDestructableClass();</code></pre></div></div><p><strong>__call() and __callStatic()</strong></p><p>‘Call’ is triggered when invoking inaccessible methods in an object context. For methods in a static context you should use ‘callStatic’.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>class MethodTest{\tpublic function __call($name, $arguments)\t{\t\t// Note: value of $name is case sensitive.\t\techo \"Calling object method '$name' \"\t\t\t . implode(', ', $arguments). \"\\n\";\t}\tpublic static function __callStatic($name, $arguments)\t{\t\t// Note: value of $name is case sensitive.\t\techo \"Calling static method '$name' \"\t\t\t . implode(', ', $arguments). \"\\n\";\t}}$obj = new MethodTest;$obj-&gt;runTest('in object context');MethodTest::runTest('in static context');</code></pre></div></div><p><strong>__get(), __set(), __isset() and __unset()</strong></p><p>‘set’ is run when writing data to inaccessible properties. ‘get’ is utilized for reading data from inaccessible properties. ‘isset’ is triggered by calling isset() or empty() on inaccessible properties. ‘unset’ is invoked when unset() is used on inaccessible properties.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>class PropertyTest{\t/**  Location for overloaded data.  */\tprivate $data = array();\t/**  Overloading not used on declared properties.  */\tpublic $declared = 1;\t/**  Overloading only used on this when accessed outside the class.  */\tprivate $hidden = 2;\tpublic function __set($name, $value)\t{\t\techo \"Setting '$name' to '$value'\\n\";\t\t$this-&gt;data[$name] = $value;\t}\tpublic function __get($name)\t{\t\techo \"Getting '$name'\\n\";\t\tif (array_key_exists($name, $this-&gt;data)) {\t\t\treturn $this-&gt;data[$name];\t\t}\t\t$trace = debug_backtrace();\t\ttrigger_error(\t\t\t'Undefined property via __get(): ' . $name .\t\t\t' in ' . $trace[0]['file'] .\t\t\t' on line ' . $trace[0]['line'],\t\t\tE_USER_NOTICE);\t\treturn null;\t}\t/**  As of PHP 5.1.0  */\tpublic function __isset($name)\t{\t\techo \"Is '$name' set?\\n\";\t\treturn isset($this-&gt;data[$name]);\t}\t/**  As of PHP 5.1.0  */\tpublic function __unset($name)\t{\t\techo \"Unsetting '$name'\\n\";\t\tunset($this-&gt;data[$name]);\t}\t/**  Not a magic method, just here for example.  */\tpublic function getHidden()\t{\t\treturn $this-&gt;hidden;\t}}</code></pre></div></div><p>You have to be careful with this one, because if you don’t specify __isset() and rely just on __get() while using isset() or empty(), you’re in for some bad time.</p><p><strong>Note:</strong></p><p>It is not possible to use overloaded properties in other language  constructs than isset().  This means if empty() is called on  an overloaded property, the overloaded method is  not called.  To workaround that limitation, the overloaded property must be copied into  a local variable in the scope and then be handed to empty().</p><p><strong>__sleep() and __wakeup()</strong></p><p><strong>Note:</strong></p><p>It is not possible for __sleep() to return names of private properties in parent classes. Doing this will result in an E_NOTICE level error. Instead you may use the Serializable interface. The intended use of __sleep() is to commit pending data or perform similar cleanup tasks. Also, the function is useful if you have very large objects which do not need to be saved completely. As for __wakeup() is to reestablish any database connections that may have been lost during serialization and perform other reinitialization tasks.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>class Connection{\tprotected $link;\tprivate $server, $username, $password, $db;\tpublic function __construct($server, $username, $password, $db)\t{\t\t$this-&gt;server = $server;\t\t$this-&gt;username = $username;\t\t$this-&gt;password = $password;\t\t$this-&gt;db = $db;\t\t$this-&gt;connect();\t}\tprivate function connect()\t{\t\t$this-&gt;link = mysql_connect($this-&gt;server, $this-&gt;username, $this-&gt;password);\t\tmysql_select_db($this-&gt;db, $this-&gt;link);\t}\tpublic function __sleep()\t{\t\treturn array('server', 'username', 'password', 'db');\t}\tpublic function __wakeup()\t{\t\t$this-&gt;connect();\t}}</code></pre></div></div><p><strong>__toString()</strong></p><p>The __toString() method allows a class to decide how it will react when it is treated like a string. For example, what echo $obj; will print. This method must return a string, as otherwise a fatal E_RECOVERABLE_ERROR level error is emitted.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>class TestClass{\tpublic $foo;\tpublic function __construct($foo)\t{\t\t$this-&gt;foo = $foo;\t}\tpublic function __toString()\t{\t\treturn $this-&gt;foo;\t}}$class = new TestClass('Hello');echo $class;</code></pre></div></div><p><strong>__invoke()</strong></p><p>The __invoke() method is called when a script tries to call an object as a function.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>class CallableClass{\tpublic function __invoke($x)\t{\t\tvar_dump($x);\t}}$obj = new CallableClass;$obj(5);var_dump(is_callable($obj));</code></pre></div></div><p><strong>__set_state()</strong></p><p>Static object __set_state ( array $properties ) This static method is called for classes exported by var_export() since PHP 5.1.0. The only parameter of this method is an array containing exported properties in the form array(‘property’ =&gt; value, …).</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>class A{\tpublic $var1;\tpublic $var2;\tpublic static function __set_state($an_array) // As of PHP 5.1.0\t{\t\t$obj = new A;\t\t$obj-&gt;var1 = $an_array['var1'];\t\t$obj-&gt;var2 = $an_array['var2'];\t\treturn $obj;\t}}$a = new A;$a-&gt;var1 = 5;$a-&gt;var2 = 'foo';eval('$b = ' . var_export($a, true) . ';'); // $b = A::__set_state(array(\t\t\t\t\t\t\t\t\t\t\t//    'var1' =&gt; 5,\t\t\t\t\t\t\t\t\t\t\t//    'var2' =&gt; 'foo',\t\t\t\t\t\t\t\t\t\t\t// ));</code></pre></div></div><p><strong>__clone()</strong></p><p>Creating a copy of an object with fully replicated properties is not always the wanted behavior. A good example of the need for copy constructors, is if you have an object which represents a GTK window and the object holds the resource of this GTK window, when you create a duplicate you might want to create a new window with the same properties and have the new object hold the resource of the new window. Another example is if your object holds a reference to another object which it uses and when you replicate the parent object you want to create a new instance of this other object so that the replica has its own separate copy.</p><p>An object copy is created by using the clone keyword (which calls the object’s __clone() method if possible). An object’s __clone() method cannot be called directly.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>class SubObject{\tstatic $instances = 0;\tpublic $instance;\tpublic function __construct() {\t\t$this-&gt;instance = ++self::$instances;\t}\tpublic function __clone() {\t\t$this-&gt;instance = ++self::$instances;\t}}class MyCloneable{\tpublic $object1;\tpublic $object2;\tfunction __clone()\t{\t\t// Force a copy of this-&gt;object, otherwise\t\t// it will point to same object.\t\t$this-&gt;object1 = clone $this-&gt;object1;\t}}$obj = new MyCloneable();$obj-&gt;object1 = new SubObject();$obj-&gt;object2 = new SubObject();$obj2 = clone $obj;print(\"Original Object:\\n\");print_r($obj);print(\"Cloned Object:\\n\");print_r($obj2);</code></pre></div></div><p>This is a complete guide for the magic methods in PHP. All the examples are from the php.net website. I hope this can be useful to other PHP developers just starting the world of OOP.</p>",
                "url": "http://localhost:4000/post/php-magic-methods-the-complete-guide/",
                
                
                "categories": ["magic methods","oop","php"],                
                
                "tags": ["magic methods,oop,php"],
                "date_published": "2012-10-07T00:00:00+01:00",
                "date_modified": "2012-10-07T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "The Unexpected Bounce Rate",
                "content_text": "Ever since I moved my blog to tumblr I’ve been keeping a close eye on my analytics account. That’s because there’s a lot of articles out there that don’t say good things about tumblr and its power when it comes to SEO.My blog as been having a fair amount of visits, and for that I must say - Thank you - However, I found something really strange on my analytics page.The average visit duration could go up to 3 minutes, but at the same time I was getting a extremely high percentage of bounce rate, something like 90%.Well, this didn’t feel right, so I looked at my blog trying to find what could be doing this and I think I found the cause.The infine scroll in my homepage. People could be scrolling there for minutes while seeing different content but the url would never change.The way to solve this is quite easy. I just had to write on url the number of the current page the user just “entered”.I don’t have definite proof about this, but I’m pretty sure my bounce rate is getting lower day by day.So, if you use infinite scroll in your website you should always send some kind of feedback in your url regarding the “page” the user is currently on.This post is a small update on my tumblr experience so far.",
                "content_html": "<p>Ever since I moved my blog to tumblr I’ve been keeping a close eye on my analytics account. That’s because there’s a lot of articles out there that don’t say good things about tumblr and its power when it comes to SEO.<!--more-->My blog as been having a fair amount of visits, and for that I must say - Thank you - However, I found something really strange on my analytics page.The average visit duration could go up to 3 minutes, but at the same time I was getting a extremely high percentage of bounce rate, something like 90%.</p><p>Well, this didn’t feel right, so I looked at my blog trying to find what could be doing this and I think I found the cause.</p><p>The infine scroll in my homepage. People could be scrolling there for minutes while seeing different content but the url would never change.</p><p>The way to solve this is quite easy. I just had to write on url the number of the current page the user just “entered”.</p><p>I don’t have definite proof about this, but I’m pretty sure my bounce rate is getting lower day by day.</p><p>So, if you use infinite scroll in your website you should always send some kind of feedback in your url regarding the “page” the user is currently on.</p><p>This post is a small update on my tumblr experience so far.</p>",
                "url": "http://localhost:4000/post/the-unexpected-bounce-rate/",
                
                                
                
                "date_published": "2012-10-04T00:00:00+01:00",
                "date_modified": "2012-10-04T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "The Six Months Rule",
                "content_text": "Last week I had to make some changes into a really old project. The problem was: when I started, I didn’t remember how old the project really was.This was actually my first MVC project using Codeigniter. When I opened the project there was a couple of things that I started missing. First, no version control. Second, no comments whatsoever.Good code vs Bad codeWhen I started reading my code from that time my rate of “WTF per minute” went to the roof.My Models were really small. My Controllers had a lot of repetitive code and my Views were morbidly obese. I actually think some of those views have more logic than my Models and Controllers put together.Should I be ashamed on this?The answer is no. (Well if I was I wouldn’t be writing this blog post in the first place.)Why not?Because of the 6 months rule. The six months rule says that every programer should look at what he was doing 6 months ago and be disgusted about the way he was doing things.That takes us to the point of this post: if you’re a programmer and you look at your code from 6 Months ago and you’re still doing the exact same thing today. Please Stop whatever you’re doing and go learn something new.That was why I was really happy to see that awful project being what it is. Awful. So instead of being ashamed of your awful projects, embrace your awfulness, that just means you’re outgrowing yourself.",
                "content_html": "<p>Last week I had to make some changes into a really old project. The problem was: when I started, I didn’t remember how old the project really was.</p><p>This was actually my first MVC project using Codeigniter. When I opened the project there was a couple of things that I started missing. First, no version control. Second, no comments whatsoever.</p><!--more--><p><img src=\"https://3.bp.blogspot.com/-E2p-EzCysBU/WTfHfuXMVMI/AAAAAAAAADI/bJ1V4Nu2eGUT5l_841zsrkBr9_ZLZ6GrwCLcB/s1600/WTF_per_h.png\" alt=\"wtf mesure\" /></p><p><small><center>Good code vs Bad code</center></small></p><p>When I started reading my code from that time my rate of “WTF per minute” went to the roof.</p><p>My Models were really small. My Controllers had a lot of repetitive code and my Views were morbidly obese. I actually think some of those views have more logic than my Models and Controllers put together.</p><p>Should I be ashamed on this?</p><p>The answer is no. (Well if I was I wouldn’t be writing this blog post in the first place.)</p><p>Why not?</p><p>Because of the 6 months rule. The six months rule says that every programer should look at what he was doing 6 months ago and be disgusted about the way he was doing things.</p><p>That takes us to the point of this post: if you’re a programmer and you look at your code from 6 Months ago and you’re still doing the exact same thing today. Please Stop whatever you’re doing and go learn something new.</p><p>That was why I was really happy to see that awful project being what it is. Awful. So instead of being ashamed of your awful projects, embrace your awfulness, that just means you’re outgrowing yourself.</p>",
                "url": "http://localhost:4000/post/the-six-months-rule/",
                
                                
                
                "date_published": "2012-09-30T00:00:00+01:00",
                "date_modified": "2012-09-30T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "Starting with PHPUnit",
                "content_text": "Last week I told you all about my next set of articles on my blog. My main focus will be PHPUnit and Composer. Not because I’m an expert about the subject, but for the exact opposite â€” I’m learning as I go.Let’s define “the thing” first.PHPUnit is the de-facto standard for unit testing in PHP projects. It provides both a framework that makes the writing of tests easy as well as the functionality to easily run the tests and analyse their results.That take us to another subject. Test Driven Development or TDD.What is TDD?Test-driven development (TDD) is a software development process that relies on the repetition of a very short development cycle: first the developer writes an (initially failing) automated test case that defines a desired improvement or new function, then produces the minimum amount of code to pass that test and finally refactors the new code to acceptable standards.Since last week I showed you how to get started with Composer now is quite easy to install PHPUnit framework into your projects.This is how my composer.json looked like last week.{\t\"require\": {    \t\"kriswallsmith/assetic\": \"*\"\t}}Until recently there was no official PHPUnit package listed at packagist.org, essentially because the author used PEAR and he didn’t believe in the Composer project. However, now we have a official package at Composer.Installing PHPUnitFirst navigate to your project folder and then edit your composer.json file.{\t\"require\": {\t\t\"kriswallsmith/assetic\": \"*\",\t\t\"phpunit/phpunit\": \"3.7.1\"\t}  \t}Since 3.7.1 was the lastest stable release when I wrote this, that’s the version I went with. After editing your composer.json file you just have to run your update Composer command. To do so, in your terminal run:$ php composer updateThis will be the result:  \tLoading composer repositories with package information  \tUpdating dependencies- Installing symfony/yaml (v2.1.2)  Downloading: 100%- Installing phpunit/php-text-template (1.1.2)  Downloading: 100%- Installing phpunit/phpunit-mock-objects (1.2.0)  Downloading: 100%- Installing phpunit/php-timer (1.0.3)  Downloading: 100%- Installing phpunit/php-token-stream (1.1.4)  Downloading: 100%- Installing phpunit/php-file-iterator (1.3.2)  Downloading: 100%- Installing phpunit/php-code-coverage (1.2.2)  Downloading: 100%- Installing phpunit/phpunit (3.7.1)  Downloading: 100%As you can see, Composer is already working for us installing everything it’s needed to work with PHPUnit.This is all there is to know about installing PHPUnit into your projects. On the next issue I’m going to tell you all about the TDD process and after that we’re going to actually start using PHPUnit in a small PHP project.",
                "content_html": "<p>Last week I told you all about my next set of articles on my blog. My main focus will be PHPUnit and Composer. Not because I’m an expert about the subject, but for the exact opposite â€” I’m learning as I go.Let’s define “the thing” first.</p><p>PHPUnit is the de-facto standard for unit testing in PHP projects. It provides both a framework that makes the writing of tests easy as well as the functionality to easily run the tests and analyse their results.</p><p>That take us to another subject. Test Driven Development or TDD.<!--more--></p><p><strong>What is TDD?</strong></p><p>Test-driven development (TDD) is a software development process that relies on the repetition of a very short development cycle: first the developer writes an (initially failing) automated test case that defines a desired improvement or new function, then produces the minimum amount of code to pass that test and finally refactors the new code to acceptable standards.</p><p>Since last week I showed you how to get started with Composer now is quite easy to install PHPUnit framework into your projects.</p><p>This is how my composer.json looked like last week.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{\t\"require\": {    \t\"kriswallsmith/assetic\": \"*\"\t}}</code></pre></div></div><p>Until recently there was no official PHPUnit package listed at packagist.org, essentially because the author used PEAR and he didn’t believe in the Composer project. However, now we have a official package at Composer.</p><p><strong>Installing PHPUnit</strong></p><p>First navigate to your project folder and then edit your composer.json file.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>{\t\"require\": {\t\t\"kriswallsmith/assetic\": \"*\",\t\t\"phpunit/phpunit\": \"3.7.1\"\t}  \t}</code></pre></div></div><p>Since 3.7.1 was the lastest stable release when I wrote this, that’s the version I went with. After editing your composer.json file you just have to run your update Composer command. To do so, in your terminal run:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ php composer update</code></pre></div></div><p><strong>This will be the result:</strong></p>  \tLoading composer repositories with package information  \tUpdating dependencies<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>- Installing symfony/yaml (v2.1.2)  Downloading: 100%- Installing phpunit/php-text-template (1.1.2)  Downloading: 100%- Installing phpunit/phpunit-mock-objects (1.2.0)  Downloading: 100%- Installing phpunit/php-timer (1.0.3)  Downloading: 100%- Installing phpunit/php-token-stream (1.1.4)  Downloading: 100%- Installing phpunit/php-file-iterator (1.3.2)  Downloading: 100%- Installing phpunit/php-code-coverage (1.2.2)  Downloading: 100%- Installing phpunit/phpunit (3.7.1)  Downloading: 100%</code></pre></div></div><p>As you can see, Composer is already working for us installing everything it’s needed to work with PHPUnit.</p><p>This is all there is to know about installing PHPUnit into your projects. On the next issue I’m going to tell you all about the TDD process and after that we’re going to actually start using PHPUnit in a small PHP project.</p>",
                "url": "http://localhost:4000/post/starting-with-phpunit/",
                
                
                "categories": ["composer","php","php-unit","TDD","tests"],                
                
                "tags": ["composer,php,php-unit,TDD,tests"],
                "date_published": "2012-09-25T00:00:00+01:00",
                "date_modified": "2012-09-25T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Starting With Composer",
                "content_text": "I’m just getting started with Composer. I’ve been reading a lot about it and I think it’s the way to go. I don’t know many common developers (like me) that are already using it, but I’m going to give it a go. No more Git articles for you. From now on the two main subjects on my blog will be Composer and Unit Testing, since I decided that’s what I’m going to do next.What is this thing called Composer?Composer is a tool for dependency management in PHP. It allows you to declare the dependent libraries your project needs and it will install them in your project for you.How does that work?Well it’s quite easy. All there is to know actually is that there’s two logical parts involved:  The repository: where all your packages will be stored.  The command line utility: that will help you manage everything.      To install Composer first you have to navigate to your project.      $ cd /path/to/my/project      Then you download Composer into your project\t$ curl -s http://getcomposer.org/installer | phpWell, the first time I tried this I ran into a little trouble. I always got the following message:Some settings on your machine make Composer unable to work properly. Make sure that you fix the issues listed below and run this script again:The detect_unicode setting must be disabled.Add the following to the end of your php.ini:detect_unicode = OffIf you’re not using the native PHP that comes with your system (I’m assuming you’re using a unix based system) and you’re using something like Mamp, Mamp Pro or even Zend Server you probably need to edit your php.ini file to add that line. However, you must check if the path to your php.ini is correct. In my case I had one of those apps installed and it was checking for the native php.ini path.To check this, run the following:\t$ php -i | grep iniThen you can update the correct php.ini. Moving forward.At this point you should have a file called composer.phar in your project root. That is your command line utility. You can check if everything is ok by running the following command:\t$ php composer.pharThat will give you all the available commands.That’s it, that is all you need to know about installing composer into your projects. In the next issue we’ll talk about getting actual packages from http://packagist.org/ and working with them in your projects.For now, browse the following websites:  GetComposer  Packagist",
                "content_html": "<p>I’m just getting started with Composer. I’ve been reading a lot about it and I think it’s the way to go. I don’t know many common developers (like me) that are already using it, but I’m going to give it a go. No more Git articles for you. From now on the two main subjects on my blog will be Composer and Unit Testing, since I decided that’s what I’m going to do next.What is this thing called Composer?</p><p>Composer is a tool for dependency management in PHP. It allows you to declare the dependent libraries your project needs and it will install them in your project for you.<!--more--><strong>How does that work?</strong></p><p>Well it’s quite easy. All there is to know actually is that there’s two logical parts involved:</p><ul>  <li>The repository: where all your packages will be stored.</li>  <li>The command line utility: that will help you manage everything.</li>  <li>    <p>To install Composer first you have to navigate to your project.</p>    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  $ cd /path/to/my/project</code></pre></div>    </div>  </li></ul><p>Then you download Composer into your project</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t$ curl -s http://getcomposer.org/installer | php</code></pre></div></div><p>Well, the first time I tried this I ran into a little trouble. I always got the following message:</p><p>Some settings on your machine make Composer unable to work properly. Make sure that you fix the issues listed below and run this script again:</p><p>The detect_unicode setting must be disabled.</p><p>Add the following to the end of your <code class=\"language-plaintext highlighter-rouge\">php.ini</code>:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>detect_unicode = Off</code></pre></div></div><p>If you’re not using the native PHP that comes with your system (I’m assuming you’re using a unix based system) and you’re using something like Mamp, Mamp Pro or even Zend Server you probably need to edit your php.ini file to add that line. However, you must check if the path to your php.ini is correct. In my case I had one of those apps installed and it was checking for the native php.ini path.</p><p>To check this, run the following:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t$ php -i | grep ini</code></pre></div></div><p>Then you can update the correct php.ini. Moving forward.</p><p>At this point you should have a file called composer.phar in your project root. That is your command line utility. You can check if everything is ok by running the following command:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t$ php composer.phar</code></pre></div></div><p>That will give you all the available commands.</p><p>That’s it, that is all you need to know about installing composer into your projects. In the next issue we’ll talk about getting actual packages from http://packagist.org/ and working with them in your projects.</p><p>For now, browse the following websites:</p><ul>  <li><a href=\"http://getcomposer.org/\">GetComposer</a></li>  <li><a href=\"http://packagist.org/\">Packagist</a></li></ul>",
                "url": "http://localhost:4000/post/starting-with-composer/",
                
                                
                
                "date_published": "2012-09-19T00:00:00+01:00",
                "date_modified": "2012-09-19T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "Are You A Merge Or Rebase Guy",
                "content_text": "I know, by now you read almost every tutorial about how to get started with git. You know how to create your repo, add stuff to it and push to your remote. You started branching and everything is now great. Then you read the term Rebase somewhere and think - who wants that? I have Merge.Well today we talk about the differences between them. Also have in mind that these concepts can be applied to both Git and Mercurial.Merge or Rebase?  As you’re no doubt aware, Git and Mercurial are great at re-integrating divergent lines of development through merging. They have to be, since their design strongly encourages developers to commit changes in parallel in their own distributed environments. Eventually some or all of these commits have to be brought together into a shared graph, and merging and rebasing are two primary ways that let us do that. So which one do you use?  in: sourcetreeapp.comOk let’s start be defining both.MergeJoin two or more development histories together.Incorporates changes from the named commits (since the time their histories diverged from the current branch) into the current branch. This command is used by git pull to incorporate changes from another repository and can be used by hand to merge changes from one branch into another.Assume the following history exists and the current branch is “master”:  A---B---C topic /D---E---F---G masterThen “git merge topic” will replay the changes made on the topic branch since it diverged from master (i.e., E) until its current commit (C) on top of master, and record the result in a new commit along with the names of the two parent commits and a log message from the user describing the changes.RebaseForward-port local commits to the updated upstream head.Assume the following history exists and the current branch is “topic”:      A---B---C topic     /D---E---F---G masterFrom this point, the result of either of the following commands:git rebase mastergit rebase master topicWould be:              A'--B'--C' topic             /D---E---F---G masterIf the upstream branch already contains a change you have made (e.g., because you mailed a patch which was applied upstream), then that commit will be skipped. For example, running git rebase master on the following history (in which A’ and A introduce the same set of changes, but have different committer information):      A---B---C topic     /D---E---A'---F masterwill result in:               B'---C' topic              /D---E---A'---F masterAnd it can get more and more complex than this. But trying to resume what it is to a more simple definition in contrast to Branching.Rebasing unifies the lines of development by re-writing changes from the source branch so that they appear as children of the destination branch effectively pretending that those commits were written on top of the destination branch all along.Pros and consMerging Pros  Simple to use and understand.  Maintains the original context of the source branch.  The commits on the source branch remain separate from other branch commits, provided you don’t perform a fast-forward merge. This separation can be useful in the case of feature branches (remember git-flow?), where you might want to take a feature and merge it into another branch later.  Existing commits on the source branch are unchanged and remain valid; it doesn’t matter if they’ve been shared with others.Merging ConsIf the need to merge arises simply because multiple people are working on the same branch in parallel, the merges don’t serve any useful historic purpose and create clutter.Rebase ProsSimplifies your history.Is the most intuitive and clutter-free way to combine commits from multiple developers in a shared branchRebase ConsSlightly more complex, especially under conflict conditions. Each commit is rebased in order, and a conflict will interrupt the process of rebasing multiple commits. With a conflict, you have to resolve the conflict in order to continue the rebase. SourceTree guides you through this process, but it can still become a bit more complicated.Rewriting of history has ramifications if you’ve previously pushed those commits elsewhere. In Mercurial, you simply cannot push commits that you later intend to rebase, because anyone pulling from the remote will get them. In Git, you may push commits you may want to rebase later (as a backup) but only if it’s to a remote branch that only you use. If anyone else checks out that branch and you later rebase it, it’s going to get very confusing.You decide which one to use and where. It’s up to you, personally I rarely use rebase.Article based on the gitbook.",
                "content_html": "<p>I know, by now you read almost every tutorial about how to get started with git. You know how to create your repo, add stuff to it and push to your remote. You started branching and everything is now great. Then you read the term Rebase somewhere and think - who wants that? I have Merge.</p><p>Well today we talk about the differences between them. Also have in mind that these concepts can be applied to both Git and Mercurial.Merge or Rebase?<!--more--></p><blockquote>  <p>As you’re no doubt aware, Git and Mercurial are great at re-integrating divergent lines of development through merging. They have to be, since their design strongly encourages developers to commit changes in parallel in their own distributed environments. Eventually some or all of these commits have to be brought together into a shared graph, and merging and rebasing are two primary ways that let us do that. So which one do you use?</p></blockquote><blockquote>  <p>in: sourcetreeapp.com</p></blockquote><p>Ok let’s start be defining both.</p><p><strong>Merge</strong></p><p>Join two or more development histories together.</p><p>Incorporates changes from the named commits (since the time their histories diverged from the current branch) into the current branch. This command is used by git pull to incorporate changes from another repository and can be used by hand to merge changes from one branch into another.</p><p>Assume the following history exists and the current branch is “master”:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  A---B---C topic /D---E---F---G master</code></pre></div></div><p>Then “git merge topic” will replay the changes made on the topic branch since it diverged from master (i.e., E) until its current commit (C) on top of master, and record the result in a new commit along with the names of the two parent commits and a log message from the user describing the changes.</p><p><strong>Rebase</strong></p><p>Forward-port local commits to the updated upstream head.</p><p>Assume the following history exists and the current branch is “topic”:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>      A---B---C topic     /D---E---F---G master</code></pre></div></div><p>From this point, the result of either of the following commands:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>git rebase mastergit rebase master topic</code></pre></div></div><p>Would be:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>              A'--B'--C' topic             /D---E---F---G master</code></pre></div></div><p>If the upstream branch already contains a change you have made (e.g., because you mailed a patch which was applied upstream), then that commit will be skipped. For example, running git rebase master on the following history (in which A’ and A introduce the same set of changes, but have different committer information):</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>      A---B---C topic     /D---E---A'---F master</code></pre></div></div><p>will result in:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>               B'---C' topic              /D---E---A'---F master</code></pre></div></div><p>And it can get more and more complex than this. But trying to resume what it is to a more simple definition in contrast to Branching.</p><p>Rebasing unifies the lines of development by re-writing changes from the source branch so that they appear as children of the destination branch effectively pretending that those commits were written on top of the destination branch all along.</p><p><strong>Pros and cons</strong></p><p><strong>Merging Pros</strong></p><ul>  <li>Simple to use and understand.</li>  <li>Maintains the original context of the source branch.</li>  <li>The commits on the source branch remain separate from other branch commits, provided you don’t perform a fast-forward merge. This separation can be useful in the case of feature branches (remember git-flow?), where you might want to take a feature and merge it into another branch later.</li>  <li>Existing commits on the source branch are unchanged and remain valid; it doesn’t matter if they’ve been shared with others.</li></ul><p><strong>Merging Cons</strong></p><p>If the need to merge arises simply because multiple people are working on the same branch in parallel, the merges don’t serve any useful historic purpose and create clutter.Rebase Pros</p><p>Simplifies your history.Is the most intuitive and clutter-free way to combine commits from multiple developers in a shared branchRebase Cons</p><p>Slightly more complex, especially under conflict conditions. Each commit is rebased in order, and a conflict will interrupt the process of rebasing multiple commits. With a conflict, you have to resolve the conflict in order to continue the rebase. SourceTree guides you through this process, but it can still become a bit more complicated.Rewriting of history has ramifications if you’ve previously pushed those commits elsewhere. In Mercurial, you simply cannot push commits that you later intend to rebase, because anyone pulling from the remote will get them. In Git, you may push commits you may want to rebase later (as a backup) but only if it’s to a remote branch that only you use. If anyone else checks out that branch and you later rebase it, it’s going to get very confusing.You decide which one to use and where. It’s up to you, personally I rarely use rebase.</p><p>Article based on the gitbook.</p>",
                "url": "http://localhost:4000/post/are-you-a-merge-or-rebase-guy/",
                
                                
                
                "date_published": "2012-09-18T00:00:00+01:00",
                "date_modified": "2012-09-18T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "Is It Really That Bad That Codeigniter Has A Slow Release Cycle",
                "content_text": "In one of our breaks from the discussion “vi vs emacs” on the IRC Codeigniter channel we ended up discussing the slow release cycle of our favorite framework. There were some who didn’t like that about Codeigniter, but fortunately we had some people in the channel that were able to give some good points about the other side.A lot of people don’t like that codeigniter is not in the cool kids group anymore. Well that’s ok, I bet the community using the framework was not using it just because it was cool (if you’re using it for that reason, you’re doing it wrong).First let’s get some things out of the way. I love working with Codeigniter and I use it for almost all of my projects. But I’m not here to talk back at people that don’t use codeigniter. People should use what is best for them, or to the task they need to complete.Now that we got that out of the way, let’s proceed.If you’re looking for the latest awesome features that you can use with php, Codeigniter is not for you, that’s a fact. If you want that you should look into frameworks like Laravel (I’m actually going to do that myself, I need to learn a framework that I can use for those projects where you get in, do the thing and don’t look at that project for the next 10 years. Then after 10 years you look at it and hate yourself as usual).However, if I have a project that I need to maintain for the next 3 years and I’m going to have to work on a client server and not in one that I chose, I’m definitely going to use Codeigniter. First because the minimum requirement to work with codeigniter on version 3.0 is still PHP 5.2.4 (in a case like this one this is not exactly a bad thing) and secondly, because the release cycle of Codeigniter is slow. This way I don’t have to constantly update the framework on that project and, more than that, I don’t need to worry about stuff like â€” “OMG, another update, will this update break everything?” â€” because normally it does not break your stuff (backwards compatibility is actually a big deal to codeigniter), and if it does, you have to do it once or maybe twice a year. It’s really not that hard.Anyways, what I’m trying to say is that there are a lot of use cases for each framework. These are all things you should consider when you start your project.I’m out with a reference to another blog post about this subject that is way more complete than mine, and makes some good points about the type of developers out there and what should be considered when starting a new project.Phil Sturgeon - Understanding the Circumstance Over and out!",
                "content_html": "<p>In one of our breaks from the discussion “vi vs emacs” on the IRC Codeigniter channel we ended up discussing the slow release cycle of our favorite framework. There were some who didn’t like that about Codeigniter, but fortunately we had some people in the channel that were able to give some good points about the other side.A lot of people don’t like that codeigniter is not in the cool kids group anymore. Well that’s ok, I bet the community using the framework was not using it just because it was cool (if you’re using it for that reason, you’re doing it wrong).<!--more-->First let’s get some things out of the way. I love working with Codeigniter and I use it for almost all of my projects. But I’m not here to talk back at people that don’t use codeigniter. People should use what is best for them, or to the task they need to complete.</p><p>Now that we got that out of the way, let’s proceed.</p><p>If you’re looking for the latest awesome features that you can use with php, Codeigniter is not for you, that’s a fact. If you want that you should look into frameworks like Laravel (I’m actually going to do that myself, I need to learn a framework that I can use for those projects where you get in, do the thing and don’t look at that project for the next 10 years. Then after 10 years you look at it and hate yourself as usual).</p><p>However, if I have a project that I need to maintain for the next 3 years and I’m going to have to work on a client server and not in one that I chose, I’m definitely going to use Codeigniter. First because the minimum requirement to work with codeigniter on version 3.0 is still PHP 5.2.4 (in a case like this one this is not exactly a bad thing) and secondly, because the release cycle of Codeigniter is slow. This way I don’t have to constantly update the framework on that project and, more than that, I don’t need to worry about stuff like â€” “OMG, another update, will this update break everything?” â€” because normally it does not break your stuff (backwards compatibility is actually a big deal to codeigniter), and if it does, you have to do it once or maybe twice a year. It’s really not that hard.</p><p>Anyways, what I’m trying to say is that there are a lot of use cases for each framework. These are all things you should consider when you start your project.</p><p>I’m out with a reference to another blog post about this subject that is way more complete than mine, and makes some good points about the type of developers out there and what should be considered when starting a new project.</p><p><a href=\"http://philsturgeon.co.uk/blog/2012/08/understanding-circumstance\">Phil Sturgeon - Understanding the Circumstance </a></p><p>Over and out!</p>",
                "url": "http://localhost:4000/post/is-it-really-that-bad-that-codeigniter-has-a-slow-release-cycle/",
                
                                
                
                "date_published": "2012-09-16T00:00:00+01:00",
                "date_modified": "2012-09-16T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "Yes, you should be using git-flow",
                "content_text": "I’ve been talking a lot about git these days, and I still have a few articles to do about it. With that in mind today I’m here to talk to you a bit about git-flow.Once again, I’m not here to re-invent the wheel. If someone has good articles about something I’m going to point you there during this process.What is git-flow?In early 2010, Vincent Driessen wrote an article called …A successful Git branching model“ which recommended an approach called git-flow to use git branches in your development cycle. The idea was to standardise branching and merging when developing features, handling releases and managing hot fixes, in order to be consistent and gain the advantages of git’s ‘branchy’ development model. Using many separate branches in Git gives you lots of flexibility, but it can get complex. Adopting a standardised approach has many advantages:      Keep your repository tidier    Keep your procedures clearer    Move between projects more easily with familiar branch structures    Get new developers up to speed more quickly    in: sourcetreeapp.comSummary of the conceptDevelopment branch (usually called ‘develop’) This is your main development branch where all the changes destined for the next release are placed, either by directly committing small changes or by merging other branches (e.g. feature branches) into this branch.Production branch (usually called ‘master’) This branch represents the latest released / deployed codebase. Only updated by merging other branches into it.Feature branches (usually prefixed with ‘feature/’)When you start work on anything non-trivial, you create a feature branch. When finished, you’ll merge this branch back into the development branch to queue it for the next release.Release branches (usually prefixed with ‘release/’)When you’re about to package a new release, you create a release branch from the development branch. You can commit to it during your preparation for a release, and when it’s ready to be deployed, you merge it into both the development branch and the master branch (to indicate that the release has been deployed).Hotfix branches (usually prefixed with ‘hotfix/’) If you need to patch the latest release without picking up new features from the development branch, you can create a hotfix branch from the latest deployed code in master. Once you’ve made your changes, the hotfix branch is then merged back into both the master branch (to update the released version) and the development branch (to make sure the fixes go into the next release too)How to use git-flow?After installing git-flow, you can start a new repository in the current directory or convert an existing one to the new branch structure:\t$ git flow initIt will ask you a bunch of questions, but you probably want to accept the default values:No branches exist yet. Base branches must be created now. \t\tBranch name for production releases: [master] \t\tBranch name for \"next release\" development: [develop] \t\tHow to name your supporting branch prefixes? \t\tFeature branches? [feature/] \t\tRelease branches? [release/] \tHotfix branches? [hotfix/] \t\tSupport branches? [support/] \t\tVersion tag prefix? []Now, simply use Git like you’re used to, but only work on some small features in the develop branch. If you need to work on a bigger feature, just create a feature branch based on develop. Let’s say you want to add a login page:\t$ git flow feature start loginThis will create a new branch called feature/login, based on our develop branch and switches to it. Commit away and after you finish working on the login page, simply finish it:\t$ git flow feature finish loginIt’ll merge feature/login back to develop and delete the feature branch.When you’re feature complete, simply start a release branch â€” again, based on develop â€” to bump the version number and fix the last bugs before releasing:\t$ git flow release start v0.1.0When you finish a release branch, it’ll merge your changes to master and back to develop, so you don’t have to worry about your master being ahead of develop.The last thing that makes git-flow awesome is it’s ability to handle hotfixes. You start and finish a hotfix branch like anything else, but it’s based on master so you can quickly fix it when something’s broken production and merge it back to master and develop using finish.Tutorial by: Jeff KreeftmeijerThis article is basically a roundup. Because I found there was none “small” article that shows both the theory behind git-flow and the actual use of it.For a more information about this check this article.Also, if you don’t want to use git-flow per say, at least use the branching logic behind it.",
                "content_html": "<p>I’ve been talking a lot about git these days, and I still have a few articles to do about it. With that in mind today I’m here to talk to you a bit about git-flow.</p><p>Once again, I’m not here to re-invent the wheel. If someone has good articles about something I’m going to point you there during this process.<!--more--></p><p><strong>What is git-flow?</strong></p><p>In early 2010, Vincent Driessen wrote an article called …A successful Git branching model“ which recommended an approach called git-flow to use git branches in your development cycle. The idea was to standardise branching and merging when developing features, handling releases and managing hot fixes, in order to be consistent and gain the advantages of git’s ‘branchy’ development model. Using many separate branches in Git gives you lots of flexibility, but it can get complex. Adopting a standardised approach has many advantages:</p><blockquote>  <ul>    <li>Keep your repository tidier</li>    <li>Keep your procedures clearer</li>    <li>Move between projects more easily with familiar branch structures</li>    <li>Get new developers up to speed more quickly</li>  </ul>  <p>in: sourcetreeapp.com</p></blockquote><p><strong>Summary of the concept</strong></p><p>Development branch (usually called ‘develop’) This is your main development branch where all the changes destined for the next release are placed, either by directly committing small changes or by merging other branches (e.g. feature branches) into this branch.Production branch (usually called ‘master’) This branch represents the latest released / deployed codebase. Only updated by merging other branches into it.</p><p>Feature branches (usually prefixed with ‘feature/’)When you start work on anything non-trivial, you create a feature branch. When finished, you’ll merge this branch back into the development branch to queue it for the next release.Release branches (usually prefixed with ‘release/’)When you’re about to package a new release, you create a release branch from the development branch. You can commit to it during your preparation for a release, and when it’s ready to be deployed, you merge it into both the development branch and the master branch (to indicate that the release has been deployed).Hotfix branches (usually prefixed with ‘hotfix/’) If you need to patch the latest release without picking up new features from the development branch, you can create a hotfix branch from the latest deployed code in master. Once you’ve made your changes, the hotfix branch is then merged back into both the master branch (to update the released version) and the development branch (to make sure the fixes go into the next release too)</p><p><strong>How to use git-flow?</strong></p><p>After installing git-flow, you can start a new repository in the current directory or convert an existing one to the new branch structure:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t$ git flow init</code></pre></div></div><p>It will ask you a bunch of questions, but you probably want to accept the default values:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>No branches exist yet. Base branches must be created now. \t\tBranch name for production releases: [master] \t\tBranch name for \"next release\" development: [develop] \t\tHow to name your supporting branch prefixes? \t\tFeature branches? [feature/] \t\tRelease branches? [release/] \tHotfix branches? [hotfix/] \t\tSupport branches? [support/] \t\tVersion tag prefix? []</code></pre></div></div><p>Now, simply use Git like you’re used to, but only work on some small features in the develop branch. If you need to work on a bigger feature, just create a feature branch based on develop. Let’s say you want to add a login page:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t$ git flow feature start login</code></pre></div></div><p>This will create a new branch called feature/login, based on our develop branch and switches to it. Commit away and after you finish working on the login page, simply finish it:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t$ git flow feature finish login</code></pre></div></div><p>It’ll merge feature/login back to develop and delete the feature branch.</p><p>When you’re feature complete, simply start a release branch â€” again, based on develop â€” to bump the version number and fix the last bugs before releasing:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t$ git flow release start v0.1.0</code></pre></div></div><p>When you finish a release branch, it’ll merge your changes to master and back to develop, so you don’t have to worry about your master being ahead of develop.</p><p>The last thing that makes git-flow awesome is it’s ability to handle hotfixes. You start and finish a hotfix branch like anything else, but it’s based on master so you can quickly fix it when something’s broken production and merge it back to master and develop using finish.</p><p><em>Tutorial by: Jeff Kreeftmeijer</em></p><p>This article is basically a roundup. Because I found there was none “small” article that shows both the theory behind git-flow and the actual use of it.</p><p>For a more information about this check this <a href=\"http://yakiloo.com/getting-started-git-flow/\">article</a>.</p><p>Also, if you don’t want to use git-flow per say, at least use the branching logic behind it.</p>",
                "url": "http://localhost:4000/post/yes,-you-should-be-using-git-flow/",
                
                
                "categories": ["flow","Git","Version-control"],                
                
                "tags": ["flow,Git,Version-control"],
                "date_published": "2012-09-11T00:00:00+01:00",
                "date_modified": "2012-09-11T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Nothing to do this weekend? Try Git.",
                "content_text": "Over the last month I blogged about a lot of stuff that is related to code versioning in one way or another. I think it’s clear by now that the best tool out there for that is Git (this is just my humble opinion).The post called “Git vs SVN is it really a battle?” created a lot of discussion both on my blog and on forrst and that made me really happy. With all that discussion I noticed something, people that were not using git all said the same thing in one way or another.Git is hard to learn.Well I don’t really agree with that. But now you can learn git in an intuitive way. You don’t even need to setup anything, just fire-up your browser of choice (if that’s Internet Explorer, please kill yourself before the tutorial, it’s the 1st step) and you can start playing around with git.Remember, all the ladies want these days is a Jedi Git master. So Try Git.Other references:  Git Reference  Git Book  Git Immersion  Git Cheat Sheet",
                "content_html": "<p>Over the last month I blogged about a lot of stuff that is related to code versioning in one way or another. I think it’s clear by now that the best tool out there for that is Git (this is just my humble opinion).</p><p>The post called “Git vs SVN is it really a battle?” created a lot of discussion both on my blog and on forrst and that made me really happy. With all that discussion I noticed something, people that were not using git all said the same thing in one way or another.Git is hard to learn.<!--more-->Well I don’t really agree with that. But now you can learn git in an intuitive way. You don’t even need to setup anything, just fire-up your browser of choice (if that’s Internet Explorer, please kill yourself before the tutorial, it’s the 1st step) and you can start playing around with git.</p><p>Remember, all the ladies want these days is a Jedi Git master. So <a href=\"http://www.codeschool.com/courses/try-git\">Try Git</a>.</p><p><strong>Other references:</strong></p><ul>  <li><a href=\"http://gitref.org/index.html\">Git Reference</a></li>  <li><a href=\"http://git-scm.com/doc\">Git Book</a></li>  <li><a href=\"http://gitimmersion.com/lab_01.html\">Git Immersion</a></li>  <li><a href=\"http://rogerdudler.github.com/git-guide/files/git_cheat_sheet.pdf\">Git Cheat Sheet</a></li></ul>",
                "url": "http://localhost:4000/post/nothing-to-do-this-weekend-try-git/",
                
                
                "categories": ["Git","Version-control"],                
                
                "tags": ["Git,Version-control"],
                "date_published": "2012-09-06T00:00:00+01:00",
                "date_modified": "2012-09-06T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "My mistress has a name, its called Laravel",
                "content_text": "That’s right, I finally gave it a go and spent some time with my new mistress. I only played around with it for a few hours and I’m already blogging about it. That’s how cool it is.Laravel is a clean and classy framework for PHP web development. Freeing you from spaghetti code, Laravel helps you create wonderful applications using simple, expressive syntax. Development should be a creative experience that you enjoy, not something that is painful. Enjoy the fresh air.That’s the description you’ll see the first time you get to the Laravel website. And I gotta say, they’re not trying to sell you anything, it is actually like that.So here are my first impressions on it (be advised, I only spent a few hours with it so far).Coming from other frameworksYou know I use Codeigniter on a daily basis, so I come from a framework that pretty much lets you do anything you like. You can even make your application only with controllers. But, that’s the only thing required for the framework to work. However in Laravel you can use it just with routes, no controllers required. That felt a little weird, I must say.But that only showed me how powerful the routes actually are in Laravel.The other thing I still find weird about Laravel is the Manual. The sidebar with parents with closed Childs just doesn’t work for me. I still think Codeigniter has the best Manual out there.The things I’m loving so farThe Template system - Blade.Well let me tell you, I’m loving this template system. First there’s the name Blade love it. It just works, and look how beautiful it is.@if ( $message == 'success' )\tIt was a success!@elseif ( $message == 'error' )\tAn error occurred.@else\tDid it work?@endif@foreach ($comments as $comment)\tThe comment body is .@endforeachNo messy views for you!Eloquent ORMAn ORM is an object-relational mapper, and Laravel has one that you will absolutely love to use. It is named “Eloquent” because it allows you to work with your database objects and relationships using an eloquent and expressive syntax. In general, you will define one Eloquent model for each table in your database.Well the manual says it all. In Codeigniter I only used an object-relational mapper one time. I used PhpActiveRecord and it was great, but it was no Eloquent.Next I’m going to play a bit with bundles, artisan and migrations. I have high expectations for those.I’m not going into more detail for now specially because I need more time to play with it. But for now, what I can tell you is: Takes a bit to get used to some stuff (coming from another framework, if this is your first php framework you should be ok), and it has some awesomeness built in.Loving the experience so far and that’s what really matters in the end of the day, right?",
                "content_html": "<p>That’s right, I finally gave it a go and spent some time with my new mistress. I only played around with it for a few hours and I’m already blogging about it. That’s how cool it is.Laravel is a clean and classy framework for PHP web development. Freeing you from spaghetti code, Laravel helps you create wonderful applications using simple, expressive syntax. Development should be a creative experience that you enjoy, not something that is painful. Enjoy the fresh air.</p><!--more--><p>That’s the description you’ll see the first time you get to the Laravel website. And I gotta say, they’re not trying to sell you anything, it is actually like that.</p><p>So here are my first impressions on it (be advised, I only spent a few hours with it so far).</p><p><strong>Coming from other frameworks</strong></p><p>You know I use Codeigniter on a daily basis, so I come from a framework that pretty much lets you do anything you like. You can even make your application only with controllers. But, that’s the only thing required for the framework to work. However in Laravel you can use it just with routes, no controllers required. That felt a little weird, I must say.</p><p>But that only showed me how powerful the routes actually are in Laravel.</p><p>The other thing I still find weird about Laravel is the Manual. The sidebar with parents with closed Childs just doesn’t work for me. I still think Codeigniter has the best Manual out there.</p><p><strong>The things I’m loving so far</strong></p><p>The Template system - Blade.</p><p>Well let me tell you, I’m loving this template system. First there’s the name Blade love it. It just works, and look how beautiful it is.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>@if ( $message == 'success' )\tIt was a success!@elseif ( $message == 'error' )\tAn error occurred.@else\tDid it work?@endif@foreach ($comments as $comment)\tThe comment body is .@endforeach</code></pre></div></div><p>No messy views for you!</p><p><strong>Eloquent ORM</strong></p><p>An ORM is an object-relational mapper, and Laravel has one that you will absolutely love to use. It is named “Eloquent” because it allows you to work with your database objects and relationships using an eloquent and expressive syntax. In general, you will define one Eloquent model for each table in your database.</p><p>Well the manual says it all. In Codeigniter I only used an object-relational mapper one time. I used PhpActiveRecord and it was great, but it was no Eloquent.</p><p>Next I’m going to play a bit with bundles, artisan and migrations. I have high expectations for those.</p><p>I’m not going into more detail for now specially because I need more time to play with it. But for now, what I can tell you is: Takes a bit to get used to some stuff (coming from another framework, if this is your first php framework you should be ok), and it has some awesomeness built in.</p><p>Loving the experience so far and that’s what really matters in the end of the day, right?</p>",
                "url": "http://localhost:4000/post/my-mistress-has-a-name-its-called-laravel/",
                
                
                "categories": ["frameworks","laravel","php"],                
                
                "tags": ["frameworks,laravel,php"],
                "date_published": "2012-09-04T00:00:00+01:00",
                "date_modified": "2012-09-04T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Codeigniter Handbook Vol. 2 Api Design",
                "content_text": "The CodeIgniter Handbook, a three-volume handbook full to the brim with pragmatic, succinct, useful information from one of the web’s pioneering developers. Learn about the whats &amp; whys of writing cleaner, more concise code. Discover fascinating new techniques that allow you to remove duplication, increase your programming efficiency, and reduce those repetitive tasks. Fall in love with CodeIgniter all over again.In today’s world the focus in web development has firmly shifted from isolated systems to interconnected networks of applications, all talking to each other in real time. CodeIgniter’s flexibility makes it very easy to create Application Programming Interfaces (APIs) and allow your applications to chat to each other.In this book, you’ll learn the principles behind modern RESTful API design as well as a bunch of helpful implementation details, such as how to version your APIs, how to use HTTP to specify content types and how to extend and debug your APIs with useful homegrown tools.I bought the 1st volume on paper when I was at Ciconf2012 UK, since Jamie Rumbelow does so much for the community I think the least I can do is buy his books. So this is what I’m currently reading, the second volume.If you want to buy his book all you have to do is go here and do so. If you can’t afford the paper version the ebook version is quite cheap.",
                "content_html": "<p>The CodeIgniter Handbook, a three-volume handbook full to the brim with pragmatic, succinct, useful information from one of the web’s pioneering developers. Learn about the whats &amp; whys of writing cleaner, more concise code. Discover fascinating new techniques that allow you to remove duplication, increase your programming efficiency, and reduce those repetitive tasks. Fall in love with CodeIgniter all over again.</p><!--more--><p>In today’s world the focus in web development has firmly shifted from isolated systems to interconnected networks of applications, all talking to each other in real time. CodeIgniter’s flexibility makes it very easy to create Application Programming Interfaces (APIs) and allow your applications to chat to each other.</p><p>In this book, you’ll learn the principles behind modern RESTful API design as well as a bunch of helpful implementation details, such as how to version your APIs, how to use HTTP to specify content types and how to extend and debug your APIs with useful homegrown tools.</p><p>I bought the 1st volume on paper when I was at Ciconf2012 UK, since Jamie Rumbelow does so much for the community I think the least I can do is buy his books. So this is what I’m currently reading, the second volume.</p><p>If you want to buy his book all you have to do is go <a href=\"https://efendibooks.com/\">here</a> and do so. If you can’t afford the paper version the ebook version is quite cheap.</p>",
                "url": "http://localhost:4000/post/codeigniter-handbook-vol.-2-api-design/",
                
                                
                
                "date_published": "2012-09-03T00:00:00+01:00",
                "date_modified": "2012-09-03T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "The Tumblr Experience",
                "content_text": "As you may, or may not know I moved my blog from a self hosted wordpress to a tumblr blog. Some may disagree with that, but what the hell it’s done. And now I’m going to tell you how’s my experience with it so far.The Migration ProcessWell this was a bit tricky. One of my requirements for this transition to work was most of all not losing any data. That meant: posts, images, tags and obviously comments.My first let down was that there’s no direct way to simply export from wordpress and then import to tumblr (actually there’s no way of directly export a tumblr blog either).Anyways, after using my google foo for a while I found that there’s a 3rd party app where you can export from blogger to tumblr. By then I made up my mind and tried this:  Export from self hosted wordpress.  Import into dummy blogger blog.  Create the new tumblr blog.  Use this little tool here.I was pretty sure I was going to lose a lot of stuff while doing this, but it was worth trying. After only 20 min of doing this entire process I was amazed.All the images, videos, tags were there. #winning like Mr. Sheen.Migrating the CommentsLet me tell you, the best thing I ever did when I started blogging was choosing Disqus for all my comments. All I had to do was configure my personal domain in my blog settings.And that is also quite easy, as you can see in the following image.As for the comments, all I had to do was follow all the steps on the Disqus settings for migrating a blog from one domain to another and everything was working in minutes (note that my blog was at marcomonteiro.net/blog and now is a sub-domain of marcomonteiro.net).Choosing a templateThis was the easy part, since the tumblr community provides so many great themes. Obviously I had to make some changes to the theme I ended up choosing. Hell, I’m still changing stuff everyday. But that’s another thing I like about tumblr, you can change your theme completely (that’s one thing that wordpress.com does not allow you to do, and that’s why I didn’t went from a self hosted wordpress blog to a wordpress.com blog).Additional featuresI needed my blog to have a few features that tumblr didn’t provide. Stuff like:  Being able to show code properly.  Having social share icons for each post.  Adding ads to the template.  The first one was pretty easy, once I found that you can use embed gists.The second one, was also pretty easy, since there’s a ton of javascript plugins for that on the web. Just pick your poison.Adding ads to my template was pretty easy. At the moment I’m using the amazon ads. And let me tell you, being able to choose the ads for my website is probably the best thing about this amazon service.Things you should consider while using tumblrWell, tumblr is not the best tool ever made when it comes to SEO. But you should be ok if you do the following:  Add your blog to the most used search engines using their webmaster tools.  Always tag your posts.  Edit your template so the post tags can be in your header as meta information.  Always add slugs to your posts.One or two things that I don’t like so much about tumblr  The Android app doesn’t support my Nexus 7 for some reason.  Tumblr needs a better way to manage the drafts and non public posts.  The search script is really bad. You’re only able to search tags and not the entire post. That’s why I end up using Google custom search.  Tumblr should have the possibility of adding categories and tags, not just tags.  That’s it, that’s my tumblr experience for now.Have fun.",
                "content_html": "<p>As you may, or may not know I moved my blog from a self hosted wordpress to a tumblr blog. Some may disagree with that, but what the hell it’s done. And now I’m going to tell you how’s my experience with it so far.<!--more--><strong>The Migration Process</strong></p><p>Well this was a bit tricky. One of my requirements for this transition to work was most of all not losing any data. That meant: posts, images, tags and obviously comments.</p><p>My first let down was that there’s no direct way to simply export from wordpress and then import to tumblr (actually there’s no way of directly export a tumblr blog either).</p><p>Anyways, after using my google foo for a while I found that there’s a 3rd party app where you can export from blogger to tumblr. By then I made up my mind and tried this:</p><ul>  <li>Export from self hosted wordpress.</li>  <li>Import into dummy blogger blog.</li>  <li>Create the new tumblr blog.</li>  <li>Use this little tool <a href=\"http://terrymhung.com/jtran/tumblr/import-blogger-to-tumblr.php\">here</a>.</li></ul><p>I was pretty sure I was going to lose a lot of stuff while doing this, but it was worth trying. After only 20 min of doing this entire process I was amazed.</p><p>All the images, videos, tags were there. #winning like Mr. Sheen.</p><p><strong>Migrating the Comments</strong></p><p>Let me tell you, the best thing I ever did when I started blogging was choosing Disqus for all my comments. All I had to do was configure my personal domain in my blog settings.</p><p>And that is also quite easy, as you can see in the following image.</p><p>As for the comments, all I had to do was follow all the steps on the Disqus settings for migrating a blog from one domain to another and everything was working in minutes (note that my blog was at marcomonteiro.net/blog and now is a sub-domain of marcomonteiro.net).</p><p><strong>Choosing a template</strong></p><p>This was the easy part, since the tumblr community provides so many great themes. Obviously I had to make some changes to the theme I ended up choosing. Hell, I’m still changing stuff everyday. But that’s another thing I like about tumblr, you can change your theme completely (that’s one thing that wordpress.com does not allow you to do, and that’s why I didn’t went from a self hosted wordpress blog to a wordpress.com blog).</p><p><strong>Additional features</strong></p><p><strong>I needed my blog to have a few features that tumblr didn’t provide. Stuff like:</strong></p><ul>  <li>Being able to show code properly.</li>  <li>Having social share icons for each post.</li>  <li>Adding ads to the template.</li>  <li>The first one was pretty easy, once I found that you can use embed gists.</li></ul><p>The second one, was also pretty easy, since there’s a ton of javascript plugins for that on the web. Just pick your poison.</p><p>Adding ads to my template was pretty easy. At the moment I’m using the amazon ads. And let me tell you, being able to choose the ads for my website is probably the best thing about this amazon service.</p><p><strong>Things you should consider while using tumblr</strong></p><p><strong>Well, tumblr is not the best tool ever made when it comes to SEO. But you should be ok if you do the following:</strong></p><ul>  <li>Add your blog to the most used search engines using their webmaster tools.</li>  <li>Always tag your posts.</li>  <li>Edit your template so the post tags can be in your header as meta information.</li>  <li>Always add slugs to your posts.</li></ul><p><strong>One or two things that I don’t like so much about tumblr</strong></p><ul>  <li>The Android app doesn’t support my Nexus 7 for some reason.</li>  <li>Tumblr needs a better way to manage the drafts and non public posts.</li>  <li>The search script is really bad. You’re only able to search tags and not the entire post. That’s why I end up using Google custom search.</li>  <li>Tumblr should have the possibility of adding categories and tags, not just tags.</li>  <li>That’s it, that’s my tumblr experience for now.</li></ul><p>Have fun.</p>",
                "url": "http://localhost:4000/post/the-tumblr-experience/",
                
                                
                
                "date_published": "2012-09-01T00:00:00+01:00",
                "date_modified": "2012-09-01T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "So You Use Dropbox For Version Control You're Awesome",
                "content_text": "If you follow my blog, or are even a casual visitor you know at least 2 tools I use everyday. Codeigniter and Git. I use them for lots of reasons, but most of all because they make my life and the team I work with easier. Moving forward.One thing that I’m constantly doing is trying to improve my foo while using these two tools. Usually I’m on IRC talking with other developers that have the same interests, or just sharing lolcats. But every now and then, a guy shows up while we’re talking about Git and version control. I’m talking about a regular developer, a well intentioned one, that also wants to learn new stuff. But then he says the following:Version control? pff who needs to learn all those commands when I have Dropbox?Dear developer that uses Dropbox for version control, I have questions! (I’m also going to post the normal answers I got while asking this)**Q: **How the hell does that even work?A: “I just work inside my dropbox folder” or “I pointed dropbox to be my local server”.Q: If by a remote chance you have to work with someone else other than yourself, how does that work?A: “I work alone I don’t have to worry about that”.Q: Do you work on your projects inside dropbox? If so, every time you save a file a new version is created in the “Dropbox History”, how do you find that save if you want to rollback?A: “Well I normally just look at a date interval. I know that my change is somewhere between date X and Y”.Q: What do you do if you want to experiment new things on your project without damaging the work already done?A: “I copy the entire project to another folder obviously”.And after that last answer I normally have a minor stroke and get back to watching lolcats.Seriously people, using dropbox like that is just wrong. There’s no other way to look at it. If that makes you happy, keep doing it. Just don’t say it’s awesome. And most of all, don’t call it version control.Have fun.ps: Also check this link to see how serious people about using this method.",
                "content_html": "<p>If you follow my blog, or are even a casual visitor you know at least 2 tools I use everyday. Codeigniter and Git. I use them for lots of reasons, but most of all because they make my life and the team I work with easier. Moving forward.<!--more-->One thing that I’m constantly doing is trying to improve my foo while using these two tools. Usually I’m on IRC talking with other developers that have the same interests, or just sharing lolcats. But every now and then, a guy shows up while we’re talking about Git and version control. I’m talking about a regular developer, a well intentioned one, that also wants to learn new stuff. But then he says the following:</p><p>Version control? pff who needs to learn all those commands when I have Dropbox?</p><p>Dear developer that uses Dropbox for version control, I have questions! (I’m also going to post the normal answers I got while asking this)</p><p>**Q: **How the hell does that even work?</p><p><strong>A:</strong> “I just work inside my dropbox folder” or “I pointed dropbox to be my local server”.</p><p><strong>Q:</strong> If by a remote chance you have to work with someone else other than yourself, how does that work?</p><p><strong>A:</strong> “I work alone I don’t have to worry about that”.</p><p><strong>Q:</strong> Do you work on your projects inside dropbox? If so, every time you save a file a new version is created in the “Dropbox History”, how do you find that save if you want to rollback?</p><p><strong>A:</strong> “Well I normally just look at a date interval. I know that my change is somewhere between date X and Y”.</p><p><strong>Q:</strong> What do you do if you want to experiment new things on your project without damaging the work already done?</p><p><strong>A:</strong> “I copy the entire project to another folder obviously”.</p><p>And after that last answer I normally have a minor stroke and get back to watching lolcats.</p><p>Seriously people, using dropbox like that is just wrong. There’s no other way to look at it. If that makes you happy, keep doing it. Just don’t say it’s awesome. And most of all, don’t call it version control.</p><p>Have fun.</p><p><strong>ps:</strong> Also check this <a href=\"http://stackoverflow.com/questions/8238399/dropbox-as-a-programmers-source-control\">link</a> to see how serious people about using this method.</p>",
                "url": "http://localhost:4000/post/so-you-use-dropbox-for-version-control-you're-awesome/",
                
                                
                
                "date_published": "2012-08-30T00:00:00+01:00",
                "date_modified": "2012-08-30T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "Git vs Svn is it really a battle?",
                "content_text": "Since I wrote that last post on how to update your codeigniter installation with git, I got a question on why use git? (at least this time was why use git, and not why use any kind of version control).Normally I post some of my posts on Forrst, and there was the place the question took place. Take a look:  Marco,  really interesting. We use Codeigniter for our applications. May sound so noob but… Should we always be up to date? It’s secure to update?  I’m one of those that doesn’t use git. We have our own SNV and I can’t still find what is what you guys see in git to not be able to live without it. Can you give a bit of details? :-)So I promised the dude I would blog about this, since the freaking text-area where you comment on Forrst is so damn small.I’ve made some research about this and obviously I’m not the 1st one blogging about this, so I decided to quote some stuff.If you have compelling requirements for a single, certain, master copy of your work, use Subversion. You can do this with Git, so long as there are no slip-ups. But you can’t do anything else with Subversion (slip-ups or no), and …compelling requirements“ like Sarbanes-Oxley are happier with guarantees than possibilities.If you plan to maintain parallel, largely shared but permanently somewhat different lines of the same product, use Git. One common example: perhaps you have a large product that you customize for each customer. The customizations are permanent, and generally not shared among code lines, but most of the code is common to all. Git was designed for just this case (in Git terms, local customizations to the common core, and occasional feature or bug-fix contributions back up-tree).Neither of those? Take your pick, you should be fine with either tool.in: blog.collab.netNo need to clarify this. Let’s do a quick run on the best points of both.Git’s Major Features Over SubversionDistributed Nature (Git was designed from the ground up as a distributed version control system. Being a distributed version control system means that multiple redundant repositories and branching are first class concepts of the tool.)Access Control (Due to being distributed, you inherently do not have to give commit access to other people in order for them to use the versioning features. Instead, you decide when to merge what from whom.)Branch Handling (Branches in Git are a core concept used everyday by every user. In Subversion they are more cumbersome and often used sparingly.)Performance (Git is extremely fast. Since all operations except for push and fetch are local there is no network latency involved)Smaller Space Requirements (Git’s repository and working directory sizes are extremely small when compared to SVN.)Obviously there’s some nice things about SVN too. Let’s see.Subversion’s Major Features Over GitUser Interfaces Maturity (Currently Subversion has a wider range of user interface tools than Git. For example there are SVN plugins available for most popular IDEs. There is a Windows Explorer shell extension. There are a number of native Windows and Mac OS X GUI tools available in ready-to-install packages.)Single Repository (Since Subversion only supports a single repository there is little doubt about where something is stored. Once a user knows the repository URL they can reasonably assume that all materials and all branches related to that project are always available at that location.)Access Controls (Since Subversion has a single central repository it is possible to specify read and write access controls in a single location and have them be enforced across the entire project.)So as you can see they both have their ups and downs. For me I still think Git is way better than SVN. I find it more intuitive/natural to use.This article does not aspire to be final proof of anything, it’s just a collection of stuff I found on the web. Hell, if someone reads this and is not using any kind of version control and starts using it because of it I say - Mission accomplished.Take some time to watch this talk from the great Linus Torvalds about Git. If I can’t convince you about using git he’s the man to do it.",
                "content_html": "<p>Since I wrote that last post on how to update your codeigniter installation with git, I got a question on why use git? (at least this time was why use git, and not why use any kind of version control).<!--more-->Normally I post some of my posts on Forrst, and there was the place the question took place. Take a look:</p><blockquote>  <p>Marco,</p>  <p>really interesting. We use Codeigniter for our applications. May sound so noob but… Should we always be up to date? It’s secure to update?</p>  <p>I’m one of those that doesn’t use git. We have our own SNV and I can’t still find what is what you guys see in git to not be able to live without it. Can you give a bit of details? :-)</p></blockquote><p>So I promised the dude I would blog about this, since the freaking text-area where you comment on Forrst is so damn small.</p><p>I’ve made some research about this and obviously I’m not the 1st one blogging about this, so I decided to quote some stuff.</p><p>If you have compelling requirements for a single, certain, master copy of your work, use Subversion. You can do this with Git, so long as there are no slip-ups. But you can’t do anything else with Subversion (slip-ups or no), and …compelling requirements“ like Sarbanes-Oxley are happier with guarantees than possibilities.If you plan to maintain parallel, largely shared but permanently somewhat different lines of the same product, use Git. One common example: perhaps you have a large product that you customize for each customer. The customizations are permanent, and generally not shared among code lines, but most of the code is common to all. Git was designed for just this case (in Git terms, local customizations to the common core, and occasional feature or bug-fix contributions back up-tree).Neither of those? Take your pick, you should be fine with either tool.in: blog.collab.net</p><p>No need to clarify this. Let’s do a quick run on the best points of both.</p><p>Git’s Major Features Over Subversion</p><p>Distributed Nature (Git was designed from the ground up as a distributed version control system. Being a distributed version control system means that multiple redundant repositories and branching are first class concepts of the tool.)Access Control (Due to being distributed, you inherently do not have to give commit access to other people in order for them to use the versioning features. Instead, you decide when to merge what from whom.)Branch Handling (Branches in Git are a core concept used everyday by every user. In Subversion they are more cumbersome and often used sparingly.)Performance (Git is extremely fast. Since all operations except for push and fetch are local there is no network latency involved)Smaller Space Requirements (Git’s repository and working directory sizes are extremely small when compared to SVN.)Obviously there’s some nice things about SVN too. Let’s see.</p><p>Subversion’s Major Features Over Git</p><p>User Interfaces Maturity (Currently Subversion has a wider range of user interface tools than Git. For example there are SVN plugins available for most popular IDEs. There is a Windows Explorer shell extension. There are a number of native Windows and Mac OS X GUI tools available in ready-to-install packages.)Single Repository (Since Subversion only supports a single repository there is little doubt about where something is stored. Once a user knows the repository URL they can reasonably assume that all materials and all branches related to that project are always available at that location.)Access Controls (Since Subversion has a single central repository it is possible to specify read and write access controls in a single location and have them be enforced across the entire project.)So as you can see they both have their ups and downs. For me I still think Git is way better than SVN. I find it more intuitive/natural to use.</p><p>This article does not aspire to be final proof of anything, it’s just a collection of stuff I found on the web. Hell, if someone reads this and is not using any kind of version control and starts using it because of it I say - Mission accomplished.</p><p>Take some time to watch this talk from the great Linus Torvalds about Git. If I can’t convince you about using git he’s the man to do it.</p><iframe width=\"600\" height=\"450\" src=\"//www.youtube.com/embed/4XpnKHJAok8\" frameborder=\"0\" allowfullscreen=\"\"></iframe>",
                "url": "http://localhost:4000/post/git-vs-svn-is-it-really-a-battle/",
                
                
                "categories": ["Git","Version-control"],                
                
                "tags": ["Git,Version-control"],
                "date_published": "2012-08-27T00:00:00+01:00",
                "date_modified": "2012-08-27T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Thank You!",
                "content_text": "I’m just here to tell you that the Codeigniter Snippets package for Sublime Text 2 just reached the 6400+ installs. This couldn’t be possible without the awesome community that Codeigniter has. Therefore I think it’s appropriate to thank everyone that supported the project, and most of all, the contributors.Without any delay I added a list of all the contributors to the readme file. So if by any change you happen to contribute to the project in the future, be sure to add your name to the readme.Once again, thank you.Github: ci-snippets",
                "content_html": "<p>I’m just here to tell you that the Codeigniter Snippets package for Sublime Text 2 just reached the 6400+ installs. This couldn’t be possible without the awesome community that Codeigniter has. Therefore I think it’s appropriate to thank everyone that supported the project, and most of all, the contributors.</p><p>Without any delay I added a list of all the contributors to the readme file. So if by any change you happen to contribute to the project in the future, be sure to add your name to the readme.</p><p>Once again, thank you.</p><p>Github: <a href=\"https://github.com/mpmont/ci-snippets\">ci-snippets</a></p>",
                "url": "http://localhost:4000/post/thank-you!/",
                
                                
                
                "date_published": "2012-08-25T00:00:00+01:00",
                "date_modified": "2012-08-25T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "Codeigniter Pagination Re Use Query Strings",
                "content_text": "A few months ago I had a problem. I was paginating some results based on some data the user had provided. So I needed to be able to pass that data from page to page during the pagination process. First I set to read the Codeigniter documentation to see if it was possible to do that with the pagination library.Turns out I could if I set up that data to be a query string and save it in my suffix param. However this solution had a problem. Every-time the user clicked the first or last link on the pagination the query string would disappear.So I searched some more, and found something even better. The new version of the pagination Library (3.0) already had that feature. So if you ever need it and don’t want to wait for the next version of Codeigniter you just have to do the following.Download the version 3.0 of the Pagination Library here.Extend your current version of the pagination Library with the one that you just downloaded. (see how to do that here)As you can see the pagination now has one more param than before. It’s called reuse_query_string. And just by setting that to TRUE, you can now use both uri segments and query strings in your pagination.protected $base_url\t\t\t= ''; // The page we are linking toprotected $prefix\t\t\t= ''; // A custom prefix added to the path.protected $suffix\t\t\t= ''; // A custom suffix added to the path.protected $total_rows\t\t\t= 0; // Total number of items (database results)protected $per_page\t\t\t= 10; // Max number of items you want shown per pageprotected $num_links\t\t\t= 2; // Number of \"digit\" links to show before/after the currently viewed pageprotected $cur_page\t\t\t= 0; // The current page being viewedprotected $use_page_numbers\t\t= FALSE; // Use page number for segment instead of offsetprotected $first_link\t\t\t= '&amp;lsaquo; First';protected $next_link\t\t\t= '&amp;gt;';protected $prev_link\t\t\t= '&amp;lt;';protected $last_link\t\t\t= 'Last &amp;rsaquo;';protected $uri_segment\t\t\t= 3;protected $full_tag_open\t\t= '';protected $full_tag_close\t\t= '';protected $first_tag_open\t\t= '';protected $first_tag_close\t\t= '&amp;nbsp;';protected $last_tag_open\t\t= '&amp;nbsp;';protected $last_tag_close\t\t= '';protected $first_url\t\t\t= ''; // Alternative URL for the First Page.protected $cur_tag_open\t\t\t= '&amp;nbsp;&lt;strong&gt;';protected $cur_tag_close\t\t= '&lt;/strong&gt;';protected $next_tag_open\t\t= '&amp;nbsp;';protected $next_tag_close\t\t= '&amp;nbsp;';protected $prev_tag_open\t\t= '&amp;nbsp;';protected $prev_tag_close\t\t= '';protected $num_tag_open\t\t\t= '&amp;nbsp;';protected $num_tag_close\t\t= '';protected $page_query_string\t= FALSE;protected $query_string_segment \t= 'per_page';protected $display_pages\t\t= TRUE;protected $_attributes\t\t\t= '';protected $_link_types\t\t\t= array();protected $reuse_query_string           = FALSE;protected $data_page_attr\t\t= 'data-ci-pagination-page';",
                "content_html": "<p>A few months ago I had a problem. I was paginating some results based on some data the user had provided. So I needed to be able to pass that data from page to page during the pagination process. First I set to read the Codeigniter documentation to see if it was possible to do that with the pagination library.</p><p>Turns out I could if I set up that data to be a query string and save it in my suffix param. However this solution had a problem. Every-time the user clicked the first or last link on the pagination the query string would disappear.<!--more-->So I searched some more, and found something even better. The new version of the pagination Library (3.0) already had that feature. So if you ever need it and don’t want to wait for the next version of Codeigniter you just have to do the following.</p><p>Download the version 3.0 of the Pagination Library <a href=\"https://github.com/EllisLab/CodeIgniter/blob/develop/system/libraries/Pagination.php\">here</a>.</p><p>Extend your current version of the pagination Library with the one that you just downloaded. (see how to do that <a href=\"http://codeigniter.com/user_guide/general/core_classes.html\">here</a>)</p><p>As you can see the pagination now has one more param than before. It’s called reuse_query_string. And just by setting that to TRUE, you can now use both uri segments and query strings in your pagination.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>protected $base_url\t\t\t= ''; // The page we are linking toprotected $prefix\t\t\t= ''; // A custom prefix added to the path.protected $suffix\t\t\t= ''; // A custom suffix added to the path.protected $total_rows\t\t\t= 0; // Total number of items (database results)protected $per_page\t\t\t= 10; // Max number of items you want shown per pageprotected $num_links\t\t\t= 2; // Number of \"digit\" links to show before/after the currently viewed pageprotected $cur_page\t\t\t= 0; // The current page being viewedprotected $use_page_numbers\t\t= FALSE; // Use page number for segment instead of offsetprotected $first_link\t\t\t= '&amp;lsaquo; First';protected $next_link\t\t\t= '&amp;gt;';protected $prev_link\t\t\t= '&amp;lt;';protected $last_link\t\t\t= 'Last &amp;rsaquo;';protected $uri_segment\t\t\t= 3;protected $full_tag_open\t\t= '';protected $full_tag_close\t\t= '';protected $first_tag_open\t\t= '';protected $first_tag_close\t\t= '&amp;nbsp;';protected $last_tag_open\t\t= '&amp;nbsp;';protected $last_tag_close\t\t= '';protected $first_url\t\t\t= ''; // Alternative URL for the First Page.protected $cur_tag_open\t\t\t= '&amp;nbsp;&lt;strong&gt;';protected $cur_tag_close\t\t= '&lt;/strong&gt;';protected $next_tag_open\t\t= '&amp;nbsp;';protected $next_tag_close\t\t= '&amp;nbsp;';protected $prev_tag_open\t\t= '&amp;nbsp;';protected $prev_tag_close\t\t= '';protected $num_tag_open\t\t\t= '&amp;nbsp;';protected $num_tag_close\t\t= '';protected $page_query_string\t= FALSE;protected $query_string_segment \t= 'per_page';protected $display_pages\t\t= TRUE;protected $_attributes\t\t\t= '';protected $_link_types\t\t\t= array();protected $reuse_query_string           = FALSE;protected $data_page_attr\t\t= 'data-ci-pagination-page';</code></pre></div></div>",
                "url": "http://localhost:4000/post/codeigniter-pagination-re-use-query-strings/",
                
                                
                
                "date_published": "2012-08-23T00:00:00+01:00",
                "date_modified": "2012-08-23T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "Updating your Codeigniter installation with git",
                "content_text": "Ever since Codeigniter moved from Bitbucket to Github I craved for one easy way to update my applications every time a new version gets out. Turns out there is none. And as you can see here, the updating process is always kinda boring specially if a major version is out. Since the version 3.0 is around the block I’m going to show you how I normally upgrade my codeigniter applications.First things first, I’m assuming that you work with git in your normal day to day workflow. If you don’t use it, or even worst don’t know how to use it, stop reading this and without further delay go learn how to use it. (You can check this link for that!).Ok, so now that you can’t live without using git let’s start this thing.  Visit the codeigniter official repository on github.  Add that repository as another remote in your project.For that navigate to the root of your project in your terminal and do this:    $ git remote add codeigniter git://github.com/EllisLab/CodeIgniter.gitNow if you list all your remotes you should get the following result:\t$ git remote\tcodeigniter \toriginNow that you have codeigniter as a remote you have access to all branches that are contained within that repository.      Before you continue make sure that your project is safe and create a new branch from your develop branch (assuming you’re using git flow) let’s call it feature/codeigniter_upgrade.        Now that you have your brand new branch created and that your project is safe the only thing that you have to do is look at all the codeigniter branches and find the latest codeigniter stable branch.  At the moment you’ll be looking for 2.1-stable or hopefully when you read this you’ll be looking for 3.0-stable. Let’s hope that’s the case. (I’m using Source Tree so you can have a more visual context of what’s going on.)Moving on.      Now that you found the branch you want to merge you just need to check out to that branch. For that you just need to do:     $ git branch 2.1-stable codeigniter/2.1-stable      And like that now you have a local copy of the latest stable version of codeigniter in your local repository.      Now the only thing left to do is to merge your new 2.1-stable branch into your feature/codeigniter_upgrade.        After the merge there will be some things to consider, since you’ll obviously get some merge conflicts.  **List of possible conflicts: **  application/config.php  application/routes.php  application/database.php  application/contants.php  index.php  user_guide (if you sill have one in your root)All these conflicts are actually quite easy to resolve, since normally you just need to pick your version over the original one. (Just make sure none of these file have any major changes in the new codeigniter version).I know this is far from a straight forward solution, but it’s better than changing file by file and probably forget something in the process. Sure it’ll take some time, and it can give you some headaches on the final part of the process, but if you have some experience with git just go for it, you can’t lose anything. Because you know, if you work with git, you never really lose anything.Have fun.",
                "content_html": "<p>Ever since Codeigniter moved from Bitbucket to Github I craved for one easy way to update my applications every time a new version gets out. Turns out there is none. And as you can see here, the updating process is always kinda boring specially if a major version is out. Since the version 3.0 is around the block I’m going to show you how I normally upgrade my codeigniter applications.<!--more-->First things first, I’m assuming that you work with git in your normal day to day workflow. If you don’t use it, or even worst don’t know how to use it, stop reading this and without further delay go learn how to use it. (You can check this link for that!).</p><p>Ok, so now that you can’t live without using git let’s start this thing.</p><ol>  <li>Visit the codeigniter official repository on github.</li>  <li>Add that repository as another remote in your project.</li></ol><p>For that navigate to the root of your project in your terminal and do this:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    $ git remote add codeigniter git://github.com/EllisLab/CodeIgniter.git</code></pre></div></div><p>Now if you list all your remotes you should get the following result:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\t$ git remote\tcodeigniter \torigin</code></pre></div></div><p>Now that you have codeigniter as a remote you have access to all branches that are contained within that repository.</p><ol>  <li>    <p>Before you continue make sure that your project is safe and create a new branch from your develop branch (assuming you’re using git flow) let’s call it feature/codeigniter_upgrade.</p>  </li>  <li>    <p>Now that you have your brand new branch created and that your project is safe the only thing that you have to do is look at all the codeigniter branches and find the latest codeigniter stable branch.</p>  </li></ol><p>At the moment you’ll be looking for 2.1-stable or hopefully when you read this you’ll be looking for 3.0-stable. Let’s hope that’s the case. (I’m using Source Tree so you can have a more visual context of what’s going on.)</p><p>Moving on.</p><ol>  <li>    <p>Now that you found the branch you want to merge you just need to check out to that branch. For that you just need to do:</p>    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> $ git branch 2.1-stable codeigniter/2.1-stable</code></pre></div>    </div>  </li></ol><p>And like that now you have a local copy of the latest stable version of codeigniter in your local repository.</p><ol>  <li>    <p>Now the only thing left to do is to merge your new 2.1-stable branch into your feature/codeigniter_upgrade.</p>  </li>  <li>    <p>After the merge there will be some things to consider, since you’ll obviously get some merge conflicts.</p>  </li></ol><p>**List of possible conflicts: **</p><ul>  <li>application/config.php</li>  <li>application/routes.php</li>  <li>application/database.php</li>  <li>application/contants.php</li>  <li>index.php</li>  <li>user_guide (if you sill have one in your root)</li></ul><p>All these conflicts are actually quite easy to resolve, since normally you just need to pick your version over the original one. (Just make sure none of these file have any major changes in the new codeigniter version).</p><p>I know this is far from a straight forward solution, but it’s better than changing file by file and probably forget something in the process. Sure it’ll take some time, and it can give you some headaches on the final part of the process, but if you have some experience with git just go for it, you can’t lose anything. Because you know, if you work with git, you never really lose anything.</p><p>Have fun.</p>",
                "url": "http://localhost:4000/post/updating-your-codeigniter-installation-with-git/",
                
                
                "categories": ["codeigniter","Git","Version-control"],                
                
                "tags": ["codeigniter,Git,Version-control"],
                "date_published": "2012-08-21T00:00:00+01:00",
                "date_modified": "2012-08-21T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "My Blog Now Lives At Blog.marcomonteiro.net",
                "content_text": "Just dropping by to tell you that I moved my blog from a self hosted wordpress blog to a tumblr blog. And now I’m using a sub-domain for my blog.The main reason behing this decision was just the fact that I was not happy with my hosting and therefore I’m moving all my stuff away from them.Tumblr looks like a good free option to me.ps: I’m sorry if all the feed are going crazy and they apear all marked as unread. That’s because all the posts have a new link now, there’s no need to update your feed though.",
                "content_html": "<p>Just dropping by to tell you that I moved my blog from a self hosted wordpress blog to a tumblr blog. And now I’m using a sub-domain for my blog.</p><p>The main reason behing this decision was just the fact that I was not happy with my hosting and therefore I’m moving all my stuff away from them.</p><p>Tumblr looks like a good free option to me.</p><p>ps: I’m sorry if all the feed are going crazy and they apear all marked as unread. That’s because all the posts have a new link now, there’s no need to update your feed though.</p>",
                "url": "http://localhost:4000/post/my-blog-now-lives-at-blog.marcomonteiro.net/",
                
                                
                
                "date_published": "2012-08-09T00:00:00+01:00",
                "date_modified": "2012-08-09T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "Spark bash helper",
                "content_text": "While chilling around in #codeigniter on freenode, I was talking with Josh Manders aka killswitch about Sparks and he noticed how cumbersome it is, so he set out to learn Bash and started creating this script to make it easier to use Spark.Right now it allows you to install Spark into your CodeIgniter directory, and then use the Spark commands right in the script. Couple of them have been redone, like the install/remove/version commands.There’s a lot of stuff that Josh want’s to add to the project like:  Add a way to find the latest spark version and use that when doing “spark install example-spark” that way you do not need to specify the version. (Why this doesn’t already exist with spark is beyond me.)  Check for dependancies of OS installed, such as wget, php, etc.  Check to see if you’re in a proper CodeIgniter project folder.Fork the project and add awesomeness to it.Follow Josh on Github.",
                "content_html": "<iframe src=\"https://player.vimeo.com/video/45780191?color=ffffff\" width=\"100%\" height=\"375\" frameborder=\"0\" webkitallowfullscreen=\"\" mozallowfullscreen=\"\" allowfullscreen=\"\"></iframe><p>While chilling around in #codeigniter on freenode, I was talking with Josh Manders aka killswitch about Sparks and he noticed how cumbersome it is, so he set out to learn Bash and started creating this script to make it easier to use Spark.</p><!--more--><p>Right now it allows you to install Spark into your CodeIgniter directory, and then use the Spark commands right in the script. Couple of them have been redone, like the install/remove/version commands.</p><p><strong>There’s a lot of stuff that Josh want’s to add to the project like:</strong></p><ul>  <li>Add a way to find the latest spark version and use that when doing “spark install example-spark” that way you do not need to specify the version. (Why this doesn’t already exist with spark is beyond me.)</li>  <li>Check for dependancies of OS installed, such as wget, php, etc.</li>  <li>Check to see if you’re in a proper CodeIgniter project folder.</li></ul><p><a href=\"https://github.com/killswitch/spark\">Fork the project</a> and add awesomeness to it.Follow <a href=\"https://github.com/killswitch\">Josh on Github</a>.</p>",
                "url": "http://localhost:4000/post/spark-bash-helper/",
                
                
                "categories": ["ci","code","codeigniter","screencasts"],                
                
                "tags": ["ci,code,codeigniter,screencasts"],
                "date_published": "2012-07-14T00:00:00+01:00",
                "date_modified": "2012-07-14T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Ci-presenter library for Codeigniter",
                "content_text": "For a long time I’ve been using Jamie Rumbelow view presenters and after his presentation at Ciconf (London 2012) I noticed that a lot of people started using his code including my buddy David Wosnitza. After a while David started using the presenters in a even more clever way. He showed me his code and we agreed that it was time to create a library inspired in Jamie’s work.What is a presenter?A presenter just another layer of abstraction that works between the Controller and the View.Why do we need another layer of abstraction?Because if you don’t you have two options, either you use a good template library, or you end up with messy views and those can be a pain to edit.I made a small screencast that will help you understand better on how to use the ci-presenter library.Fork it, add awesomeness to it and help document it. I’m the one doing all the documentation, so it would be great to have some help on that.",
                "content_html": "<iframe src=\"https://player.vimeo.com/video/43767192?color=ffffff\" width=\"100%\" height=\"375\" frameborder=\"0\" webkitallowfullscreen=\"\" mozallowfullscreen=\"\" allowfullscreen=\"\"></iframe><p>For a long time I’ve been using Jamie Rumbelow view presenters and after his presentation at Ciconf (London 2012) I noticed that a lot of people started using his code including my buddy David Wosnitza. After a while David started using the presenters in a even more clever way. He showed me his code and we agreed that it was time to create a library inspired in Jamie’s work.</p><!--more--><p><strong>What is a presenter?</strong></p><p>A presenter just another layer of abstraction that works between the Controller and the View.</p><p><strong>Why do we need another layer of abstraction?</strong></p><p>Because if you don’t you have two options, either you use a good template library, or you end up with messy views and those can be a pain to edit.I made a small screencast that will help you understand better on how to use the ci-presenter library.</p><p>Fork it, add awesomeness to it and help document it. I’m the one doing all the documentation, so it would be great to have some help on that.</p>",
                "url": "http://localhost:4000/post/ci-presenter-library-for-codeigniter/",
                
                
                "categories": ["ci","codeigniter","screencasts"],                
                
                "tags": ["ci,codeigniter,screencasts"],
                "date_published": "2012-06-09T00:00:00+01:00",
                "date_modified": "2012-06-09T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Lunk.it Secure And Private Communications",
                "content_text": "A month ago I was chitchatting with the awesome people from the Internet (I was on IRC) and I got a private message a guy that I know from there from a long time. He wanted to ask me what I thought about a project that he was starting with some friends. The project was called Lunk.So why am I making a post about a project that is not even mine?Because I think this is a one of a kind project, since I don’t think there’s anything like it out there.How does it work?It’s quite simple actually. It’s a service to share information (text, code, file(s)) with someone. You’re probably thinking now that there’s a lot of services that work like that, but this one does one thing that others don’t.Remember the guy from the image? It’s just like that. Your message can only be seen one time by the person you shared the link with.This is specially useful if you’re sharing sensible information like a API key or a password. A feature like this will prevent the person you sent the Lunk to re-share the info, and you can manage your Lunk’s and see which one was opened / destroyed and the ones that haven’t been opened yet.Since this is a service that work with sensitive information security is very important. Just look at the main features:  SSL encryption is forced on site.  Lunks are only viewable once, so you don’t have to worry about information sent being viewed later if the link gets out.  Passwords are optional (paid users), for additional piece of mind.  Full encryption is available (Lunk a Lot users).  Syntax highlighting is available on common languages (a lot more coming soon).  See if Lunks have been viewed, for verification of delivery. For paid users, number of failed attempts, and detailed view history.  Customized view limitations, such as viewable more than once, viewable custom amount of time (coming soon).  API for integration other than web browser (such as browser extentions, or OS integration (files)). In development.Another thing that you might be afraid about a service like this is their privacy policies, well you shouldn’t. Just look at their privacy Policy.Privacy PolicyWe don’t sell your information.“As you can see on the 3rd feature I mentioned, Lunk has some paid features divided by 3 plans. Free / Lunk a little / Lunk a lot.So if you like the concept (who am I kidding you love it) just try it out or give feedback you can do it just now.",
                "content_html": "<p>A month ago I was chitchatting with the awesome people from the Internet (I was on IRC) and I got a private message a guy that I know from there from a long time. He wanted to ask me what I thought about a project that he was starting with some friends. The project was called Lunk.</p><!--more--><p><strong>So why am I making a post about a project that is not even mine?</strong></p><p>Because I think this is a one of a kind project, since I don’t think there’s anything like it out there.</p><p><strong>How does it work?</strong></p><p>It’s quite simple actually. It’s a service to share information (text, code, file(s)) with someone. You’re probably thinking now that there’s a lot of services that work like that, but this one does one thing that others don’t.</p><p>Remember the guy from the image? It’s just like that. Your message can only be seen one time by the person you shared the link with.This is specially useful if you’re sharing sensible information like a API key or a password. A feature like this will prevent the person you sent the Lunk to re-share the info, and you can manage your Lunk’s and see which one was opened / destroyed and the ones that haven’t been opened yet.</p><p><strong>Since this is a service that work with sensitive information security is very important. Just look at the main features:</strong></p><ul>  <li>SSL encryption is forced on site.</li>  <li>Lunks are only viewable once, so you don’t have to worry about information sent being viewed later if the link gets out.</li>  <li>Passwords are optional (paid users), for additional piece of mind.</li>  <li>Full encryption is available (Lunk a Lot users).</li>  <li>Syntax highlighting is available on common languages (a lot more coming soon).</li>  <li>See if Lunks have been viewed, for verification of delivery. For paid users, number of failed attempts, and detailed view history.</li>  <li>Customized view limitations, such as viewable more than once, viewable custom amount of time (coming soon).</li>  <li>API for integration other than web browser (such as browser extentions, or OS integration (files)). In development.</li></ul><p>Another thing that you might be afraid about a service like this is their privacy policies, well you shouldn’t. Just look at their privacy Policy.</p><p><strong>Privacy Policy</strong></p><p>We don’t sell your information.“</p><p>As you can see on the 3rd feature I mentioned, Lunk has some paid features divided by 3 plans. Free / Lunk a little / Lunk a lot.</p><p>So if you like the concept (who am I kidding you love it) just try it out or give feedback you can do it just now.</p>",
                "url": "http://localhost:4000/post/lunk.it-secure-and-private-communications/",
                
                                
                
                "date_published": "2012-05-30T00:00:00+01:00",
                "date_modified": "2012-05-30T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "Back On The Gaming Scene Why Not",
                "content_text": "I was a hardcore online gamer for a while. Specially when I was in college (we all know how that is). However since I switched from Windows to OSX I stopped doing that. So I bought a xbox360 and now I do 90% of my gaming there. Even if I have some cool online games on Xbox I miss two types of games: Poker online and MMORPG’s.The first one I resolved it very quickly, found partypoker since it was one of the few that actually had a pkg for a OSX app (most of the ones I found didn’t) and the payment system works quite well.Now the second part was not easy at all. First I found wurmonline but the java application was always crashing on mac. Then I tried Dungeon Hunter Alliance (bought it on the mac app store) and it is quite good.So I think now I’m happy on my gaming thing. I have skyrim on my xbox, Party Poker to spend (or make) some money, and Dungeon Hunter Alliance to just hanging around and talk to some peeps.",
                "content_html": "<p>I was a hardcore online gamer for a while. Specially when I was in college (we all know how that is). However since I switched from Windows to OSX I stopped doing that. So I bought a xbox360 and now I do 90% of my gaming there. Even if I have some cool online games on Xbox I miss two types of games: Poker online and MMORPG’s.</p><!--more--><p>The first one I resolved it very quickly, found <a href=\"http://www.partypoker.com/\">partypoker</a> since it was one of the few that actually had a pkg for a OSX app (most of the ones I found didn’t) and the payment system works quite well.</p><p>Now the second part was not easy at all. First I found wurmonline but the java application was always crashing on mac. Then I tried Dungeon Hunter Alliance (bought it on the mac app store) and it is quite good.</p><p>So I think now I’m happy on my gaming thing. I have skyrim on my xbox, Party Poker to spend (or make) some money, and Dungeon Hunter Alliance to just hanging around and talk to some peeps.</p>",
                "url": "http://localhost:4000/post/back-on-the-gaming-scene-why-not/",
                
                                
                
                "date_published": "2012-05-13T00:00:00+01:00",
                "date_modified": "2012-05-13T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "Using Sublime Text 2",
                "content_text": "Since I’ll be using sublime Text 2 on all my screencasts from now on, I thought I might do a little screencast about it first. I hope you enjoy.",
                "content_html": "<iframe src=\"https://player.vimeo.com/video/41045144?color=ffffff\" width=\"100%\" height=\"375\" frameborder=\"0\" webkitallowfullscreen=\"\" mozallowfullscreen=\"\" allowfullscreen=\"\"></iframe><p>Since I’ll be using sublime Text 2 on all my screencasts from now on, I thought I might do a little screencast about it first. I hope you enjoy.</p>",
                "url": "http://localhost:4000/post/using-sublime-text-2/",
                
                                
                
                "date_published": "2012-04-30T00:00:00+01:00",
                "date_modified": "2012-04-30T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "What Bugs Me About Shorten Url's",
                "content_text": "When shorten url’s showed up for the first time they were great. We were starting the 140 characters era, and we wanted to share our stuff on the web. The problem was (and still is) that many url’s that point to the stuff we wanted to share were way to big. Just look at those url’s from amazon.But this beautiful creation got us one …tiny“ problem. Actually, the shorten url’s didn’t have nothing to do with the problem. The problem started when certain services we all use to share stuff with our pears started embedding shorten url’s as a feature to their service. So when you’re sharing your link you don’t have to worry about shorten it. The link will be shorten for you. Great right?This started because it was a real pain in the ass to share a big link (also this is a big 1st world problem right here). We had to copy our link, login (or not) into our shorten url service or choice and shorten the url. Then get back to our sharing service (maybe twitter?) and share our thing. Now the sharing service does all this for you, and life is beautiful again. Or is it not?The problem:With so much automation on this process the user has no saying on what should be shorten and what shouldn’t. You may ask, but why should I care if the link get’s shorten or not? Ok, let’s use twitter to illustrate all this because twitter is the one I use the most, therefore the one I can get you more examples.I’m sharing an awesome …lol cat“ video from youtube and the link gets automatically shortened by twitter.Problems:Twitter doesn’t check if the link is smaller than the shortened result.If I’m using my own shorten url system to shorten the url twitter doesn’t recognize it and will shorten a shorten url (this will cause a terrible url inception effect).Just picture that awful shorten inception on your phone with only a crappy 3G connection? You get redirect to twitter shorten url service, then to your own shorten url thingy and finally you’ll get to your content. Great right?Since the link is now shortened if my followers use a twitter client that has youtube integration they can’t see the youtube video on their client. Because the client will not recognize it as a youtube link and will open the browser (If you remember when tweetdeck was awesome, and all those cool integrations like instagram and youtube you know what I’m talking about, they actually correct all this. How? They made tweetdeck a complete crap).Just out of the box, these problems may be the ones that bother me the most. Because I love all those cool integrations specially if you’re a android user, and you’re used to every time a link points to a website that also has a app you get to chose if you want to open that specific url on your app and not your browser.Ok maybe only twitter has all these problems at once, but if you think about it, twitter was the one that made people think about shorten url’s. Twitter was the one that created that need.Twitter, stop breaking things and give us the choice if we want to use your shorten url thing or not. And if we are using it, please don’t do stuff for us, do it the same way tweetdeck used to do (back when tweetdeck was awesome) the link only get’s shortened if I actually need the extra characters to write my message.PSThis article ended up being more of a rant about twitter than expected, sorry about that.",
                "content_html": "<p>When shorten url’s showed up for the first time they were great. We were starting the 140 characters era, and we wanted to share our stuff on the web. The problem was (and still is) that many url’s that point to the stuff we wanted to share were way to big. Just look at those url’s from amazon.</p><p>But this beautiful creation got us one …tiny“ problem. Actually, the shorten url’s didn’t have nothing to do with the problem. The problem started when certain services we all use to share stuff with our pears started embedding shorten url’s as a feature to their service. So when you’re sharing your link you don’t have to worry about shorten it. The link will be shorten for you. Great right?<!--more-->This started because it was a real pain in the ass to share a big link (also this is a big 1st world problem right here). We had to copy our link, login (or not) into our shorten url service or choice and shorten the url. Then get back to our sharing service (maybe twitter?) and share our thing. Now the sharing service does all this for you, and life is beautiful again. Or is it not?</p><p>The problem:With so much automation on this process the user has no saying on what should be shorten and what shouldn’t. You may ask, but why should I care if the link get’s shorten or not? Ok, let’s use twitter to illustrate all this because twitter is the one I use the most, therefore the one I can get you more examples.</p><p>I’m sharing an awesome …lol cat“ video from youtube and the link gets automatically shortened by twitter.</p><p><strong>Problems:</strong></p><p>Twitter doesn’t check if the link is smaller than the shortened result.If I’m using my own shorten url system to shorten the url twitter doesn’t recognize it and will shorten a shorten url (this will cause a terrible url inception effect).</p><p>Just picture that awful shorten inception on your phone with only a crappy 3G connection? You get redirect to twitter shorten url service, then to your own shorten url thingy and finally you’ll get to your content. Great right?Since the link is now shortened if my followers use a twitter client that has youtube integration they can’t see the youtube video on their client. Because the client will not recognize it as a youtube link and will open the browser (If you remember when tweetdeck was awesome, and all those cool integrations like instagram and youtube you know what I’m talking about, they actually correct all this. How? They made tweetdeck a complete crap).Just out of the box, these problems may be the ones that bother me the most. Because I love all those cool integrations specially if you’re a android user, and you’re used to every time a link points to a website that also has a app you get to chose if you want to open that specific url on your app and not your browser.</p><p>Ok maybe only twitter has all these problems at once, but if you think about it, twitter was the one that made people think about shorten url’s. Twitter was the one that created that need.</p><p>Twitter, stop breaking things and give us the choice if we want to use your shorten url thing or not. And if we are using it, please don’t do stuff for us, do it the same way tweetdeck used to do (back when tweetdeck was awesome) the link only get’s shortened if I actually need the extra characters to write my message.</p><p><strong>PS</strong>This article ended up being more of a rant about twitter than expected, sorry about that.</p>",
                "url": "http://localhost:4000/post/what-bugs-me-about-shorten-url's/",
                
                                
                
                "date_published": "2012-04-29T00:00:00+01:00",
                "date_modified": "2012-04-29T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "Using The Sparks System With Kittens",
                "content_text": "This is my first screencast, I’ve done it without any script. I used it just to try out the screencast software and to actually see if I should start doing this or just stay with the written articles.Please leave feedback on things to improve.",
                "content_html": "<iframe src=\"https://player.vimeo.com/video/40902584?color=ffffff\" width=\"100%\" height=\"376\" frameborder=\"0\" webkitallowfullscreen=\"\" mozallowfullscreen=\"\" allowfullscreen=\"\"></iframe><p>This is my first screencast, I’ve done it without any script. I used it just to try out the screencast software and to actually see if I should start doing this or just stay with the written articles.</p><p>Please leave feedback on things to improve.</p>",
                "url": "http://localhost:4000/post/using-the-sparks-system-with-kittens/",
                
                                
                
                "date_published": "2012-04-23T00:00:00+01:00",
                "date_modified": "2012-04-23T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "Adopt Kitten Helper For Codeigniter",
                "content_text": "Need a placeholder? Like kittens? Use Codeigniter?Well you’ve come to the right place sir. I have just the thing for you. Today edmundask did his own placeholder helper for Codeigniter. When I saw it I just had to make a placeholder with kittens. So I forked his repository and did it.Hope you enjoy it.  Original repository: edmundask  AdoptKitten repository  AdoptKitten spark:",
                "content_html": "<p>Need a placeholder? Like kittens? Use Codeigniter?</p><p>Well you’ve come to the right place sir. I have just the thing for you. Today edmundask did his own placeholder helper for Codeigniter. When I saw it I just had to make a placeholder with kittens. So I forked his repository and did it.</p><p>Hope you enjoy it.</p><ul>  <li>Original repository: <a href=\"https://github.com/edmundask/codeigniter-placeholder\">edmundask</a></li>  <li><a href=\"https://github.com/mpmont/adopt-kitten\">AdoptKitten repository</a></li>  <li><a href=\"http://getsparks.org/packages/adoptkitten/versions/HEAD/show\">AdoptKitten spark:</a></li></ul>",
                "url": "http://localhost:4000/post/adopt-kitten-helper-for-codeigniter/",
                
                                
                
                "date_published": "2012-04-19T00:00:00+01:00",
                "date_modified": "2012-04-19T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "Codeigniter Snippets Package for Sublime T. 2",
                "content_text": "A few weeks ago I was at #codeigniter @freenode.net as usual, and we were talking about Sublime Text 2 (because it’s an awesome text editor and you should start using it right now) and we’re talking about how there was no package for Codeigniter with Snippets made just for it.So I started one and made a pull request on the package repository so my work could be appreciated / used by anyone using Sublime Text 2. Obviously like any other open source project my snippets package can be updated by anyone.I must say that my first version was done really quickly and like so, needed a lot of improvements, but that’s why it was open sourced so anyone could actually make even better.One week after someone tried to make a new one instead of forking mine since mine was already listed on the package directory. Well my first thought was to try and make the repository owner work with me and whoever already forked my repository.After a few arguments and whatnot we finally come to an agreement and the final decision was that should only be one package listed on the package directory and that should be the one I already started since at that time more than 100 people were already using mine.Since then, I’m still waiting on that fork and pull request. Now I can live with that, and I actually don’t care if the guy(s) that started the second repository actually make something on the side and have their own repository.OK, so were am I going with this?It’s quite simple actually.Why in God’s name should one try to compete on something like a snippets repository? Seriously, I think competition is a really good thing and can make people get better on what they do. However something like this is not the same has making a framework or whatever were different approaches will result in completely different results. But this is not the case, this is a collection of files that will help people code, and that’s the only way to approach this problem.If the a pull request actually is made, I’ll be glad to make it a part of the repository that I’ve created. But having two Codeigniter snippets packages is just counter productive, and that is all I have to say about this matter.So if you use Codeigniter and use sublime text 2. Just go here fork and make it better.Also, thank you all the 1000+ that are already using this package.That’s it.Snippets Package:",
                "content_html": "<p>A few weeks ago I was at #codeigniter @freenode.net as usual, and we were talking about Sublime Text 2 (because it’s an awesome text editor and you should start using it right now) and we’re talking about how there was no package for Codeigniter with Snippets made just for it.</p><p>So I started one and made a pull request on the package repository so my work could be appreciated / used by anyone using Sublime Text 2. Obviously like any other open source project my snippets package can be updated by anyone.<!--more-->I must say that my first version was done really quickly and like so, needed a lot of improvements, but that’s why it was open sourced so anyone could actually make even better.</p><p>One week after someone tried to make a new one instead of forking mine since mine was already listed on the package directory. Well my first thought was to try and make the repository owner work with me and whoever already forked my repository.</p><p>After a few arguments and whatnot we finally come to an agreement and the final decision was that should only be one package listed on the package directory and that should be the one I already started since at that time more than 100 people were already using mine.</p><p>Since then, I’m still waiting on that fork and pull request. Now I can live with that, and I actually don’t care if the guy(s) that started the second repository actually make something on the side and have their own repository.</p><p>OK, so were am I going with this?</p><p>It’s quite simple actually.</p><p>Why in God’s name should one try to compete on something like a snippets repository? Seriously, I think competition is a really good thing and can make people get better on what they do. However something like this is not the same has making a framework or whatever were different approaches will result in completely different results. But this is not the case, this is a collection of files that will help people code, and that’s the only way to approach this problem.</p><p>If the a pull request actually is made, I’ll be glad to make it a part of the repository that I’ve created. But having two Codeigniter snippets packages is just counter productive, and that is all I have to say about this matter.</p><p>So if you use Codeigniter and use sublime text 2. Just go here fork and make it better.</p><p>Also, thank you all the 1000+ that are already using this package.</p><p>That’s it.</p><p><a href=\"http://github.com/mpmont/ci-snippets\">Snippets Package:</a></p>",
                "url": "http://localhost:4000/post/codeigniter-snippets-package-for-sublime-t.-2/",
                
                
                "categories": ["ci","code","codeigniter","Sublime Text"],                
                
                "tags": ["ci,code,codeigniter,Sublime Text"],
                "date_published": "2012-04-13T00:00:00+01:00",
                "date_modified": "2012-04-13T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Something happened this week, something really good",
                "content_text": "One of the things that was really annoying me at work was that some of the people there was still 1995 and coding in a team without using any kind of version control.Well not anymore. We had a couple of big projects coming in, and finally I convinced all the people there that we really needed to get everyone to use Git or Mercurial. So I explained the concepts then we created a small dummy repository and started playing around with it. After a little while everyone was discovering the power of being in 2012.Ok there’s still a lot to do, they still have some bad habits from using errr nothing, like working for a day without committing anything to the repository. But I think that will end with time.What can I ask next? Well the only thing I’d like to happen next would be for us to start using real hosting companies and not 1975 companies or whatever company our client had a contract with. If that happens in the near future I’ll be one hell of a happy nerd.Oh well, one can’t ask for everything at once can we? :)If you having the same problem I had you might want to reason with your team and try to get them to the dark side.Also show them this tutorial so they can see that is not so hard to do.And finally it you have any problems convincing your team I think in that article just this part should be enough for that. If not, I think you have a bigger problem in your hands.Why Use Version Control?You might be wondering why you should use version control, even for a site you’ll never collaborate with anyone on. This is a valid question. I can best illustrate the answer with a scenario you may have encountered in the past. Let’s say you’re in the middle of making a site and want to try something crazy with the css. Maybe you want to do a bit of an experiment and make everything strange shades of yellow and red. You don’t know if you’re going to keep the work when you finish it. Since it’s an experiment, it would probably be a good idea to not mess up your working version of the site.At this point, you might be thinking of creating a copy of the site and making your changes on the copy. Maybe you’re sure that you’re going to use this work and you’re going to crank through. Maybe it doesn’t work out, though. Wouldn’t it be nice if you could take a snapshot of your site now, do your experiment, and not have to worry about whether you mess things up? That’s exactly what version control is for!",
                "content_html": "<p>One of the things that was really annoying me at work was that some of the people there was still 1995 and coding in a team without using any kind of version control.</p><p>Well not anymore. We had a couple of big projects coming in, and finally I convinced all the people there that we really needed to get everyone to use Git or Mercurial. So I explained the concepts then we created a small dummy repository and started playing around with it. After a little while everyone was discovering the power of being in 2012.<!--more-->Ok there’s still a lot to do, they still have some bad habits from using errr nothing, like working for a day without committing anything to the repository. But I think that will end with time.</p><p>What can I ask next? Well the only thing I’d like to happen next would be for us to start using real hosting companies and not 1975 companies or whatever company our client had a contract with. If that happens in the near future I’ll be one hell of a happy nerd.</p><p>Oh well, one can’t ask for everything at once can we? :)</p><p>If you having the same problem I had you might want to reason with your team and try to get them to the dark side.</p><p>Also show them <a href=\"http://thinkvitamin.com/design/git-for-designers-part-1/%3Cbr/%3Ehttp://thinkvitamin.com/design/git-for-designers-part-1/%3Cbr/%3Ehttp://thinkvitamin.com/design/git-for-designers-part-1/\">this tutorial</a> so they can see that is not so hard to do.</p><p>And finally it you have any problems convincing your team I think in that article just this part should be enough for that. If not, I think you have a bigger problem in your hands.</p><p><strong>Why Use Version Control?</strong></p><p>You might be wondering why you should use version control, even for a site you’ll never collaborate with anyone on. This is a valid question. I can best illustrate the answer with a scenario you may have encountered in the past. Let’s say you’re in the middle of making a site and want to try something crazy with the css. Maybe you want to do a bit of an experiment and make everything strange shades of yellow and red. You don’t know if you’re going to keep the work when you finish it. Since it’s an experiment, it would probably be a good idea to not mess up your working version of the site.</p><p>At this point, you might be thinking of creating a copy of the site and making your changes on the copy. Maybe you’re sure that you’re going to use this work and you’re going to crank through. Maybe it doesn’t work out, though. Wouldn’t it be nice if you could take a snapshot of your site now, do your experiment, and not have to worry about whether you mess things up? That’s exactly what version control is for!</p>",
                "url": "http://localhost:4000/post/something-happened-this-week,-something-really-good/",
                
                
                "categories": ["Git","Version-control"],                
                
                "tags": ["Git,Version-control"],
                "date_published": "2012-03-10T00:00:00+00:00",
                "date_modified": "2012-03-10T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Ciconf2012 @London",
                "content_text": "Last weekend I was in London, mostly to attend to Ciconf. However I think it’s safe to say that one of the main reasons was to just to be around wonderful people.The actual CiconfThe program end up being better than I was expecting.John Crepezzi gave a really cool talk about testing Web Applications. I think is safe to say that I learn a lot with his talk.Tyler Flint from pagodabox. Told us what is wrong at the moment with hosting companies and how good pagodabox is solving those problems. We even got a preview on some awesome new features that pagodabox will get in the next few weeks.Harro Verton aka wanwizard that showed us how a good old school talk is made of. I was amazed about the amount of information he actually had on his talk.I’d like to apologize not to be able to do his master class. But my laptop was dead at the end of the day. Since I use european sockets and that was a pain to charge at the venue.Jamie Rumbelow’s talk was great. I was actually looking forward to it, since I use most of his open source code. His talk was passionate you could actually see how much he cares about making really good code.Alex Bilbie gave a wonderful talk about mongoDB. I totally want to use it now but first I have to find a good project for it.The social aspect of CiconfEnd up meeting a lot of interesting new people and being with people that I talk all the time over the interwebs it’s a really great feeling. The first night at the Pub was entertaining and the Bowling night with almost all the people was really great.Another great thing about the time I had in London was the group that I was with. The guys from the #codeigniter irc channel. It was just awesome to be with such fun people, we had some really funny moments. Was really great to be with people with different backgrounds and see that we had so much in common.",
                "content_html": "<p>Last weekend I was in London, mostly to attend to Ciconf. However I think it’s safe to say that one of the main reasons was to just to be around wonderful people.<!--more--><strong>The actual Ciconf</strong></p><p>The program end up being better than I was expecting.</p><p>John Crepezzi gave a really cool talk about testing Web Applications. I think is safe to say that I learn a lot with his talk.</p><p>Tyler Flint from pagodabox. Told us what is wrong at the moment with hosting companies and how good pagodabox is solving those problems. We even got a preview on some awesome new features that pagodabox will get in the next few weeks.</p><p>Harro Verton aka wanwizard that showed us how a good old school talk is made of. I was amazed about the amount of information he actually had on his talk.I’d like to apologize not to be able to do his master class. But my laptop was dead at the end of the day. Since I use european sockets and that was a pain to charge at the venue.</p><p>Jamie Rumbelow’s talk was great. I was actually looking forward to it, since I use most of his open source code. His talk was passionate you could actually see how much he cares about making really good code.</p><p>Alex Bilbie gave a wonderful talk about mongoDB. I totally want to use it now but first I have to find a good project for it.</p><p><strong>The social aspect of Ciconf</strong></p><p>End up meeting a lot of interesting new people and being with people that I talk all the time over the interwebs it’s a really great feeling. The first night at the Pub was entertaining and the Bowling night with almost all the people was really great.</p><p>Another great thing about the time I had in London was the group that I was with. The guys from the #codeigniter irc channel. It was just awesome to be with such fun people, we had some really funny moments. Was really great to be with people with different backgrounds and see that we had so much in common.</p>",
                "url": "http://localhost:4000/post/ciconf2012-@london/",
                
                
                "categories": ["ci","ciconf","codeigniter"],                
                
                "tags": ["ci,ciconf,codeigniter"],
                "date_published": "2012-02-24T00:00:00+00:00",
                "date_modified": "2012-02-24T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "February awesomeness ahead",
                "content_text": "It’s been a while since my last blog post, mostly because I had a lot of stuff happening at the same time. Both at the end of last year and the beginning of this one. So you’re probably wondering what is happening in February right? (probably not, but I’ll explain it anyway)I’ll be on vacation in February and this time around I’m going to use it for two things. Have a really good time in London and learn new stuff from the awesome community of #codeigniter.Ciconf:The CodeIgniter Conference is a two-day event being run with events around the world, with one event in London this February and the next happening back in the States. The two-day mixture of masterclasses and talks will give you a great chance to meet fellow CodeIgniter developers, listen to talks from some of the well known CodeIgniter bloggers and Reactor Engineers and learn new skills in our masterclasses which cater for beginners and advanced users alike.From that description one can only expect great things.Obviously there will be drinks involved but the thing I think I’m going to enjoy the most will be just to be with people that I talk almost everyday on IRC or twitter. People that helped me grow a lot inside the community and as a webdeveloper.So last year I had a check-list for my vacation, I though I’d make a new one this year too.02 / 2012 Vacation check-list  Going to London two days before the conference so visit the city.  Have a lot of beer with _druu on the first night.  Some more sight seeing. (probably with a hangover so that will be interesting).  Meet up with the guys for an awesome weekend at ciconf. (joelcox, taftse, ShawnMcCool and _druu).  LEARN ALL THINGS AT CICONF.  Meet up with rsmarshall.  Leave London with an awesome experience.Check out the Ciconf website and twitter account for more news.",
                "content_html": "<p>It’s been a while since my last blog post, mostly because I had a lot of stuff happening at the same time. Both at the end of last year and the beginning of this one. So you’re probably wondering what is happening in February right? (probably not, but I’ll explain it anyway)</p><p>I’ll be on vacation in February and this time around I’m going to use it for two things. Have a really good time in London and learn new stuff from the awesome community of #codeigniter.<!--more--><strong>Ciconf:</strong></p><p>The CodeIgniter Conference is a two-day event being run with events around the world, with one event in London this February and the next happening back in the States. The two-day mixture of masterclasses and talks will give you a great chance to meet fellow CodeIgniter developers, listen to talks from some of the well known CodeIgniter bloggers and Reactor Engineers and learn new skills in our masterclasses which cater for beginners and advanced users alike.From that description one can only expect great things.</p><p>Obviously there will be drinks involved but the thing I think I’m going to enjoy the most will be just to be with people that I talk almost everyday on IRC or twitter. People that helped me grow a lot inside the community and as a webdeveloper.</p><p>So last year I had a check-list for my vacation, I though I’d make a new one this year too.</p><p><strong>02 / 2012 Vacation check-list</strong></p><ul>  <li>Going to London two days before the conference so visit the city.</li>  <li>Have a lot of beer with _druu on the first night.</li>  <li>Some more sight seeing. (probably with a hangover so that will be interesting).</li>  <li>Meet up with the guys for an awesome weekend at ciconf. (joelcox, taftse, ShawnMcCool and _druu).</li>  <li>LEARN ALL THINGS AT CICONF.</li>  <li>Meet up with rsmarshall.</li>  <li>Leave London with an awesome experience.</li></ul><p>Check out the <a href=\"http://www.ciconf.com/\">Ciconf</a> website and twitter account for more news.</p>",
                "url": "http://localhost:4000/post/february-awesomeness-ahead/",
                
                
                "categories": [2012,"ci","ciconf","codeigniter","2012"],                
                
                "tags": ["2012,ci,ciconf,codeigniter"],
                "date_published": "2012-01-23T00:00:00+00:00",
                "date_modified": "2012-01-23T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Codeigniter - Thumb Helper",
                "content_text": "I’ve created a small thumbnail helper for codeigniter and I’d like to get some feedback from you guys.Go nuts:  Propose changes (fork the thingy and make some changes or give it some nice features)  Propose new features.Has you can see on the readme file I have some features coming up, I just need the time. For now you download, watch or fork it.Github repository",
                "content_html": "<p>I’ve created a small thumbnail helper for codeigniter and I’d like to get some feedback from you guys.</p><p><strong>Go nuts:</strong></p><ul>  <li>Propose changes (fork the thingy and make some changes or give it some nice features)</li>  <li>Propose new features.</li></ul><p>Has you can see on the readme file I have some features coming up, I just need the time. For now you download, watch or fork it.</p><p><a href=\"http://www.github.com/mpmont/thumb_helper\">Github repository</a></p>",
                "url": "http://localhost:4000/post/codeigniter-thumb-helper/",
                
                
                "categories": ["ci","code","codeigniter","helper","image","php","thumb"],                
                
                "tags": ["ci,code,codeigniter,helper,image,php,thumb"],
                "date_published": "2012-01-20T00:00:00+00:00",
                "date_modified": "2012-01-20T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Codeigniter Video Helper",
                "content_text": "Over the weekend I’ve written a small helper since latterly almost all of my projects have to work with youtube or even with vimeo. This is a helper to work with Codeigniter obviously.Has usual I’ll give you guys the link to github. If you have any suggestions or have any issues with it, just post it on github. Also you’re free to fork it and add awesomeness to it.Gihub repository",
                "content_html": "<p>Over the weekend I’ve written a small helper since latterly almost all of my projects have to work with youtube or even with vimeo. This is a helper to work with Codeigniter obviously.</p><p>Has usual I’ll give you guys the link to github. If you have any suggestions or have any issues with it, just post it on github. Also you’re free to fork it and add awesomeness to it.</p><p><a href=\"https://github.com/mpmont/video_helper\">Gihub repository</a></p>",
                "url": "http://localhost:4000/post/codeigniter-video-helper/",
                
                                
                
                "date_published": "2011-11-20T00:00:00+00:00",
                "date_modified": "2011-11-20T00:00:00+00:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "In Maintenance",
                "content_text": "I’m here with some bad news, or perhaps not. Will see. What I know for sure is that I will moving my website and my blog out of here. I’m sick and tired of trying to talk with someone at hocnet and just couldn’t. Even the process of renewal is a real pain.",
                "content_html": "<p>I’m here with some bad news, or perhaps not. Will see. What I know for sure is that I will moving my website and my blog out of here. I’m sick and tired of trying to talk with someone at hocnet and just couldn’t. Even the process of renewal is a real pain.</p>",
                "url": "http://localhost:4000/post/in-maintenance/",
                
                                
                
                "date_published": "2011-10-24T00:00:00+01:00",
                "date_modified": "2011-10-24T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "Commun.it",
                "content_text": "Recently I had an invite to Commun.it and I thought to myself, well I’ve never used a service to manage my community on twitter so I might has well give it a try. Commun.it is basically a service that let you know how to interact better with your community, the users that influence more and the one that you should consider to unfollow and follow.First you should know that Commun.it is still in beta so there’s a lot to be done. However it already does a lot.What can I do with Commun.it?Well you can make your network bigger with the assurance that you are only following someone that is following you back. Or in other case people that are in fact influencers to the subjects that made you get on Twitter in the first place.On Commun.it you can see:The users that actually talk back to you.The users that normally re-tweet your tweets.The influencers - Users with a certain power within their own networks that you follow and that actually talk back to you.Those are the upsides on using Commun.it however I think they can do better on certain fields. Specially on the last on - The influencers - this term I think is not being used in the certain way, since in my point of view the influencers are those that you consider Gurus on a subject and that actually talk much about that subject. And most of the time they don’t even bother to reply to you. Those are the influencers.In conclusion, this is a great service that are just getting a share of this market. For personal use it actually does the job. However for a company it still needs some improvements. But having in mind that this is still in closed beta. I think it’s pretty good.They were kind enough to give my 25 invitations to distribute with this article. So if you want to give it a go just just follow this link.",
                "content_html": "<p>Recently I had an invite to Commun.it and I thought to myself, well I’ve never used a service to manage my community on twitter so I might has well give it a try. Commun.it is basically a service that let you know how to interact better with your community, the users that influence more and the one that you should consider to unfollow and follow.</p><p>First you should know that Commun.it is still in beta so there’s a lot to be done. However it already does a lot.<!--more--><strong>What can I do with Commun.it?</strong></p><p>Well you can make your network bigger with the assurance that you are only following someone that is following you back. Or in other case people that are in fact influencers to the subjects that made you get on Twitter in the first place.</p><p><strong>On Commun.it you can see:</strong></p><p>The users that actually talk back to you.The users that normally re-tweet your tweets.The influencers - Users with a certain power within their own networks that you follow and that actually talk back to you.</p><p>Those are the upsides on using Commun.it however I think they can do better on certain fields. Specially on the last on - The influencers - this term I think is not being used in the certain way, since in my point of view the influencers are those that you consider Gurus on a subject and that actually talk much about that subject. And most of the time they don’t even bother to reply to you. Those are the influencers.</p><p>In conclusion, this is a great service that are just getting a share of this market. For personal use it actually does the job. However for a company it still needs some improvements. But having in mind that this is still in closed beta. I think it’s pretty good.</p><p>They were kind enough to give my 25 invitations to distribute with this article. So if you want to give it a go just just follow this <a href=\"http://commun.it/?t=a5bb6c\">link</a>.</p>",
                "url": "http://localhost:4000/post/commun.it/",
                
                
                "categories": ["comunity","management","socialmedia","web"],                
                
                "tags": ["comunity,management,socialmedia,web"],
                "date_published": "2011-10-10T00:00:00+01:00",
                "date_modified": "2011-10-10T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Copywriting for geeks",
                "content_text": "For the past weeks I’ve been reading some material about a lot of subjects on the web like SEO, Responsive Webdesign, SocialMedia and whatever piece of information I can get my hands on that can give a bit more know how about every aspects of the web. And last month I had a two weeks vacation (check the link to see everything I’ve accomplished from my todo list) I had some more time for the reading department. During that time I’ve come across with this book by Marc-André Cournoyer.Now if you’re familiar with Marc-André work you’ll know before hand that this will be a nice reading. Even before you actually do some reading. Yes, he’s that awesome.So what’s the book about?Obviously I’m not giving you all the aspects of the book, you have to do the reading yourself. But I can leave you with some topics to spice things up a bit.The eight principles of persuasionThis is the main topic of the book, every topic is well explained, therefore easy to understand. But the best thing about it is that Marc-André uses real examples on how to do it and how not to do it. It’s amazing.The secret of copywritingThis is actual just some final thoughts on the book.The A/B testingSome people are against this method some people love it. I love it, and I think it just works. And if you are against it you are just afraid of the outcome. Marc-André has a really good position about A/B testing.In conclusion, I think this book is really good, you can go by all of it’s content in one hour and I’m sure in the end you’ll see that it was time well spent.Mark-André website Tweet about the book Get the book",
                "content_html": "<p>For the past weeks I’ve been reading some material about a lot of subjects on the web like SEO, Responsive Webdesign, SocialMedia and whatever piece of information I can get my hands on that can give a bit more know how about every aspects of the web. And last month I had a two weeks vacation (check the link to see everything I’ve accomplished from my todo list) I had some more time for the reading department. During that time I’ve come across with this book by Marc-André Cournoyer.</p><p>Now if you’re familiar with Marc-André work you’ll know before hand that this will be a nice reading. Even before you actually do some reading. Yes, he’s that awesome.<!--more-->So what’s the book about?Obviously I’m not giving you all the aspects of the book, you have to do the reading yourself. But I can leave you with some topics to spice things up a bit.</p><p>The eight principles of persuasionThis is the main topic of the book, every topic is well explained, therefore easy to understand. But the best thing about it is that Marc-André uses real examples on how to do it and how not to do it. It’s amazing.</p><p>The secret of copywritingThis is actual just some final thoughts on the book.</p><p>The A/B testingSome people are against this method some people love it. I love it, and I think it just works. And if you are against it you are just afraid of the outcome. Marc-André has a really good position about A/B testing.</p><p>In conclusion, I think this book is really good, you can go by all of it’s content in one hour and I’m sure in the end you’ll see that it was time well spent.</p><p><a href=\"http://macournoyer.com/\">Mark-André website </a></p><p><a href=\"http://twitter.com/intent/tweet?source=webclient&amp;text=Get+the+book+Copywriting+For+Geeks+by+%40macournoyer+-+http%3A%2F%2Fcopywritingforgeeks.com+via+@marcogmonteiro\">Tweet about the book </a></p><p><a href=\"http://copywritingforgeeks.com/\">Get the book</a></p>",
                "url": "http://localhost:4000/post/copywriting-for-geeks/",
                
                
                "categories": ["books","copyright","responsive","seo","socialmedia"],                
                
                "tags": ["books,copyright,responsive,seo,socialmedia"],
                "date_published": "2011-10-04T00:00:00+01:00",
                "date_modified": "2011-10-04T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "The new Gowalla approach",
                "content_text": "This week Gowalla released a new mobile app both for Android and IOS. When I heard this I was so excited. I’m not using gowalla for that long, I used foursquare when I started checkin into places. But lately I noticed that I had much more real friends on Gowalla than foursquare. So I changed to Gowalla and I love it.I loved Gowala, it’s was fun, fast and most of all it worked. Well not anymore, not after that last version. For what I’ve been reading they changed the business strategy, trying to difference their product from foursquare. I can relate to that, since there’s no space in the market for both. But I never thought they would go down this path.First the website.My profile is now buggy, since the update I can’t see my friends updates. And then my passport, can’t find all the rewards I’ve found while using Gowala. But ok, no more of that, I can live with that. But the friends stream bug is sure is annoying.gowallaIt appears that I’m not alone, since there’s a lot more people with this problem. Try to contact Gowalla on twitter and this was their response.Now the app.The checkin process: (Looks like Gowalla is not about checkin anymore) now you have a division first the visited spots, than the near by spots. That’s cool, I like it. Because if you have a routine is much easier if the spots you already entered are there for you to checkin. Thumbs up for that.Than you select a spot and the first thing you have to do is enter the name of the user or person that is with you. That’s cool too, still I’m not comfortable with this feature, since I couldn’t find a place in my settings to say that I don’t want other people to checkin for me in a place.And that’s it, your checkin is done. No comments, nothing! Now you create a story. A story? Really? What is this? Alice in wonderland?But now the part that I can’t really understand is why is the share button only at the end of the process? Wouldn’t it be easy to just have some kind of checkbox before to share the checkin?But ok, fine. I still can live with that.So, I click share at the end because sometimes I like to share this information on Twitter. Than you chose the platform (Facebook, Foursquare or Twitter) And you get the message …Say something fabulous“. I thought: Ok, this will be the message to be displayed with my sharing. But no such luck.I’ve done my sharing and this is what was sent to Twitter:My message was no where to be found. Well I don’t know if this is a bug, or if this is the way it should work. If it’s a bug, it’s really annoying, if not it’s just plain stupid. Still if it’s a bug that should be the standard message on Gowalla. Again, a story? Really?Then I had another problem, a known problem already on the last version of gowalla. when you’re checking in and you want to add a photo, you have to take a photo you can’t simply add a pre-taken photo from your gallery. Guys this is a feature that is present on almost all the apps that let you add a photo to something.And finally the last problem. I don’t live in a big city, so there’s not that many spots, many of them I have to create them myself. I was on the app back and forth looking for the place to do that. Out of my frustration last night I sent a Tweet to gowalla and see if they could help me out. And they did.Yes I was the one that couldn’t find the option but I’m sorry to say, I still can’t find the option on my Droid, maybe they took it out again on Android since that isn’t the first time they do it.And I’m telling you, I was one of those guys that added a lot of spots, and after that I always went to the website and correct the place, since gowalla never did a great job putting the spot on the right place, even with GPS on.The Guide part of the app is great, I can’t enjoy it where I live. But it looks great. But I still think the checkin process needs some real tuning.So the main problem with Gowalla now is that it was great and now it’s boring and unfriendly to use. Checking in should be a quick and painless process. And a story telling thingy.Give me your thoughts on the new Gowalla app.Also view the 3 articles on the Gowalla Blog since version 4 is out. Check the comments and you’ll see that I’m not alone with this frustration.  A new Gowalla  Day One  Thanks For Your Feedback (yes, even for the stuff you wrote in ALL CAPS) (The CEO admitting the errors, for me this was a big step. Admitting their errors is the only way to save the product)PS: Gowalla is doing a great job on Twitter, they always answered my questions and if you go to their page they are always helping people out. For that thumbs up.",
                "content_html": "<p>This week Gowalla released a new mobile app both for Android and IOS. When I heard this I was so excited. I’m not using gowalla for that long, I used foursquare when I started checkin into places. But lately I noticed that I had much more real friends on Gowalla than foursquare. So I changed to Gowalla and I love it.</p><p>I loved Gowala, it’s was fun, fast and most of all it worked. Well not anymore, not after that last version. For what I’ve been reading they changed the business strategy, trying to difference their product from foursquare. I can relate to that, since there’s no space in the market for both. But I never thought they would go down this path.<!--more--><strong>First the website.</strong></p><p>My profile is now buggy, since the update I can’t see my friends updates. And then my passport, can’t find all the rewards I’ve found while using Gowala. But ok, no more of that, I can live with that. But the friends stream bug is sure is annoying.gowallaIt appears that I’m not alone, since there’s a lot more people with this problem. Try to contact Gowalla on twitter and this was their response.</p><p><strong>Now the app.</strong></p><p>The checkin process: (Looks like Gowalla is not about checkin anymore) now you have a division first the visited spots, than the near by spots. That’s cool, I like it. Because if you have a routine is much easier if the spots you already entered are there for you to checkin. Thumbs up for that.</p><p>Than you select a spot and the first thing you have to do is enter the name of the user or person that is with you. That’s cool too, still I’m not comfortable with this feature, since I couldn’t find a place in my settings to say that I don’t want other people to checkin for me in a place.</p><p>And that’s it, your checkin is done. No comments, nothing! Now you create a story. A story? Really? What is this? Alice in wonderland?</p><p>But now the part that I can’t really understand is why is the share button only at the end of the process? Wouldn’t it be easy to just have some kind of checkbox before to share the checkin?</p><p>But ok, fine. I still can live with that.</p><p>So, I click share at the end because sometimes I like to share this information on Twitter. Than you chose the platform (Facebook, Foursquare or Twitter) And you get the message …Say something fabulous“. I thought: Ok, this will be the message to be displayed with my sharing. But no such luck.</p><p><strong>I’ve done my sharing and this is what was sent to Twitter:</strong></p><p>My message was no where to be found. Well I don’t know if this is a bug, or if this is the way it should work. If it’s a bug, it’s really annoying, if not it’s just plain stupid. Still if it’s a bug that should be the standard message on Gowalla. Again, a story? Really?</p><p>Then I had another problem, a known problem already on the last version of gowalla. when you’re checking in and you want to add a photo, you have to take a photo you can’t simply add a pre-taken photo from your gallery. Guys this is a feature that is present on almost all the apps that let you add a photo to something.</p><p>And finally the last problem. I don’t live in a big city, so there’s not that many spots, many of them I have to create them myself. I was on the app back and forth looking for the place to do that. Out of my frustration last night I sent a Tweet to gowalla and see if they could help me out. And they did.</p><p>Yes I was the one that couldn’t find the option but I’m sorry to say, I still can’t find the option on my Droid, maybe they took it out again on Android since that isn’t the first time they do it.</p><p>And I’m telling you, I was one of those guys that added a lot of spots, and after that I always went to the website and correct the place, since gowalla never did a great job putting the spot on the right place, even with GPS on.</p><p>The Guide part of the app is great, I can’t enjoy it where I live. But it looks great. But I still think the checkin process needs some real tuning.</p><p>So the main problem with Gowalla now is that it was great and now it’s boring and unfriendly to use. Checking in should be a quick and painless process. And a story telling thingy.</p><p>Give me your thoughts on the new Gowalla app.</p><p>Also view the 3 articles on the Gowalla Blog since version 4 is out. Check the comments and you’ll see that I’m not alone with this frustration.</p><ol>  <li>A new Gowalla</li>  <li>Day One</li>  <li>Thanks For Your Feedback (yes, even for the stuff you wrote in ALL CAPS) (The CEO admitting the errors, for me this was a big step. Admitting their errors is the only way to save the product)</li></ol><p><strong>PS:</strong> <em>Gowalla is doing a great job on Twitter, they always answered my questions and if you go to their page they are always helping people out. For that thumbs up.</em></p>",
                "url": "http://localhost:4000/post/the-new-gowalla-approach/",
                
                
                "categories": ["Miscellaneous","socialmedia"],                
                
                "tags": ["Miscellaneous,socialmedia"],
                "date_published": "2011-09-24T00:00:00+01:00",
                "date_modified": "2011-09-24T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Why Disqus?",
                "content_text": "You may noticed that a few weeks ago I removed the normal comment system from my blog and added Disqus to it. Mainly I did this because of this tweet. I was getting too much spam on my comments.So, I was getting a lot of spam. And when I say a lot I’m not talking about a few tens of comments. No! I’m talking about more than 1000 comments a week. Those damn Russian dudes work hard on their titles …Giving a free ipad“ or even …Enlarge your penis right now!“.Classic stuff and for many time I didn’t bother to even mark then for spam. I just approve the real comments and ignore the spammers.But when I opened my comments review page and Google Chrome ask me if I want to translate the page from Russian to English that was my wake up call.So my first thought was: All my projects use or will use comments in the near future, so why not use a platform that can integrate all them in one place? This way I can do all the management at the same time.Right now I have a picture project called PicSome on Tumblr, just a small tumblr to post random photos to share with everyone. I have my dailypancake that also needs comments and obviously my personal blog right here. So if I can do all the approval work in one place that is just a time saving feature and I’m all about time saving features.But that was not the only feature that made me use Disqus. Hell, they have so much to offer that I’m impressed that not everyone is using  Disqus.So let’s check some of the features.  Real-time commenting system  Notification system  Reply system  Inline media embedding  Mobile commenting  Community profiles  Social integration  Liking and sharing  Moderation tools  Black-lists and white-lists  import and export comments  Theme customization  and many more…Like I said, Disqus has much to offer.  Let’s explain the main features.Real-time commenting systemThis is a great feature. This means that you can actually comment/reply in real time without having to worry about spam or waiting for your comment to be approved so everyone can see it.Notification SystemPretty self explanatory, I manage the comments so I can turn on and off notifications for my blogs. But the best thing is that you can also turn notifications on a thread, so you can get back and reply to that guy moaning at you. This is a pretty cool feature and it works not only for the Administrator but also for the good people that comment on the post.Inline Media embeddingDon’t actually find this useful, at least not for what I need Disqus, but in some projects that might come in handy to use. With this feature you can leave a comment, but you can leave not only text but also video, images or songs. So in some cases this can be useful. Tumblr blogs that only share photos can put this to a good use.**Mobile commenting **I’m all about responsive webdesign, so this is a must have feature. All my websites are mobile compatible (still have some things to correct though) so, if I’m using a plugin for comments I need it to work on my mobile version.Community ProfilesThis is actually a really neat feature. This means that if someone is actually logged into Discus, they can just use their account to comment and don’t even bother to login into one of their social accounts.Social IntegrationThis is probably the best feature. Everyone use at least one social network, Facebook, Twitter, google or any other. What this means is that people can actually use them to login and comment.With this I can forget about comments approval, just need to make the comments closed to a login, any kind of login (Disqus or social). There’s no way those …penis enlargement guys“ can spam me with this settings now. (evil smile)Liking and SharingThis is also a great feature. If I’m writing about something, I’ll appreciate a simple like or if you really liked the content a quick share with your pears. That would actually make my day. Now seriously, this is a precious feature. Everything a blogger wants is to get a little appreciation for the hard work. This is a great way for the reader to say …thank you“.Moderation toolsI’m not using this one, since I have my comments with some kind of login I think that’s enough, I choose to trust the community to be polite. Although if you need to moderate your comments you can do it, and the best thing is if you have 5 or even 10 blogs you do all the moderation in one place.Import and Export commentsYou are using other comment system and you are worried with what is going to happen to your comments already on that system like wordpress native comments system? Not to worry, you can do that just with a few clicks, is actually pretty easy.Theme customizationDisqus gives you the option to choose between two templates. Although if you need to make some changes you can do that just by adding some css in your customization options.I’m currently in the process to adding Disqus to Dailypancake. Still making a CSS file to the website so the comments can be well integrated. After that all of my projects that actually need comments will be using Disqus.After all this you may say: …Yes, but why didn’t you just protect your wordpress websites against spam with some captcha, or even make a required login for commenting?“Well that’s a good point, but let my explain why I think that is not the way to go.The CapchaThe capcha for me is always a buzz kill when I get on a website and feel like commenting. I one of those guys that normally have to try 2 or 3 times before being able to actually post the comment. Some times I don’t even bother to comment if the capcha system is too complex. The second thing about capcha is that most of the capcha systems are ugly and they’ll probably break your design. And that’s a no go for me.The required Login for commentingI can’t say this on a different way: I hate when I go to a wordpress blog and they make me create a account in the website just to leave a comment. That just looks like you are just after  real e-mails to sell or spam with newsletters. Since normally wordpress requires a valid e-mail for confirmation.With all this in mind, I think most of the times: I was just about to thank this guy for the awesome article and now I have to:  Register  Go to my e-mail and check my password  Come back to the website  Login  Change my password so I can comment the next time  Get back to the post  Write the comment  Seems like a lot of effort for just a thank you note don’t you think? For me, it is.In Conclusion:The best thing about Disqus is: your database will be free from all those spammers and you’ll don’t have to worry about all that cleaning after them. **The bad thing about Disqus is: ** you have to rely on Disqus for all the comments, so if the service goes down for maintenance, or God forbid the service goes down for ever you’ll stay with no comments for a while. My advice here is for you to do backups from Disqus to your wordpress system or whatever system you’re using so if this actually happens you just have to switch from one system to another again, keeping all the comments live.Let me know about other comment systems. What system do you use on your blog and why. And finally did you think it was a good move to integrate Disqus on my Blog?",
                "content_html": "<p>You may noticed that a few weeks ago I removed the normal comment system from my blog and added Disqus to it. Mainly I did this because of this <a href=\"http://twitter.com/#!/marcogmonteiro/status/110787813687033856\">tweet</a>. I was getting too much spam on my comments.</p><p>So, I was getting a lot of spam. And when I say a lot I’m not talking about a few tens of comments. No! I’m talking about more than 1000 comments a week. Those damn Russian dudes work hard on their titles …Giving a free ipad“ or even …Enlarge your penis right now!“.<!--more-->Classic stuff and for many time I didn’t bother to even mark then for spam. I just approve the real comments and ignore the spammers.</p><p>But when I opened my comments review page and Google Chrome ask me if I want to translate the page from Russian to English that was my wake up call.</p><p>So my first thought was: All my projects use or will use comments in the near future, so why not use a platform that can integrate all them in one place? This way I can do all the management at the same time.</p><p>Right now I have a picture project called PicSome on Tumblr, just a small tumblr to post random photos to share with everyone. I have my dailypancake that also needs comments and obviously my personal blog right here. So if I can do all the approval work in one place that is just a time saving feature and I’m all about time saving features.</p><p>But that was not the only feature that made me use Disqus. Hell, they have so much to offer that I’m impressed that not everyone is using  Disqus.</p><p>So let’s check some of the features.</p><ol>  <li>Real-time commenting system</li>  <li>Notification system</li>  <li>Reply system</li>  <li>Inline media embedding</li>  <li>Mobile commenting</li>  <li>Community profiles</li>  <li>Social integration</li>  <li>Liking and sharing</li>  <li>Moderation tools</li>  <li>Black-lists and white-lists</li>  <li>import and export comments</li>  <li>Theme customization</li>  <li>and many more…</li></ol><p>Like I said, Disqus has much to offer.  Let’s explain the main features.</p><p><strong>Real-time commenting system</strong></p><p>This is a great feature. This means that you can actually comment/reply in real time without having to worry about spam or waiting for your comment to be approved so everyone can see it.</p><p><strong>Notification System</strong></p><p>Pretty self explanatory, I manage the comments so I can turn on and off notifications for my blogs. But the best thing is that you can also turn notifications on a thread, so you can get back and reply to that guy moaning at you. This is a pretty cool feature and it works not only for the Administrator but also for the good people that comment on the post.</p><p><strong>Inline Media embedding</strong></p><p>Don’t actually find this useful, at least not for what I need Disqus, but in some projects that might come in handy to use. With this feature you can leave a comment, but you can leave not only text but also video, images or songs. So in some cases this can be useful. Tumblr blogs that only share photos can put this to a good use.</p><p>**Mobile commenting **</p><p>I’m all about responsive webdesign, so this is a must have feature. All my websites are mobile compatible (still have some things to correct though) so, if I’m using a plugin for comments I need it to work on my mobile version.</p><p><strong>Community Profiles</strong></p><p>This is actually a really neat feature. This means that if someone is actually logged into Discus, they can just use their account to comment and don’t even bother to login into one of their social accounts.</p><p><strong>Social Integration</strong></p><p>This is probably the best feature. Everyone use at least one social network, Facebook, Twitter, google or any other. What this means is that people can actually use them to login and comment.</p><p>With this I can forget about comments approval, just need to make the comments closed to a login, any kind of login (Disqus or social). There’s no way those …penis enlargement guys“ can spam me with this settings now. (evil smile)</p><p><strong>Liking and Sharing</strong></p><p>This is also a great feature. If I’m writing about something, I’ll appreciate a simple like or if you really liked the content a quick share with your pears. That would actually make my day. Now seriously, this is a precious feature. Everything a blogger wants is to get a little appreciation for the hard work. This is a great way for the reader to say …thank you“.</p><p><strong>Moderation tools</strong></p><p>I’m not using this one, since I have my comments with some kind of login I think that’s enough, I choose to trust the community to be polite. Although if you need to moderate your comments you can do it, and the best thing is if you have 5 or even 10 blogs you do all the moderation in one place.</p><p><strong>Import and Export comments</strong></p><p>You are using other comment system and you are worried with what is going to happen to your comments already on that system like wordpress native comments system? Not to worry, you can do that just with a few clicks, is actually pretty easy.</p><p><strong>Theme customization</strong></p><p>Disqus gives you the option to choose between two templates. Although if you need to make some changes you can do that just by adding some css in your customization options.</p><p>I’m currently in the process to adding Disqus to Dailypancake. Still making a CSS file to the website so the comments can be well integrated. After that all of my projects that actually need comments will be using Disqus.</p><p>After all this you may say: …Yes, but why didn’t you just protect your wordpress websites against spam with some captcha, or even make a required login for commenting?“</p><p>Well that’s a good point, but let my explain why I think that is not the way to go.</p><p><strong>The Capcha</strong></p><p>The capcha for me is always a buzz kill when I get on a website and feel like commenting. I one of those guys that normally have to try 2 or 3 times before being able to actually post the comment. Some times I don’t even bother to comment if the capcha system is too complex. The second thing about capcha is that most of the capcha systems are ugly and they’ll probably break your design. And that’s a no go for me.</p><p><strong>The required Login for commenting</strong></p><p>I can’t say this on a different way: I hate when I go to a wordpress blog and they make me create a account in the website just to leave a comment. That just looks like you are just after  real e-mails to sell or spam with newsletters. Since normally wordpress requires a valid e-mail for confirmation.</p><p>With all this in mind, I think most of the times: I was just about to thank this guy for the awesome article and now I have to:</p><ol>  <li>Register</li>  <li>Go to my e-mail and check my password</li>  <li>Come back to the website</li>  <li>Login</li>  <li>Change my password so I can comment the next time</li>  <li>Get back to the post</li>  <li>Write the comment</li>  <li>Seems like a lot of effort for just a thank you note don’t you think? For me, it is.</li></ol><p><strong>In Conclusion:</strong></p><p><strong>The best thing about Disqus is:</strong> your database will be free from all those spammers and you’ll don’t have to worry about all that cleaning after them. **The bad thing about Disqus is: ** you have to rely on Disqus for all the comments, so if the service goes down for maintenance, or God forbid the service goes down for ever you’ll stay with no comments for a while. My advice here is for you to do backups from Disqus to your wordpress system or whatever system you’re using so if this actually happens you just have to switch from one system to another again, keeping all the comments live.</p><p>Let me know about other comment systems. What system do you use on your blog and why. And finally did you think it was a good move to integrate Disqus on my Blog?</p>",
                "url": "http://localhost:4000/post/why-disqus/",
                
                
                "categories": ["blog","comment system","disqus"],                
                
                "tags": ["blog, comment system, disqus"],
                "date_published": "2011-09-13T00:00:00+01:00",
                "date_modified": "2011-09-13T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Vacation check-list",
                "content_text": "Looks like I’m on a two week vacation. Nothing better than do a simple check-list for the next two weeks so I don’t end up playing xbox all the time and nothing productive will come out of it.Since I’m not going away on actual vacation time this year, this is what I’ll try to do.Fun List:  Get to the end of GTA 4 for xbox. I think I can achieve this in one day.  Have some beers with the folks at my old place.  Visit Aveiro for some fun time at the beach.  Visit Oeiras for some fun time and if the weather allows some beach time too.  Visit my family. Since I’m working away from the old place.Hobby List:  Do a lot of Geocaching  Make some time for photography. Both normal and Lomo.Other List:  Making some changes to Admin Base. (CodeIgniter base CMS project for developers)  Make some progression on my current personal project.  Advance a bit on my blog post’s here. Already have some almost finished.  Make some time for DailyPancake.This is my list for the next two weeks. Let’s see if I can get it all done.To keep track of all this just follow my Twitter AccountI’ll probably be posting stuff there about all this.",
                "content_html": "<p>Looks like I’m on a two week vacation. Nothing better than do a simple check-list for the next two weeks so I don’t end up playing xbox all the time and nothing productive will come out of it.</p><p>Since I’m not going away on actual vacation time this year, this is what I’ll try to do.<!--more--><strong>Fun List:</strong></p><ol>  <li>Get to the end of GTA 4 for xbox. I think I can achieve this in one day.</li>  <li>Have some beers with the folks at my old place.</li>  <li>Visit Aveiro for some fun time at the beach.</li>  <li>Visit Oeiras for some fun time and if the weather allows some beach time too.</li>  <li>Visit my family. Since I’m working away from the old place.</li></ol><p><strong>Hobby List:</strong></p><ol>  <li>Do a lot of Geocaching</li>  <li>Make some time for photography. Both normal and Lomo.</li></ol><p><strong>Other List:</strong></p><ol>  <li>Making some changes to Admin Base. (CodeIgniter base CMS project for developers)</li>  <li>Make some progression on my current personal project.</li>  <li>Advance a bit on my blog post’s here. Already have some almost finished.</li>  <li>Make some time for DailyPancake.</li></ol><p>This is my list for the next two weeks. Let’s see if I can get it all done.To keep track of all this just follow my Twitter AccountI’ll probably be posting stuff there about all this.</p>",
                "url": "http://localhost:4000/post/vacation-check-list/",
                
                
                "categories": ["Miscellaneous","personal"],                
                
                "tags": ["Miscellaneous,personal"],
                "date_published": "2011-09-08T00:00:00+01:00",
                "date_modified": "2011-09-08T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Codeigniter? Damn right Codeigniter!",
                "content_text": "I’m a CodeIgniter lover, user and abuser. This is how I normally describe myself when I have to tell someone something about one of the greatest tools I’ve worked so far in webdevelopment and what I do with it. By now, if you worked with me at some point you know that I use CodeIgniter almost every day and I never get bored with it. And I hope to make you at the very least try it, if not, at least try to insight you in why I’m using it.How did I discovered CodeIgniter?I was at that point when you already know a bit of PHP, but you still sending some websites to the world always with some fears:Is it really secure?Is it really that fast?Did I make the right choice by using that piece of code from that random guy?Is this really a good work? After all I spent almost 3 months building this website.Many of us webdevelopers have come across with these questions. And I was sick and tired of it!So, I had a big project in hands. My boss, a flash developer / webdesigner, told me: “You should move off PHP and use a powerful framework like Ruby on Rails.” So I actually tried that. Did the usual tutorial were everything is beautiful “How to make a Blog in 15min”. But when I started to do some real work I had a problem, I was not familiar with Ruby. So I started asking myself: Why am I doing this? Starting all from the beginning when I already have some solid background with PHP.So the second step was in place: I was on the look for a PHP framework. My first choice was symfony. But I found that symfony had a big problem, the learning curve was to big for me. Even bigger than using Ruby on Rails. So symfony was a no go. I didn’t have the time to learn all that stuff because I had to start working on a real project soon.Then I tried CakePHP for a while. Like it but when I needed something more the lack of proper documentation was a big frustration, having to ask the community all the time for everything is not the way to go. I do prefer to make my own research and find my answers but I can only achieve this with proper documentation.And then I found CodeIgniter.Why did I end up choosing CodeIgniter?When I found CodeIgniter I started like everyone, the official blog tutorial on the website. And I felt in love right there.My first impressions with it:Just needed to download it and configure one or two files to start working.No need to use a console.And the documentation, God the documentation! I had an orgasm right there.The learning curve was probably the smallest I found on my look out for a Framework.This is just a small list on why I end up choosing CodeIgniter, but this small list says everything, every webdeveloper wants to get their hands dirty right away, and CodeIgniter can provide you with that perspective.Was it all good?At the beginning I have to say it was, but soon I started to find some problems like the lack of updates to the framework. At first I didn’t understood why. Many times I found a bug, just to find later that bug was already reported months ago and no update on the framework fixing the bug.This was probably the time when I found that CodeIgniter was just a side project of ElisLab, and if CodeIgniter was good enough for Expression Engine, then the community would just have to wait for the update. This made me realize that Codeigniter was not that community based. But that didn’t made me walk away from it, because I found that I was not the only one thinking that CodeIgniter should be more about the community.I’m glad that I didn’t walk away from it because a few weeks ago this happened: GitHub, Reactor, and v2.0.3.What about now?Well, now CodeIgniter is evolving even more, and better than that is going where the community want’s it to go, and that’s awesome. The community is becoming stronger and stronger. The official forums are always full of people, new people trying the Framework and old Gurus always willing to help the newbies.The documentation is still one of the best out there. Although I still think some improvements can be done here, like adding comments to all the subjects (although I think they are already working on that).More and more websites are featuring CodeIgniter everyday, just look at NetTuts with those awesome tutorials helping everyone that is just starting with this framework. Or even codeigniter.tv that is also helping the community or many others. The twitter community is also one of the best I’ve seen, and I’m glad that most of the CI Developers like me, choose Twitter for their main social network.The IRC channel always crowded with new people, and people always willing to help you in real time.Clearly there is much that can be done for CodeIgniter but that will be the community to decide and that’s the way it should have been for a long time now.So, if you are starting with CodeIgniter I have some advice.Download the Framework.Play with it. Do some tutorials, and learn about the MVC structure.Engage the community: If you think IRC is dead? Think again… Join the Forums and get help or help others getting started.Give something back! Release open-source code. Get feedback from other people on how to do stuff.Enjoy the ride! Nothing is worth it if you are not enjoying your work.",
                "content_html": "<p>I’m a CodeIgniter lover, user and abuser. This is how I normally describe myself when I have to tell someone something about one of the greatest tools I’ve worked so far in webdevelopment and what I do with it. By now, if you worked with me at some point you know that I use CodeIgniter almost every day and I never get bored with it. And I hope to make you at the very least try it, if not, at least try to insight you in why I’m using it.<!--more--><strong>How did I discovered CodeIgniter?</strong></p><p>I was at that point when you already know a bit of PHP, but you still sending some websites to the world always with some fears:</p><p>Is it really secure?</p><p>Is it really that fast?</p><p>Did I make the right choice by using that piece of code from that random guy?</p><p>Is this really a good work? After all I spent almost 3 months building this website.</p><p>Many of us webdevelopers have come across with these questions. And I was sick and tired of it!</p><p>So, I had a big project in hands. My boss, a flash developer / webdesigner, told me: “You should move off PHP and use a powerful framework like Ruby on Rails.” So I actually tried that. Did the usual tutorial were everything is beautiful “How to make a Blog in 15min”. But when I started to do some real work I had a problem, I was not familiar with Ruby. So I started asking myself: Why am I doing this? Starting all from the beginning when I already have some solid background with PHP.</p><p>So the second step was in place: I was on the look for a PHP framework. My first choice was symfony. But I found that symfony had a big problem, the learning curve was to big for me. Even bigger than using Ruby on Rails. So symfony was a no go. I didn’t have the time to learn all that stuff because I had to start working on a real project soon.</p><p>Then I tried CakePHP for a while. Like it but when I needed something more the lack of proper documentation was a big frustration, having to ask the community all the time for everything is not the way to go. I do prefer to make my own research and find my answers but I can only achieve this with proper documentation.</p><p>And then I found CodeIgniter.</p><p><strong>Why did I end up choosing CodeIgniter?</strong></p><p>When I found CodeIgniter I started like everyone, the official blog tutorial on the website. And I felt in love right there.My first impressions with it:</p><p>Just needed to download it and configure one or two files to start working.No need to use a console.And the documentation, God the documentation! I had an orgasm right there.The learning curve was probably the smallest I found on my look out for a Framework.This is just a small list on why I end up choosing CodeIgniter, but this small list says everything, every webdeveloper wants to get their hands dirty right away, and CodeIgniter can provide you with that perspective.</p><p><strong>Was it all good?</strong></p><p>At the beginning I have to say it was, but soon I started to find some problems like the lack of updates to the framework. At first I didn’t understood why. Many times I found a bug, just to find later that bug was already reported months ago and no update on the framework fixing the bug.</p><p>This was probably the time when I found that CodeIgniter was just a side project of ElisLab, and if CodeIgniter was good enough for Expression Engine, then the community would just have to wait for the update. This made me realize that Codeigniter was not that community based. But that didn’t made me walk away from it, because I found that I was not the only one thinking that CodeIgniter should be more about the community.</p><p>I’m glad that I didn’t walk away from it because a few weeks ago this happened: GitHub, Reactor, and v2.0.3.</p><p><strong>What about now?</strong></p><p>Well, now CodeIgniter is evolving even more, and better than that is going where the community want’s it to go, and that’s awesome. The community is becoming stronger and stronger. The official forums are always full of people, new people trying the Framework and old Gurus always willing to help the newbies.</p><p>The documentation is still one of the best out there. Although I still think some improvements can be done here, like adding comments to all the subjects (although I think they are already working on that).</p><p>More and more websites are featuring CodeIgniter everyday, just look at NetTuts with those awesome tutorials helping everyone that is just starting with this framework. Or even codeigniter.tv that is also helping the community or many others. The twitter community is also one of the best I’ve seen, and I’m glad that most of the CI Developers like me, choose Twitter for their main social network.</p><p>The IRC channel always crowded with new people, and people always willing to help you in real time.</p><p>Clearly there is much that can be done for CodeIgniter but that will be the community to decide and that’s the way it should have been for a long time now.</p><p><strong>So, if you are starting with CodeIgniter I have some advice.</strong></p><p>Download the Framework.</p><p>Play with it. Do some tutorials, and learn about the MVC structure.</p><p>Engage the community: If you think IRC is dead? Think again… Join the Forums and get help or help others getting started.</p><p>Give something back! Release open-source code. Get feedback from other people on how to do stuff.</p><p>Enjoy the ride! Nothing is worth it if you are not enjoying your work.</p>",
                "url": "http://localhost:4000/post/codeigniter-damn-right-codeigniter!/",
                
                
                "categories": ["ci","codeigniter","frameworks","php"],                
                
                "tags": ["ci,codeigniter,frameworks,php"],
                "date_published": "2011-09-04T00:00:00+01:00",
                "date_modified": "2011-09-04T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "The Semantic Grid System",
                "content_text": "A lot has been going on this year about responsive webdesign. Personally I think this is a great thing that finally webdesigners are awaken for the reality that webdesign can no longer be produced for one platform but for many.Web have tablets, smartphones, small screen laptops. This verity of platforms makes the job a bit difficult for a webdesigner, but a lot more interesting.Many webdesigners resolve this issue just by using a grid that can resize it self for all those platforms. But seriously? How responsive is that? I was a purist for a long time now, never used a grid for coding always made the code myself. I found that most of the grids were to generic, a lot of class’s and wrap divs that actually will never be used for nothing.So after reading this article I was blown away for finally finding a grid that is everything a responsive webdesigner wants.So go on a try it, I know I’ll be trying it on my next project.The Semantic Grid SystemAlso take a look at Less, another tool that you should start using right now.",
                "content_html": "<p>A lot has been going on this year about responsive webdesign. Personally I think this is a great thing that finally webdesigners are awaken for the reality that webdesign can no longer be produced for one platform but for many.</p><p>Web have tablets, smartphones, small screen laptops. This verity of platforms makes the job a bit difficult for a webdesigner, but a lot more interesting.<!--more-->Many webdesigners resolve this issue just by using a grid that can resize it self for all those platforms. But seriously? How responsive is that? I was a purist for a long time now, never used a grid for coding always made the code myself. I found that most of the grids were to generic, a lot of class’s and wrap divs that actually will never be used for nothing.</p><p>So after reading <a href=\"http://coding.smashingmagazine.com/2011/08/23/the-semantic-grid-system-page-layout-for-tomorrow/\">this article</a> I was blown away for finally finding a grid that is everything a responsive webdesigner wants.</p><p>So go on a try it, I know I’ll be trying it on my next project.</p><p><a href=\"http://semantic.gs/\">The Semantic Grid System</a>Also take a look at <a href=\"http://lesscss.org/\">Less</a>, another tool that you should start using right now.</p>",
                "url": "http://localhost:4000/post/the-semantic-grid-system/",
                
                
                "categories": ["css"],                
                
                "tags": ["css"],
                "date_published": "2011-08-28T00:00:00+01:00",
                "date_modified": "2011-08-28T00:00:00+01:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "Github, Reactor, And V2.0.3",
                "content_text": "If you are following CICON 2011 yesterday, then you no doubt already heard from the Reactor team: CodeIgniter is now using Git for source control, and has moved its home to GitHub. Also, CodeIgniter …Core“ is not longer being publicly maintained. CodeIgniter …Reactor“ is CodeIgniter, so we are dropping that suffix. In short: CodeIgniter is the framework, and Reactor is our community driven development program.Lastly, version 2.0.3 was released today, download it here or from the release tag at GitHub.For full details of our switch to Git, head over to the EllisLab blog.",
                "content_html": "<p>If you are following <a href=\"http://cicon2011.com/\">CICON 2011</a> yesterday, then you no doubt already heard from the Reactor team: CodeIgniter is now using Git for source control, and has moved its <a href=\"https://github.com/EllisLab/CodeIgniter\">home to GitHub</a>. Also, CodeIgniter …Core“ is not longer being publicly maintained. CodeIgniter …Reactor“ is CodeIgniter, so we are dropping that suffix. In short: CodeIgniter is the framework, and Reactor is our community driven development program.</p><p>Lastly, version 2.0.3 was released today, download it <a href=\"http://codeigniter.com/download.php\">here</a> or from the release tag at GitHub.</p><p>For full details of our switch to Git, head over to the <a href=\"http://ellislab.com/blog/comments/ellislab_switches_to_git_moves_to_github\">EllisLab blog</a>.</p>",
                "url": "http://localhost:4000/post/github,-reactor,-and-v2.0.3/",
                
                                
                
                "date_published": "2011-08-21T00:00:00+01:00",
                "date_modified": "2011-08-21T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "Why use a cms?",
                "content_text": "A while ago i received an e-mail with a future subject to write about on my blog and i was really glad, since that ment two things, people are reading and most of all are interested in my opinion.Therefore this week post will be all about free stuff and all you can actually make with it on the webdesign / webdev world.First i should show you guys the message that brought this subject here:It would be nice to write an article about the basics of getting intothe web developing world. Something like a 1st person experience, whatyou would do if your boss told you to make a prject from scrath.You could tell the story like this: if I wanna make a forum i use thistool, with this tool to manage the database and host the forum on thisserver. If I want to do a buisness site and dont want any publicity iuse this payed server and build the page using a cms. If you want tomake a blog i use this CMS and edite the css with this tool. For myart work i usually google it or go to deviant art and then edit theimages, etc…Did you get what i meant? Not a tecnical article but more an overviewthat your readers could consult to begin a project. Of course, onlywrite this if it doesn’t put you out of business :DLet’s begin.Do you know how to code?If you do you have two choices: or you start programming your own scripts and make your websites from scratch, or you can use some cool frameworks.If you are a hardcore developer you might want to try Ruby on rails, this got a lot of attention lately. This is almost like programming with Ruby but just for web.I tried this one out for a bit but end up sticking with php, not because i didn’t like it but because of my lack of time to actually use in the real world.Take a look at the framework here: http://rubyonrails.org/.There are some other frameworks that uses PHP and also with a MVC structure like Zend software, cakePHP or even CodeIgniter. Even if Zend isn’t totally free is really cool but now this is really just a mather of preference. /by the way you can place the Zend SDK on eclipse.Now if you don’t know how to code, or even if you know but your projects don’t need that much trouble you should begin exploring the CMS world. And there’s a lot to cover here so you have to be selective. Probably after this article you’ll know what to choose for your project.WordpressThis one is one of my favorites, not the first one i’ve used but still i like it a lot. I’ve used it to build my website and my blog. I gotta a say it really makes it easy for bloggers. The installation couldn’t be easier. The usage is even easier, anyone can mantain a wordpress website, so if you have a client that needs a small website or a blog this is the way to go, you just need a mysql database and a php5 server and you’ll be up and running with the latest Wordpress version.Download it now and start playig with it, or register yourself there and try it online, but there you can’t use ftp or any other access protocol to the website. Just http.JoomlaI’ve used this one a lot and i gotta a say, i love it. You can use it for almost everything, a small blog, a community website, a forum or whatever really. With some time in my hands i can make any website with Joomla. If you are interested in what kind of things you can make with it just visit my portfolio and almost every website from 2009 is made with it.Here’s a really good article about joomla that can start you up with joomla.Why joomlaFollow the links on the article and you’ll be amazed with what you can do with joomla.phpBBThis is a strong cms forum oriented that can help you a lot. I think it’s safe to say that more than 50% of the forums are built with this one. You can do almost anything: moderate, have all different kinds of permissions for users and admins. And the view it self if really easy to customize, if you don’t like the themes out there you can change one knowing just a little bit of css.In conclusion, if you look back you see that you can do almost anything with a cms’s. You have wordpress to build powerful blog’s and simple websites. If you want to build some complicated website you should definitely go with Joomla or Dupal. And to build a community you can always use phpBB.If you want to build some complicated website you should definitely go with Joomla or Dupal.To view some examples of all of this you can check my portfolio at www.marcomonteiro.net and see some examples.And fell free to comment if you have some doubts about what cms to use.Obviously you can be at the point where a cms is not enough you should go with a good framework and start coding. I hope i have help you guys understanding how easy it is to make to the webdev world.Next week i’ll give some directions on hosting an registering free domains.",
                "content_html": "<p>A while ago i received an e-mail with a future subject to write about on my blog and i was really glad, since that ment two things, people are reading and most of all are interested in my opinion.Therefore this week post will be all about free stuff and all you can actually make with it on the webdesign / webdev world.<!--more--><strong>First i should show you guys the message that brought this subject here:</strong></p><p>It would be nice to write an article about the basics of getting intothe web developing world. Something like a 1st person experience, whatyou would do if your boss told you to make a prject from scrath.</p><p>You could tell the story like this: if I wanna make a forum i use thistool, with this tool to manage the database and host the forum on thisserver. If I want to do a buisness site and dont want any publicity iuse this payed server and build the page using a cms. If you want tomake a blog i use this CMS and edite the css with this tool. For myart work i usually google it or go to deviant art and then edit theimages, etc…</p><p>Did you get what i meant? Not a tecnical article but more an overviewthat your readers could consult to begin a project. Of course, onlywrite this if it doesn’t put you out of business :D</p><p>Let’s begin.</p><p><strong>Do you know how to code?</strong>If you do you have two choices: or you start programming your own scripts and make your websites from scratch, or you can use some cool frameworks.If you are a hardcore developer you might want to try Ruby on rails, this got a lot of attention lately. This is almost like programming with Ruby but just for web.</p><p>I tried this one out for a bit but end up sticking with php, not because i didn’t like it but because of my lack of time to actually use in the real world.Take a look at the framework here: http://rubyonrails.org/.</p><p>There are some other frameworks that uses PHP and also with a MVC structure like Zend software, cakePHP or even CodeIgniter. Even if Zend isn’t totally free is really cool but now this is really just a mather of preference. /by the way you can place the Zend SDK on eclipse.</p><p>Now if you don’t know how to code, or even if you know but your projects don’t need that much trouble you should begin exploring the CMS world. And there’s a lot to cover here so you have to be selective. Probably after this article you’ll know what to choose for your project.</p><p><strong>Wordpress</strong></p><p>This one is one of my favorites, not the first one i’ve used but still i like it a lot. I’ve used it to build my website and my blog. I gotta a say it really makes it easy for bloggers. The installation couldn’t be easier. The usage is even easier, anyone can mantain a wordpress website, so if you have a client that needs a small website or a blog this is the way to go, you just need a mysql database and a php5 server and you’ll be up and running with the latest Wordpress version.</p><p>Download it now and start playig with it, or register yourself there and try it online, but there you can’t use ftp or any other access protocol to the website. Just http.</p><p><strong>Joomla</strong></p><p>I’ve used this one a lot and i gotta a say, i love it. You can use it for almost everything, a small blog, a community website, a forum or whatever really. With some time in my hands i can make any website with Joomla. If you are interested in what kind of things you can make with it just visit my portfolio and almost every website from 2009 is made with it.</p><p>Here’s a really good article about joomla that can start you up with joomla.</p><p>Why joomlaFollow the links on the article and you’ll be amazed with what you can do with joomla.</p><p><strong>phpBB</strong></p><p>This is a strong cms forum oriented that can help you a lot. I think it’s safe to say that more than 50% of the forums are built with this one. You can do almost anything: moderate, have all different kinds of permissions for users and admins. And the view it self if really easy to customize, if you don’t like the themes out there you can change one knowing just a little bit of css.</p><p>In conclusion, if you look back you see that you can do almost anything with a cms’s. You have wordpress to build powerful blog’s and simple websites. If you want to build some complicated website you should definitely go with Joomla or Dupal. And to build a community you can always use phpBB.</p><p>If you want to build some complicated website you should definitely go with Joomla or Dupal.</p><p>To view some examples of all of this you can check my portfolio at www.marcomonteiro.net and see some examples.And fell free to comment if you have some doubts about what cms to use.</p><p>Obviously you can be at the point where a cms is not enough you should go with a good framework and start coding. I hope i have help you guys understanding how easy it is to make to the webdev world.Next week i’ll give some directions on hosting an registering free domains.</p>",
                "url": "http://localhost:4000/post/why-use-a-cms/",
                
                
                "categories": ["cms","drupal","joomla","Webdesign","Webdev","wordpress"],                
                
                "tags": ["cms,drupal,joomla,Webdesign,Webdev,wordpress"],
                "date_published": "2010-11-20T00:00:00+00:00",
                "date_modified": "2010-11-20T00:00:00+00:00",
                
                "author":  "Marco Monteiro" 
                
            },
        
            {
                "title": "My Way Of Styling Part Ii",
                "content_text": "Last week i explained how to structure a good signature on your code and why. This week i’ll be explaining how i do my css coding and how i structure my files. First of all i’d like to point you to some useful websites that can help you get started coding with css.Ok now the next part and i’ll try to keep it clean and simple.First, how to divide my document? Well i do it the same way every single time. Top to bottom. So let’s imagine that your site is going to have this sections:Header / Navigation / Sidebar / Content / Footerthe division will be this exact same order. So the first thing i like to do is create something that let me know where i am when i’m scrolling trough my css file.For example i always create something like this:/* --------------------------------------------------------------HEADER* ALL THE HEADER STYLES. (includes search and breadcrumbs)-------------------------------------------------------------- */This simple division can help you and someone that is working with you to know where to put new code and to look for something. This division is big enough to highlight from the rest of the document and if you add information like (includes search and breadcumbs) that will help a lot because the header will probably have some other small stuff inside so it is a best practice to always do this.Remember always code in a way that other developer can continue your job, because your job is never finished.With that in mind you can begin your coding and there is some other point that i still have to mention in this article, always be specific and i say that for everything in your code. Some developers have some trouble naming stuff and they might call a navigation bar just a menu and that’s ok, but why not go beyond that and say horizontal-menu or even main navigation? you know, a website can have more than one menu and if you call it just “menu” what are you going to call the second menu? second-menu? i don’t think that is a good idea.With this in mind there’s one more thing where you have to be really specific: and that is the way you declare your classes and id’s in your file. One thing that you probably do quite a lot is something like this:.header{\tbackground: #000;}i’m sorry to say but for me this is wrong. The reason is really simple, when you look at that code can you tell me the markup that is using that class? No, you can’t! So why not declare the markup on your css like this:div.header{\tbackground: #000;}This tell me much more, now i know that the header will be a div. This small changes to your way of coding can be very useful to you and to your fellow developers.Of corse for a rulle like this there’s always an exception, if you use a class to more than one markup element than you can use the first example.On another matter on more thing i see a lot is code that does the exact same thing repeated over and over. This is really annoying. Imagine something like this:You are going to use a color for all the text on your site, and every-time you need it you declare a new class. Does that make any sense? Obviously not! So please try not to do it and reutilize your code.So what should you retain on this post:1 - Always structure your files Top to Bottom;2 - Always be specific with your naming and coding;3 - Don’t repeat yourself;4 - Reutilize your code;",
                "content_html": "<p>Last week i explained how to structure a good signature on your code and why. This week i’ll be explaining how i do my css coding and how i structure my files. First of all i’d like to point you to some useful websites that can help you get started coding with css.Ok now the next part and i’ll try to keep it clean and simple.<!--more-->First, how to divide my document? Well i do it the same way every single time. Top to bottom. So let’s imagine that your site is going to have this sections:</p><p>Header / Navigation / Sidebar / Content / Footer</p><p>the division will be this exact same order. So the first thing i like to do is create something that let me know where i am when i’m scrolling trough my css file.</p><p>For example i always create something like this:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>/* --------------------------------------------------------------HEADER* ALL THE HEADER STYLES. (includes search and breadcrumbs)-------------------------------------------------------------- */</code></pre></div></div><p>This simple division can help you and someone that is working with you to know where to put new code and to look for something. This division is big enough to highlight from the rest of the document and if you add information like (includes search and breadcumbs) that will help a lot because the header will probably have some other small stuff inside so it is a best practice to always do this.</p><p>Remember always code in a way that other developer can continue your job, because your job is never finished.</p><p>With that in mind you can begin your coding and there is some other point that i still have to mention in this article, always be specific and i say that for everything in your code. Some developers have some trouble naming stuff and they might call a navigation bar just a menu and that’s ok, but why not go beyond that and say horizontal-menu or even main navigation? you know, a website can have more than one menu and if you call it just “menu” what are you going to call the second menu? second-menu? i don’t think that is a good idea.</p><p>With this in mind there’s one more thing where you have to be really specific: and that is the way you declare your classes and id’s in your file. One thing that you probably do quite a lot is something like this:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>.header{\tbackground: #000;}</code></pre></div></div><p>i’m sorry to say but for me this is wrong. The reason is really simple, when you look at that code can you tell me the markup that is using that class? No, you can’t! So why not declare the markup on your css like this:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>div.header{\tbackground: #000;}</code></pre></div></div><p>This tell me much more, now i know that the header will be a div. This small changes to your way of coding can be very useful to you and to your fellow developers.</p><p>Of corse for a rulle like this there’s always an exception, if you use a class to more than one markup element than you can use the first example.</p><p>On another matter on more thing i see a lot is code that does the exact same thing repeated over and over. This is really annoying. Imagine something like this:You are going to use a color for all the text on your site, and every-time you need it you declare a new class. Does that make any sense? Obviously not! So please try not to do it and reutilize your code.</p><p>So what should you retain on this post:1 - Always structure your files Top to Bottom;2 - Always be specific with your naming and coding;3 - Don’t repeat yourself;4 - Reutilize your code;</p>",
                "url": "http://localhost:4000/post/my-way-of-styling-part-ii/",
                
                                
                
                "date_published": "2010-11-08T00:00:00+00:00",
                "date_modified": "2010-11-08T00:00:00+00:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "New Rss Feed",
                "content_text": "Dear visitor, if you have already subscribed to my rss feed i ask you one small favor: unsubscribe it and subscribe it again from the icon i have at the bottom of the page or use the image from this post.I’m asking this because i have forgotten to add my feed to feedburner therefore i wasn’t able to monitor your subscriptions. Also now you can see all the post in my feed, because if you are like me you want to be able read almost everything just in your rss client.I’m very sorry for the inconvenient but i think this will benefit both you and me.Have a nice Halloween",
                "content_html": "<p>Dear visitor, if you have already subscribed to my rss feed i ask you one small favor: unsubscribe it and subscribe it again from the icon i have at the bottom of the page or use the image from this post.</p><p>I’m asking this because i have forgotten to add my feed to feedburner therefore i wasn’t able to monitor your subscriptions. Also now you can see all the post in my feed, because if you are like me you want to be able read almost everything just in your rss client.</p><p>I’m very sorry for the inconvenient but i think this will benefit both you and me.</p><p>Have a nice Halloween</p>",
                "url": "http://localhost:4000/post/new-rss-feed/",
                
                                
                
                "date_published": "2010-10-28T00:00:00+01:00",
                "date_modified": "2010-10-28T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "My Way Of Styling Part 1",
                "content_text": "Well i’m a webdeveloper, therefore much of my work is making an idea come to reality, or making the website “alive”. That can be achieved with css among other things. This is my favorite thing to do on my daily work, styling a website. With this article i’ll be trying to show my process of doing this.First of all i try to use only one css file, but sometimes the file get’s so big that you might find useful to make some divisions. So, if you can’t use only one file try not to use more than 3, after that you will see the difference specially when someone is arriving to the website for the first time.Using only one file i would say that there’s no perfect way of coding, but still i’ll give it a go and show you mine.First bit of code:One thing that most developers tend to forget is the credits, hell if you have the hard work of making the code, and if in the end you are proud of what you done so why not put a little signature? This is my signature on every project i’ve worked so far:/*# -----------------------------------------------------------------------# Project name: here goes your project name# -----------------------------------------------------------------------# Copyright information:# Copyright (C) 2008-2009 ( company name ) All Rights Reserved.# @license - Copyrighted Commercial Software# This file may not be redistributed in whole or significant part.# -----------------------------------------------------------------------# Project information:# version: 0.0.0 (00/00/0000)# Tested in: Firefox; Chrome; Opera; Safari; IE8; IE7;# (this CSS will not be optimized for IE6 or any other before that)# -----------------------------------------------------------------------# Author info:# Name: Marco Monteiro# Country: Portugal# E-mail: mpmont@gmail.com or marco.monteiro@live.com# Twitter: http://www.twitter.com/MarcoM0nteir0# HomePage: http://marcomonteiro.net# -----------------------------------------------------------------------*/Let me explain why all of this is very important. The project name is self explanatory, you always want your projects to have a name. The copyright information is also very important, and always be very careful with this. Your client may not like what you put there if is not completely true.Next we have the project information, this is not only for other developers in case someone will be picking up where you left but also to keep track of your work. Always keep the version field up to date among with the date field. The “tested in” field is also important in case someone try to debug your code. One more thing, stop developing for IE6 at all cost, always try to explain to your client that you will probably need more time to debug the website for it to work in IE6 than making some cool features for the website.And the last one but not the least, your information!So, now you can see how this is a big deal, first you want to speed the word about your work, then if you are a webdeveloper like me you find yourself sometimes snooping around other peeps code, and sometimes you even want to contact the team that put all the work together but some other times you want to contact just the guy that made a portion of the job. That is why you should always do this, so get your own signature or use this one.The next step is to pick a good reset styles, this is very important and some developers tend to forget this, without this you will be having a lot more problems with different browsers and a bunch of other problems like strange margins or paddings that wasn’t suppose to be there in the first place./* --------------------------------------------------------------reset.css* Resets default browser CSS.-------------------------------------------------------------- */html, body, div, span, object, iframe,h1, h2, h3, h4, h5, h6, p, blockquote, pre,a, abbr, acronym, address, code,del, dfn, em, img, q, dl, dt, dd, ol, ul, li,fieldset, form, label, legend,table, caption, tbody, tfoot, thead, tr, th, td {  margin: 0;  padding: 0;  border: 0;  font-weight: inherit;  font-style: inherit;  font-size: 100%;  font-family: inherit;  vertical-align: baseline;}em {\tfont-style: italic;}table {\tborder-collapse: separate; border-spacing: 0;}caption, th, td {\ttext-align: left; font-weight: normal;}table, td, th {\tvertical-align: middle;}blockquote:before, blockquote:after, q:before, q:after {\tcontent: “”;}blockquote, q {\tquotes: ”” “”;}a img {\tborder: none;}html, body{\tmargin:0;\tpadding:0;\ttext-align:center;\tbackground: none;}This is the one i use, but there’s much more you just need to google it for a bit, the last one that i’ve seen and that caught my attention was this one: http://developer.yahoo.com/yui/reset/So this is the first part of my way of styling and the thing you have to retain on this one is: always put your signature on your work, and use a good “reset styles” so you don’t get in trouble in the near future.Next week i’ll be covering on how to divide your file and and some rules that i always apply when i’m styling some markup.",
                "content_html": "<p>Well i’m a webdeveloper, therefore much of my work is making an idea come to reality, or making the website “alive”. That can be achieved with css among other things. This is my favorite thing to do on my daily work, styling a website. With this article i’ll be trying to show my process of doing this.</p><p>First of all i try to use only one css file, but sometimes the file get’s so big that you might find useful to make some divisions. So, if you can’t use only one file try not to use more than 3, after that you will see the difference specially when someone is arriving to the website for the first time.<!--more-->Using only one file i would say that there’s no perfect way of coding, but still i’ll give it a go and show you mine.</p><p>First bit of code:One thing that most developers tend to forget is the credits, hell if you have the hard work of making the code, and if in the end you are proud of what you done so why not put a little signature? This is my signature on every project i’ve worked so far:</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>/*# -----------------------------------------------------------------------# Project name: here goes your project name# -----------------------------------------------------------------------# Copyright information:# Copyright (C) 2008-2009 ( company name ) All Rights Reserved.# @license - Copyrighted Commercial Software# This file may not be redistributed in whole or significant part.# -----------------------------------------------------------------------# Project information:# version: 0.0.0 (00/00/0000)# Tested in: Firefox; Chrome; Opera; Safari; IE8; IE7;# (this CSS will not be optimized for IE6 or any other before that)# -----------------------------------------------------------------------# Author info:# Name: Marco Monteiro# Country: Portugal# E-mail: mpmont@gmail.com or marco.monteiro@live.com# Twitter: http://www.twitter.com/MarcoM0nteir0# HomePage: http://marcomonteiro.net# -----------------------------------------------------------------------*/</code></pre></div></div><p>Let me explain why all of this is very important. The project name is self explanatory, you always want your projects to have a name. The copyright information is also very important, and always be very careful with this. Your client may not like what you put there if is not completely true.</p><p>Next we have the project information, this is not only for other developers in case someone will be picking up where you left but also to keep track of your work. Always keep the version field up to date among with the date field. The “tested in” field is also important in case someone try to debug your code. One more thing, stop developing for IE6 at all cost, always try to explain to your client that you will probably need more time to debug the website for it to work in IE6 than making some cool features for the website.</p><p>And the last one but not the least, your information!So, now you can see how this is a big deal, first you want to speed the word about your work, then if you are a webdeveloper like me you find yourself sometimes snooping around other peeps code, and sometimes you even want to contact the team that put all the work together but some other times you want to contact just the guy that made a portion of the job. That is why you should always do this, so get your own signature or use this one.</p><p>The next step is to pick a good reset styles, this is very important and some developers tend to forget this, without this you will be having a lot more problems with different browsers and a bunch of other problems like strange margins or paddings that wasn’t suppose to be there in the first place.</p><div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>/* --------------------------------------------------------------reset.css* Resets default browser CSS.-------------------------------------------------------------- */html, body, div, span, object, iframe,h1, h2, h3, h4, h5, h6, p, blockquote, pre,a, abbr, acronym, address, code,del, dfn, em, img, q, dl, dt, dd, ol, ul, li,fieldset, form, label, legend,table, caption, tbody, tfoot, thead, tr, th, td {  margin: 0;  padding: 0;  border: 0;  font-weight: inherit;  font-style: inherit;  font-size: 100%;  font-family: inherit;  vertical-align: baseline;}em {\tfont-style: italic;}table {\tborder-collapse: separate; border-spacing: 0;}caption, th, td {\ttext-align: left; font-weight: normal;}table, td, th {\tvertical-align: middle;}blockquote:before, blockquote:after, q:before, q:after {\tcontent: “”;}blockquote, q {\tquotes: ”” “”;}a img {\tborder: none;}html, body{\tmargin:0;\tpadding:0;\ttext-align:center;\tbackground: none;}</code></pre></div></div><p>This is the one i use, but there’s much more you just need to google it for a bit, the last one that i’ve seen and that caught my attention was this one: http://developer.yahoo.com/yui/reset/</p><p>So this is the first part of my way of styling and the thing you have to retain on this one is: always put your signature on your work, and use a good “reset styles” so you don’t get in trouble in the near future.</p><p>Next week i’ll be covering on how to divide your file and and some rules that i always apply when i’m styling some markup.</p>",
                "url": "http://localhost:4000/post/my-way-of-styling-part-1/",
                
                                
                
                "date_published": "2010-10-26T00:00:00+01:00",
                "date_modified": "2010-10-26T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            },
        
            {
                "title": "Hello There",
                "content_text": "Hello there and welcome to my blog.i’ll be using this place  for three things, first i’ll be sharing my opinion about things on the web, new ways of making things. What is the best way to make stuff that actually works for the general user. So this will be the main purpose of this place!Second, i’ll try to inspire you every now and then with some cool stuff i find, and obviously share work done by others that might inspire you to do even better things. So at least once a week i’ll try to share stuff that could inspire your work. Could be a video, could be an image, or even some work from a guy on the other end of the world that could change the way things are done or work.And the least but not the last, i’m a movie and tvshow freak, so probably if cross paths with something awesome that could change your life, i’ll probably share it here to!So this is it, this is where i tell the world: screw you, i have my own opinion!",
                "content_html": "<p>Hello there and welcome to my blog.</p><p>i’ll be using this place  for three things, first i’ll be sharing my opinion about things on the web, new ways of making things. What is the best way to make stuff that actually works for the general user. So this will be the main purpose of this place!</p><p>Second, i’ll try to inspire you every now and then with some cool stuff i find, and obviously share work done by others that might inspire you to do even better things. So at least once a week i’ll try to share stuff that could inspire your work. Could be a video, could be an image, or even some work from a guy on the other end of the world that could change the way things are done or work.</p><p>And the least but not the last, i’m a movie and tvshow freak, so probably if cross paths with something awesome that could change your life, i’ll probably share it here to!</p><p>So this is it, this is where i tell the world: screw you, i have my own opinion!</p>",
                "url": "http://localhost:4000/post/hello-there/",
                
                                
                
                "date_published": "2010-10-13T00:00:00+01:00",
                "date_modified": "2010-10-13T00:00:00+01:00",
                
                "author":  "Blog++" 
                
            }
        
    ],
    "pages": [
            
            {
                "id": "404 <br> sorry this page can not be found.",
                "title": "404 <br> Sorry this page can not be found.",
                "content_text": "I moved my blog a lot in the last few year, so maybe the post you’re looking for is an old link. I’m sure you’ll find it if you search for it.  Go backOr you can tweet me the link so I can fix it.",
                "content_html": "<p>I moved my blog a lot in the last few year, so maybe the post you’re looking for is an old link. I’m sure you’ll find it if you search for it.</p><iframe src=\"https://duckduckgo.com/search.html?site=blog.marcomonteiro.net&amp;prefill=Search\" style=\"overflow:hidden;margin:0;padding:0;width:408px;height:40px;\" frameborder=\"0\"></iframe><blockquote>  <p>Go <a href=\"/\">back</a></p></blockquote><p>Or you can tweet me the link so I can fix it.</p>",
                "url": "http://localhost:4000/404.html",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "web-developer & rider",
                "title": "Web-developer & rider",
                "content_text": "I’ve been working as a web-developer for 12 years. I first started as a Front-end developer, working with HTML, CSS and JavaScript. A guy has to start somewhere!After that I’ve done some work with Joomla and Wordpress (I know right? SHAME bell ringing), building some custom plugins, components and templates. Now I work mostly as a full PHP developer building rich applications with PHP MVC frameworks like CodeIgniter and Laravel (even though this one is not really mvc anymore).I also do loads of project managment stuff, on my full time job I’m the Lead Developer in a team of 5.In my free time I love riding my mountain bike and my motorcycle, I also love video games but I don’t get to play them as much these days.You can visit my personal website at: www.marcomonteiro.net. Thanks for stopping by muchacho!",
                "content_html": "<p>I’ve been working as a web-developer for 12 years. I first started as a Front-end developer, working with HTML, CSS and JavaScript. A guy has to start somewhere!</p><p>After that I’ve done some work with Joomla and Wordpress (I know right? SHAME bell ringing), building some custom plugins, components and templates. Now I work mostly as a full PHP developer building rich applications with PHP MVC frameworks like CodeIgniter and Laravel (even though this one is not really mvc anymore).</p><p>I also do loads of project managment stuff, on my full time job I’m the Lead Developer in a team of 5.</p><p>In my free time I love riding my mountain bike and my motorcycle, I also love video games but I don’t get to play them as much these days.</p><p>You can visit my personal website at: www.marcomonteiro.net. Thanks for stopping by muchacho!</p>",
                "url": "http://localhost:4000/about.html",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "",
                "title": null,
                "content_text": "{    \"website_title\": \"{{ site.title | xml_escape }}\",    \"website_url\": \"{{ \"/\" | absolute_url }}\",    \"posts\": [        {% for post in site.posts %}            {                \"title\": {{ post.title | jsonify }},                \"content_text\": {{ post.content | strip_html | strip_newlines | jsonify }},                \"content_html\": {{ post.content | strip_newlines | jsonify }},                \"url\": \"{{ post.url | absolute_url }}\",                {% if post.image.size > 0 %}                \"image\": {{ post.image | jsonify }},{% endif %}                {% if post.categories.size > 0 %}                \"categories\": {{ post.categories | jsonify }},{% endif %}                                {% if post.tags.size > 0 %}                \"tags\": {{ post.tags | jsonify }},{% endif %}                \"date_published\": \"{{ post.date | date_to_xmlschema }}\",                \"date_modified\": \"{{ post.date | date_to_xmlschema }}\",                {% if post.author %}                \"author\": {% if post.author.name %} \"{{ post.author.name }}\" {% else %} \"{{ post.author }}\" {% endif %}                {% else %}                \"author\": {% if site.author.name %} \"{{ site.author.name }}\" {% else %} \"{{ site.author }}\" {% endif %}                {% endif %}            }{% if forloop.last == false %},{% endif %}        {% endfor %}    ],    \"pages\": [            {% for page in site.pages %}            {                \"id\": {{page.title | downcase | jsonify}},                \"title\": {{ page.title | jsonify }},                \"content_text\": {{ page.content | strip_html | strip_newlines | jsonify }},                \"content_html\": {{ page.content | strip_newlines | jsonify }},                \"url\": \"{{ page.url | absolute_url }}\",                \"date_published\": \"{{ page.date | date_to_xmlschema }}\",                \"date_modified\": \"{{ page.date | date_to_xmlschema }}\"            }{% if forloop.last == false %},{% endif %}        {% endfor %}    ]           }",
                "content_html": "{    \"website_title\": \"{{ site.title | xml_escape }}\",    \"website_url\": \"{{ \"/\" | absolute_url }}\",    \"posts\": [        {% for post in site.posts %}            {                \"title\": {{ post.title | jsonify }},                \"content_text\": {{ post.content | strip_html | strip_newlines | jsonify }},                \"content_html\": {{ post.content | strip_newlines | jsonify }},                \"url\": \"{{ post.url | absolute_url }}\",                {% if post.image.size > 0 %}                \"image\": {{ post.image | jsonify }},{% endif %}                {% if post.categories.size > 0 %}                \"categories\": {{ post.categories | jsonify }},{% endif %}                                {% if post.tags.size > 0 %}                \"tags\": {{ post.tags | jsonify }},{% endif %}                \"date_published\": \"{{ post.date | date_to_xmlschema }}\",                \"date_modified\": \"{{ post.date | date_to_xmlschema }}\",                {% if post.author %}                \"author\": {% if post.author.name %} \"{{ post.author.name }}\" {% else %} \"{{ post.author }}\" {% endif %}                {% else %}                \"author\": {% if site.author.name %} \"{{ site.author.name }}\" {% else %} \"{{ site.author }}\" {% endif %}                {% endif %}            }{% if forloop.last == false %},{% endif %}        {% endfor %}    ],    \"pages\": [            {% for page in site.pages %}            {                \"id\": {{page.title | downcase | jsonify}},                \"title\": {{ page.title | jsonify }},                \"content_text\": {{ page.content | strip_html | strip_newlines | jsonify }},                \"content_html\": {{ page.content | strip_newlines | jsonify }},                \"url\": \"{{ page.url | absolute_url }}\",                \"date_published\": \"{{ page.date | date_to_xmlschema }}\",                \"date_modified\": \"{{ page.date | date_to_xmlschema }}\"            }{% if forloop.last == false %},{% endif %}        {% endfor %}    ]           }",
                "url": "http://localhost:4000/api.json",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "blog",
                "title": "Blog",
                "content_text": "",
                "content_html": "",
                "url": "http://localhost:4000/",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "blog",
                "title": "Blog",
                "content_text": "",
                "content_html": "",
                "url": "http://localhost:4000/page2/",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "blog",
                "title": "Blog",
                "content_text": "",
                "content_html": "",
                "url": "http://localhost:4000/page3/",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "blog",
                "title": "Blog",
                "content_text": "",
                "content_html": "",
                "url": "http://localhost:4000/page4/",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "blog",
                "title": "Blog",
                "content_text": "",
                "content_html": "",
                "url": "http://localhost:4000/page5/",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "blog",
                "title": "Blog",
                "content_text": "",
                "content_html": "",
                "url": "http://localhost:4000/page6/",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "blog",
                "title": "Blog",
                "content_text": "",
                "content_html": "",
                "url": "http://localhost:4000/page7/",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "blog",
                "title": "Blog",
                "content_text": "",
                "content_html": "",
                "url": "http://localhost:4000/page8/",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "blog",
                "title": "Blog",
                "content_text": "",
                "content_html": "",
                "url": "http://localhost:4000/page9/",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "blog",
                "title": "Blog",
                "content_text": "",
                "content_html": "",
                "url": "http://localhost:4000/page10/",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "blog",
                "title": "Blog",
                "content_text": "",
                "content_html": "",
                "url": "http://localhost:4000/page11/",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "blog",
                "title": "Blog",
                "content_text": "",
                "content_html": "",
                "url": "http://localhost:4000/page12/",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "",
                "title": null,
                "content_text": "{% if page.xsl %}{% endif %}{% assign collections = site.collections | where_exp:'collection','collection.output != false' %}{% for collection in collections %}{% assign docs = collection.docs | where_exp:'doc','doc.sitemap != false' %}{% for doc in docs %}{{ doc.url | replace:'/index.html','/' | absolute_url | xml_escape }}{% if doc.last_modified_at or doc.date %}{{ doc.last_modified_at | default: doc.date | date_to_xmlschema }}{% endif %}{% endfor %}{% endfor %}{% assign pages = site.html_pages | where_exp:'doc','doc.sitemap != false' | where_exp:'doc','doc.url != \"/404.html\"' %}{% for page in pages %}{{ page.url | replace:'/index.html','/' | absolute_url | xml_escape }}{% if page.last_modified_at %}{{ page.last_modified_at | date_to_xmlschema }}{% endif %}{% endfor %}{% assign static_files = page.static_files | where_exp:'page','page.sitemap != false' | where_exp:'page','page.name != \"404.html\"' %}{% for file in static_files %}{{ file.path | replace:'/index.html','/' | absolute_url | xml_escape }}{{ file.modified_time | date_to_xmlschema }}{% endfor %}",
                "content_html": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>{% if page.xsl %}<?xml-stylesheet type=\"text/xsl\" href=\"{{ \"/sitemap.xsl\" | absolute_url }}\"?>{% endif %}<urlset xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd\" xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">{% assign collections = site.collections | where_exp:'collection','collection.output != false' %}{% for collection in collections %}{% assign docs = collection.docs | where_exp:'doc','doc.sitemap != false' %}{% for doc in docs %}<url><loc>{{ doc.url | replace:'/index.html','/' | absolute_url | xml_escape }}</loc>{% if doc.last_modified_at or doc.date %}<lastmod>{{ doc.last_modified_at | default: doc.date | date_to_xmlschema }}</lastmod>{% endif %}</url>{% endfor %}{% endfor %}{% assign pages = site.html_pages | where_exp:'doc','doc.sitemap != false' | where_exp:'doc','doc.url != \"/404.html\"' %}{% for page in pages %}<url><loc>{{ page.url | replace:'/index.html','/' | absolute_url | xml_escape }}</loc>{% if page.last_modified_at %}<lastmod>{{ page.last_modified_at | date_to_xmlschema }}</lastmod>{% endif %}</url>{% endfor %}{% assign static_files = page.static_files | where_exp:'page','page.sitemap != false' | where_exp:'page','page.name != \"404.html\"' %}{% for file in static_files %}<url><loc>{{ file.path | replace:'/index.html','/' | absolute_url | xml_escape }}</loc><lastmod>{{ file.modified_time | date_to_xmlschema }}</lastmod></url>{% endfor %}</urlset>",
                "url": "http://localhost:4000/sitemap.xml",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "",
                "title": null,
                "content_text": "Sitemap: {{ \"sitemap.xml\" | absolute_url }}",
                "content_html": "Sitemap: {{ \"sitemap.xml\" | absolute_url }}",
                "url": "http://localhost:4000/robots.txt",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "",
                "title": null,
                "content_text": "{% if page.xsl %}{% endif %}Jekyll{{ site.time | date_to_xmlschema }}{{ page.url | absolute_url | xml_escape }}{% assign title = site.title | default: site.name %}{% if page.collection != \"posts\" %}{% assign collection = page.collection | capitalize %}{% assign title = title | append: \" | \" | append: collection %}{% endif %}{% if page.category %}{% assign category = page.category | capitalize %}{% assign title = title | append: \" | \" | append: category %}{% endif %}{% if title %}{{ title | smartify | xml_escape }}{% endif %}{% if site.description %}{{ site.description | xml_escape }}{% endif %}{% if site.author %}{{ site.author.name | default: site.author | xml_escape }}{% if site.author.email %}{{ site.author.email | xml_escape }}{% endif %}{% if site.author.uri %}{{ site.author.uri | xml_escape }}{% endif %}{% endif %}{% assign posts = site[page.collection] | where_exp: \"post\", \"post.draft != true\" | sort: \"date\" | reverse %}{% if page.category %}{% assign posts = posts | where: \"category\",page.category %}{% endif %}{% for post in posts limit: 10 %}{{ post.title | smartify | strip_html | normalize_whitespace | xml_escape }}{{ post.date | date_to_xmlschema }}{{ post.last_modified_at | default: post.date | date_to_xmlschema }}{{ post.id | absolute_url | xml_escape }}{% assign excerpt_only = post.feed.excerpt_only | default: site.feed.excerpt_only %}{% unless excerpt_only %}{{ post.content | strip | xml_escape }}{% endunless %}{% assign post_author = post.author | default: post.authors[0] | default: site.author %}{% assign post_author = site.data.authors[post_author] | default: post_author %}{% assign post_author_email = post_author.email | default: nil %}{% assign post_author_uri = post_author.uri | default: nil %}{% assign post_author_name = post_author.name | default: post_author %}{{ post_author_name | default: \"\" | xml_escape }}{% if post_author_email %}{{ post_author_email | xml_escape }}{% endif %}{% if post_author_uri %}{{ post_author_uri | xml_escape }}{% endif %}{% if post.category %}{% endif %}{% for tag in post.tags %}{% endfor %}{% if post.excerpt and post.excerpt != empty %}{{ post.excerpt | strip_html | normalize_whitespace | xml_escape }}{% endif %}{% assign post_image = post.image.path | default: post.image %}{% if post_image %}{% unless post_image contains \"://\" %}{% assign post_image = post_image | absolute_url %}{% endunless %}{% endif %}{% endfor %}",
                "content_html": "<?xml version=\"1.0\" encoding=\"utf-8\"?>{% if page.xsl %}<?xml-stylesheet type=\"text/xml\" href=\"{{ '/feed.xslt.xml' | absolute_url }}\"?>{% endif %}<feed xmlns=\"http://www.w3.org/2005/Atom\" {% if site.lang %}xml:lang=\"{{ site.lang }}\"{% endif %}><generator uri=\"https://jekyllrb.com/\" version=\"{{ jekyll.version }}\">Jekyll</generator><link href=\"{{ page.url | absolute_url }}\" rel=\"self\" type=\"application/atom+xml\" /><link href=\"{{ '/' | absolute_url }}\" rel=\"alternate\" type=\"text/html\" {% if site.lang %}hreflang=\"{{ site.lang }}\" {% endif %}/><updated>{{ site.time | date_to_xmlschema }}</updated><id>{{ page.url | absolute_url | xml_escape }}</id>{% assign title = site.title | default: site.name %}{% if page.collection != \"posts\" %}{% assign collection = page.collection | capitalize %}{% assign title = title | append: \" | \" | append: collection %}{% endif %}{% if page.category %}{% assign category = page.category | capitalize %}{% assign title = title | append: \" | \" | append: category %}{% endif %}{% if title %}<title type=\"html\">{{ title | smartify | xml_escape }}</title>{% endif %}{% if site.description %}<subtitle>{{ site.description | xml_escape }}</subtitle>{% endif %}{% if site.author %}<author><name>{{ site.author.name | default: site.author | xml_escape }}</name>{% if site.author.email %}<email>{{ site.author.email | xml_escape }}</email>{% endif %}{% if site.author.uri %}<uri>{{ site.author.uri | xml_escape }}</uri>{% endif %}</author>{% endif %}{% assign posts = site[page.collection] | where_exp: \"post\", \"post.draft != true\" | sort: \"date\" | reverse %}{% if page.category %}{% assign posts = posts | where: \"category\",page.category %}{% endif %}{% for post in posts limit: 10 %}<entry{% if post.lang %}{{\" \"}}xml:lang=\"{{ post.lang }}\"{% endif %}><title type=\"html\">{{ post.title | smartify | strip_html | normalize_whitespace | xml_escape }}</title><link href=\"{{ post.url | absolute_url }}\" rel=\"alternate\" type=\"text/html\" title=\"{{ post.title | xml_escape }}\" /><published>{{ post.date | date_to_xmlschema }}</published><updated>{{ post.last_modified_at | default: post.date | date_to_xmlschema }}</updated><id>{{ post.id | absolute_url | xml_escape }}</id>{% assign excerpt_only = post.feed.excerpt_only | default: site.feed.excerpt_only %}{% unless excerpt_only %}<content type=\"html\" xml:base=\"{{ post.url | absolute_url | xml_escape }}\">{{ post.content | strip | xml_escape }}</content>{% endunless %}{% assign post_author = post.author | default: post.authors[0] | default: site.author %}{% assign post_author = site.data.authors[post_author] | default: post_author %}{% assign post_author_email = post_author.email | default: nil %}{% assign post_author_uri = post_author.uri | default: nil %}{% assign post_author_name = post_author.name | default: post_author %}<author><name>{{ post_author_name | default: \"\" | xml_escape }}</name>{% if post_author_email %}<email>{{ post_author_email | xml_escape }}</email>{% endif %}{% if post_author_uri %}<uri>{{ post_author_uri | xml_escape }}</uri>{% endif %}</author>{% if post.category %}<category term=\"{{ post.category | xml_escape }}\" />{% endif %}{% for tag in post.tags %}<category term=\"{{ tag | xml_escape }}\" />{% endfor %}{% if post.excerpt and post.excerpt != empty %}<summary type=\"html\">{{ post.excerpt | strip_html | normalize_whitespace | xml_escape }}</summary>{% endif %}{% assign post_image = post.image.path | default: post.image %}{% if post_image %}{% unless post_image contains \"://\" %}{% assign post_image = post_image | absolute_url %}{% endunless %}<media:thumbnail xmlns:media=\"http://search.yahoo.com/mrss/\" url=\"{{ post_image | xml_escape }}\" /><media:content medium=\"image\" url=\"{{ post_image | xml_escape }}\" xmlns:media=\"http://search.yahoo.com/mrss/\" />{% endif %}</entry>{% endfor %}</feed>",
                "url": "http://localhost:4000/feed.xml",
                "date_published": "",
                "date_modified": ""
            }
        
    ]           
}