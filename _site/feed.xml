<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-08-20T20:53:11+01:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Blog++</title><author><name>Blog++</name><email>marco@marcomonteiro.net</email></author><entry><title type="html">How to setup Codeigniter 4</title><link href="http://localhost:4000/post/how-to-setup-codeigniter-4/" rel="alternate" type="text/html" title="How to setup Codeigniter 4" /><published>2020-07-04T00:00:00+01:00</published><updated>2020-07-04T00:00:00+01:00</updated><id>http://localhost:4000/post/how-to-setup-codeigniter-4</id><content type="html" xml:base="http://localhost:4000/post/how-to-setup-codeigniter-4/">&lt;p&gt;I started a brand new &lt;a href=&quot;https://www.youtube.com/channel/UC9HQjernJPHN-RoKMwtYQ4w&quot;&gt;youtube channel&lt;/a&gt;. It’s called &lt;a href=&quot;https://www.youtube.com/channel/UC9HQjernJPHN-RoKMwtYQ4w&quot;&gt;TIL Things&lt;/a&gt;. As in Today I Learned Things. The idea is to share kinda the same thing I normally do here but in a video format.&lt;/p&gt;

&lt;p&gt;To start things, I decided to do a video series about Codeigniter 4, from how to install it, how it works and building a small blog application with it.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Here’s the first video. I hope you can enjoy it and if you do please consider liking and subscribing.&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;400&quot; src=&quot;https://www.youtube.com/embed/tSdbT0GMEqU&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;All the code that will exist in these series will live in the following github repository.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mpmont/ci4-screencasts&quot;&gt;Github&lt;/a&gt;&lt;/p&gt;</content><author><name>Marco Monteiro</name></author><category term="codeigniter 4, docker, linux, php,2020" /><summary type="html">I started a brand new youtube channel. It’s called TIL Things. As in Today I Learned Things. The idea is to share kinda the same thing I normally do here but in a video format.</summary></entry><entry><title type="html">My work setup - 2020 update</title><link href="http://localhost:4000/post/my-work-setup-2020-update/" rel="alternate" type="text/html" title="My work setup - 2020 update" /><published>2020-06-18T00:00:00+01:00</published><updated>2020-06-18T00:00:00+01:00</updated><id>http://localhost:4000/post/my-work-setup-2020-update</id><content type="html" xml:base="http://localhost:4000/post/my-work-setup-2020-update/">&lt;p&gt;It’s mid 2020, Ubuntu has a new LTS release and with it its time to try a few things and actually update. As you know I’m now using Pop!OS a distro based on Ubuntu. I already wrote an entire blog post about it. Now I’m going to show you the actual tools I use at the moment.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;operating-system&quot;&gt;&lt;strong&gt;OPERATING SYSTEM&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://pop.system76.com/&quot;&gt;Pop!OS&lt;/a&gt; is designed for fast navigation, easy workspace organization, and fluid, convenient workflow. Your operating system should encourage discovery, not obstruct it. It uses gnome by default and that’s what I use.&lt;/p&gt;

&lt;p&gt;Here’s the look of it when I load it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/mXV0OZx.png&quot; alt=&quot;Desktop&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here’s the theme and icons that I’m using.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/WDLwzXl.png&quot; alt=&quot;neofetch&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;terminal-emulator&quot;&gt;&lt;strong&gt;TERMINAL EMULATOR&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;As you can see from that neofech print, I’m now using &lt;a href=&quot;https://github.com/alacritty/alacritty&quot;&gt;Alacritty&lt;/a&gt;, I’ve been a long term terminator user, but ever since I discovered Alacritty I never went back.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/ABbhg8a.png&quot; alt=&quot;Alacritty&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Alacritty is a terminal emulator with a strong focus on simplicity and performance. With such a strong focus on performance, included features are carefully considered and you can always expect Alacritty to be blazingly fast. By making sane choices for defaults, Alacritty requires no additional setup. However, it does allow configuration of many aspects of the terminal.&lt;/p&gt;

&lt;p&gt;The software is considered to be at a beta level of readiness – there are a few missing features and bugs to be fixed, but it is already used by many as a daily driver, Including me.&lt;/p&gt;

&lt;h3 id=&quot;text-editor&quot;&gt;&lt;strong&gt;TEXT EDITOR&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Yes I’m still using &lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;Sublime Text 3&lt;/a&gt; and I don’t plan on changing that. However, when I need to use a terminal based text editor I’m actually using Micro. &lt;a href=&quot;https://micro-editor.github.io&quot;&gt;Micro&lt;/a&gt; is easy to use ans it’s number one feature is being easy to install (it’s just a static binary with no dependencies) and easy to use.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/qDwzk0n.png&quot; alt=&quot;Sublime and micro&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Uses a simple json format to configure your options and rebind keys to your liking. If you need more power, you can use Lua to configure the editor further.&lt;/p&gt;

&lt;h3 id=&quot;shell&quot;&gt;&lt;strong&gt;SHELL&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;I’ve been a ZSH user for so long, used it for probably 6 years. However at the start of this year and started to try something new. The one I ended up with was fish. And then I obviously installed oh-my-fish. &lt;a href=&quot;https://fishshell.com/&quot;&gt;Fish&lt;/a&gt; is a smart and user-friendly command line shell for Linux, macOS, and the rest of the family.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/VPaI1c1.png&quot; alt=&quot;A simple LS&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;dot-files&quot;&gt;&lt;strong&gt;.DOT FILES&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Want to take a look at my &lt;a href=&quot;https://github.com/mpmont/dotFiles&quot;&gt;dotfiles&lt;/a&gt;? Sure I have them all on my &lt;a href=&quot;https://github.com/mpmont/dotFiles&quot;&gt;github&lt;/a&gt;. Get on it.&lt;/p&gt;</content><author><name>Marco Monteiro</name></author><category term="alacritty, fish, linux, micro, popOS, shell, sublime text, work,2020" /><summary type="html">It’s mid 2020, Ubuntu has a new LTS release and with it its time to try a few things and actually update. As you know I’m now using Pop!OS a distro based on Ubuntu. I already wrote an entire blog post about it. Now I’m going to show you the actual tools I use at the moment.</summary></entry><entry><title type="html">Why I moved from Ubuntu to PopOS!</title><link href="http://localhost:4000/post/why-i-moved-from-ubuntu-to-popos!/" rel="alternate" type="text/html" title="Why I moved from Ubuntu to PopOS!" /><published>2020-06-06T00:00:00+01:00</published><updated>2020-06-06T00:00:00+01:00</updated><id>http://localhost:4000/post/why-i-moved-from-ubuntu-to-popos!</id><content type="html" xml:base="http://localhost:4000/post/why-i-moved-from-ubuntu-to-popos!/">&lt;p&gt;PopOS! really made a big splash with its new 20.04 release and many long terms Ubuntu users like myself are now considering the change or actually changing. And there’s good reason why this is happening.&lt;/p&gt;

&lt;p&gt;For those who don’t know PopOs! is actually based on Ubuntu, so you might be like: - If that’s the case why don’t you just stick with Ubuntu? - That’s a good question. So here’s why.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;its-made-from-the-guys-at-system76&quot;&gt;&lt;strong&gt;IT’S MADE FROM THE GUYS AT SYSTEM76&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;If you don’t know what &lt;a href=&quot;https://system76.com/&quot;&gt;system76&lt;/a&gt; is, they are a hardware company that is focussed on shipping their laptops and desktops with linux based systems. So much so, that they started their own distro to make the experience better. Why is this important? Because their distro is focussed on the hardware. Not that I ever had anything bad to say against Canonical, I just like system76 more.&lt;/p&gt;

&lt;h3 id=&quot;they-dont-change-the-default-gnome-experience&quot;&gt;&lt;strong&gt;THEY DON’T CHANGE THE DEFAULT GNOME EXPERIENCE&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;One of the things that always bothered me in Ubuntu was the changes they make to gnome. Specially because they only do it for one reason, for the desktop environment to look more like the one that was created by them, &lt;a href=&quot;https://en.wikipedia.org/wiki/Unity_%28user_interface%29&quot;&gt;Unity&lt;/a&gt;. And we all hated Unity right?&lt;/p&gt;

&lt;p&gt;I hated this so much that my Ubuntu installs on both personal desktop, laptop and work computer always have the default &lt;a href=&quot;https://www.gnome.org/&quot;&gt;gnome&lt;/a&gt; desktop instaled instead of the one that comes with Ubuntu.&lt;/p&gt;

&lt;h3 id=&quot;flatpak&quot;&gt;&lt;strong&gt;FLATPAK&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;I never had anything against snaps. Canonical had a problem at the time and they solved it. However, now that we have &lt;a href=&quot;https://www.flatpak.org/&quot;&gt;flatpaks&lt;/a&gt; that have become more and more popular I really don’t see the point of using &lt;a href=&quot;https://snapcraft.io/&quot;&gt;snaps&lt;/a&gt;. PopOs! has the same philosophy and they ship their system already supporting flatpaks and even the shop that comes with it supports it, giving me the choice if I want to install a .deb or a flatpak.&lt;/p&gt;

&lt;h3 id=&quot;disk-encryption-by-default&quot;&gt;&lt;strong&gt;DISK ENCRYPTION BY DEFAULT&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;PopOs! takes your privacy and files very seriously, that’s why during the instalation proccess you actually have to opt out the disk encryption if that’s something you don’t want. But why wouldn’t you want it right?&lt;/p&gt;

&lt;h3 id=&quot;window-tiling-inside-gnome&quot;&gt;&lt;strong&gt;WINDOW TILING INSIDE GNOME&lt;/strong&gt;&lt;/h3&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;438&quot; src=&quot;https://www.youtube.com/embed/-fltwBKsMY0&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;One of the things that had me intrigged even when popOs! was still in beta was the option to tile windows inside gnome. I always had a passion about window managers like i3 and others. Just never made the change because there’s a lot of stuff I want from a desktop environment like gnome that a window manager doesn’t have. When they started showing the demos about this feature I was blown away. Sure you can even install it on ubuntu.&lt;/p&gt;

&lt;h3 id=&quot;steam-and-litrus&quot;&gt;&lt;strong&gt;STEAM AND LITRUS&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Not that I do any more gaming besides minecraft on Linux, but if you plan on doing so, popOs! comes with almost everything pre-configured for you so that your gaming experience can be as easy as possible.&lt;/p&gt;</content><author><name>Marco Monteiro</name></author><category term="20.04, 2020, lts, popOs!,linux" /><summary type="html">PopOS! really made a big splash with its new 20.04 release and many long terms Ubuntu users like myself are now considering the change or actually changing. And there’s good reason why this is happening.</summary></entry><entry><title type="html">$ exa A modern replacement for ls</title><link href="http://localhost:4000/post/meet-exa-a-modern-replacement-for-ls/" rel="alternate" type="text/html" title="$ exa A modern replacement for ls" /><published>2020-04-17T00:00:00+01:00</published><updated>2020-04-17T00:00:00+01:00</updated><id>http://localhost:4000/post/meet-exa-a-modern-replacement-for-ls</id><content type="html" xml:base="http://localhost:4000/post/meet-exa-a-modern-replacement-for-ls/">&lt;p&gt;You list files hundreds of times a day. Why spend your time squinting at black and white text?&lt;/p&gt;

&lt;p&gt;exa is an improved file lister with more features and better defaults. It uses colours to distinguish file types and metadata. It knows about symlinks, extended attributes, and Git. And it’s small, fast, and just one single binary.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;exa is written in Rust. So you’ll need that first in case you don’t already have it.&lt;/p&gt;

&lt;p&gt;Run the following command (assuming you have curl installedo on your system) to get started with the installation of Rust in your ubuntu based server/pc:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl https://sh.rustup.rs -sSf | sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now you need to download the lattest version of exa. Head on to &lt;a href=&quot;https://github.com/ogham/exa/releases&quot;&gt;their github page&lt;/a&gt; and download the lattest version.&lt;/p&gt;

&lt;p&gt;Just copy the download link and download the zip using wget, for example with the v0.9.0 you can download the binary with the following command (you can switch to a temporary directory and download the zip in there):&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# You should check your own version of this.
$ wget -c https://github.com/ogham/exa/releases/download/v0.9.0/exa-linux-x86_64-0.8.0.zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then, unzip the binary:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ unzip exa-linux-x86_64-0.8.0.zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The zip contains a single file, namely the binary exa-linux-x86_64. So the last step is to move it to the bin directory of the local user so it will be accesible later in the cli as exa with the following instruction:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo mv exa-linux-x86_64 /usr/local/bin/exa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To use this all you need is to type exa on your terminal. However what you can do to make the change even more perminante is to alias ls to axa.&lt;/p&gt;

&lt;p&gt;To do that I went to my .zshrc file and added the following:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;alias ls='exa --long --header --git'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This way you can use your ls command like you always did and it will be translated into exa.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/VXTYKQl.png&quot; alt=&quot;exa&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Exa supports the following main features:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Colours&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Different types of file and data will be coloured differently, and the user and group columns will be highlighted for the current user.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;All the information&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;exa can display a file’s extended attributes, as well as standard filesystem information such as the inode, the number of blocks, and a file’s various dates and times.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It’s fast&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;exa queries files in parallel, giving you performance on par with ls.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tree view&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Not only is the standard tree tool built-in, but it’ll show you your files’ information alongside the hierarchy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Git support&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;View the staged and unstaged status of every file, right there in the standard view. Also works in tree view for a high-level overview of your repository.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wide view&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;How many columns can you display in your terminal at once? How many do you need?&lt;/p&gt;</content><author><name>Marco Monteiro</name></author><category term="2020,linux,terminal,ubuntu" /><summary type="html">You list files hundreds of times a day. Why spend your time squinting at black and white text?</summary></entry><entry><title type="html">Covid-19 made us more productive</title><link href="http://localhost:4000/post/covid-19-made-us-more-productive/" rel="alternate" type="text/html" title="Covid-19 made us more productive" /><published>2020-04-01T00:00:00+01:00</published><updated>2020-04-01T00:00:00+01:00</updated><id>http://localhost:4000/post/covid-19-made-us-more-productive</id><content type="html" xml:base="http://localhost:4000/post/covid-19-made-us-more-productive/">&lt;p&gt;I manage a small team of 6 including myself. I mostly do quality control stuff at work and I’ve been programming less and less in the past few months, mainly because I’m more involved in the project management side of things. However, there were always a few things that I knew we could do better and wanted to change but it was really hard to find the right time.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Then COVID-19 came about and we had to change and adapt to this new reality. Specially with everyone now working from home. There were 3 things that I wanted to change but still didn’t have the time to. Let’s talk about them.&lt;/p&gt;

&lt;p&gt;###&lt;strong&gt;**PROJECT MANAGEMENT**&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One of the things that I talked about with management many times was my difficult to do project management, specially because the tools we were using were not built to do project management for real.
We were basically using a mix of google docs spreadsheets, gitlab issues and boards to get us going. I know it makes no sense but it was perfect when it was just me. At the time Gitlab was the right choice since I could create kanban boards and use them to manage my project.
Problem is, when you do this with several projects you get sidetracked and just can’t get the big picture on how things are going with all of your projects. This is something extremely important specially when everyone is working remotely.&lt;/p&gt;

&lt;p&gt;I decided to use Clickup. It has everything we need at the moment and more. You can create your own dashboards with project status and tasks per user. You can create boards per project and calendar view among other things. Most important of all it has gitlab integration.
Want to know more? I found this YouTube video about it:&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;370&quot; src=&quot;https://www.youtube.com/embed/LibP_KTUK8I&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;This was a big bost in our productivity, it makes my life way easier when I have to answer to management on how the projects are going. I can answer problems easily and the team feels more productive because they can look at all their tasks in one place, despite the project.&lt;/p&gt;

&lt;p&gt;###&lt;strong&gt;**COMMUNICATION**&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The other problem we had was how we communicated at the office. We used to use fucking whatsapp and I always hated it. Now we finally changed to slack and my life is so much better now. I have channels like I used to have on IRC and I can create threads there. I really love threads. And better than that, I can have my work related chats all in one place. I don’t need to have my family group chats mixed up with my work stuff.&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;370&quot; src=&quot;https://www.youtube.com/embed/276Sz-fcxck&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;###&lt;strong&gt;**CONTINUOUS INTEGRATION**&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is something that I still plan on getting better during this quarantine time. I think I’m able to make things work way better with gitlab, docker and our production servers. If you don’t know what I’m talking about you can read more about it &lt;a href=&quot;https://about.gitlab.com/stages-devops-lifecycle/continuous-integration/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://about.gitlab.com/images/ci/ci-cd-test-deploy-illustration_2x.png&quot; alt=&quot;CI — Gitlab&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Was everything great with this change into a completly remote work environment? No, far from it. The lack of personal relationships at the office, the solitude of being inside 24/7 and time management were a big problem at first. When it started I worked way more at home than I did at the office, mostly because I worked since I woke up until I went to bed.&lt;/p&gt;

&lt;p&gt;These days I try to do my normal schedule and work 9 to 5 even though I’m still in front of the computer most of the time.&lt;/p&gt;</content><author><name>Marco Monteiro</name></author><category term="2020,covid-19,productivity,quarantine" /><summary type="html">I manage a small team of 6 including myself. I mostly do quality control stuff at work and I’ve been programming less and less in the past few months, mainly because I’m more involved in the project management side of things. However, there were always a few things that I knew we could do better and wanted to change but it was really hard to find the right time.</summary></entry><entry><title type="html">Installing SQLsrv extension for PHP 7.2 on Ubuntu 18.04 LTS</title><link href="http://localhost:4000/post/installing-sqlsrv-extension-for-php-7.2-on-ubuntu-18.04-lts/" rel="alternate" type="text/html" title="Installing SQLsrv extension for PHP 7.2 on Ubuntu 18.04 LTS" /><published>2020-03-18T00:00:00+00:00</published><updated>2020-03-18T00:00:00+00:00</updated><id>http://localhost:4000/post/installing-sqlsrv-extension-for-php-7.2-on-ubuntu-18.04-lts</id><content type="html" xml:base="http://localhost:4000/post/installing-sqlsrv-extension-for-php-7.2-on-ubuntu-18.04-lts/">&lt;p&gt;One of our windows servers got updated to a more recent version of windows and SQLServer. Until then I was using the msSQL extension and was still on PHP 5.6 on our intranet at work.&lt;/p&gt;

&lt;p&gt;Since this update I decided to upgrade our servers too and move to PHP 7.2 and obviously to the SQLsrv extension.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Let’s assume that you already have PHP install and apache, so after that you should just do the following to get your microsoft packages.&lt;/p&gt;

&lt;p&gt;On your server type the following commands:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -s https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
sudo bash -c &quot;curl -s https://packages.microsoft.com/config/ubuntu/18.04/prod.list &amp;gt; /etc/apt/sources.list.d/mssql-release.list&quot;
sudo apt-get update
sudo ACCEPT_EULA=Y apt-get -y install msodbcsql17 mssql-tools
sudo apt-get -y install unixodbc-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After this, you most likelly don’t have the  the pecl7.X-sp command working. To solve this I did the following:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get -y install gcc g++ make autoconf libc-dev pkg-config
sudo apt-get install php-pear php-dev
sudo pecl install sqlsrv
sudo pecl install pdo_sqlsrv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After this all you need to do is create the necessary .ini file so that PHP can do its magic.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo bash -c &quot;echo extension=sqlsrv.so &amp;gt; /etc/php/7.2/mods-available/sqlsrv.ini&quot;
sudo ln -s /etc/php/7.2/mods-available/sqlsrv.ini /etc/php/7.2/apache2/conf.d/sqlsrv.ini
sudo ln -s /etc/php/7.2/mods-available/sqlsrv.ini /etc/php/7.2/cli/conf.d/sqlsrv.ini
sudo bash -c &quot;echo extension=pdo_sqlsrv.so &amp;gt; /etc/php/7.2/mods-available/pdo_sqlsrv.ini&quot;
sudo ln -s /etc/php/7.2/mods-available/pdo_sqlsrv.ini /etc/php/7.2/apache2/conf.d/pdo_sqlsrv.ini
sudo ln -s /etc/php/7.2/mods-available/pdo_sqlsrv.ini /etc/php/7.2/cli/conf.d/pdo_sqlsrv.ini
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After this all you need to do is restart your apache:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo service apache2 restart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That’s it!&lt;/p&gt;</content><author><name>Marco Monteiro</name></author><category term="2020,apache,linux,mssql,php,sqlsrv,ubuntu" /><summary type="html">One of our windows servers got updated to a more recent version of windows and SQLServer. Until then I was using the msSQL extension and was still on PHP 5.6 on our intranet at work.</summary></entry><entry><title type="html">Codeigniter 4 snippets for sublime text is here</title><link href="http://localhost:4000/post/codeigniter-4-snippets-for-sublime-text-is-here/" rel="alternate" type="text/html" title="Codeigniter 4 snippets for sublime text is here" /><published>2020-03-15T00:00:00+00:00</published><updated>2020-03-15T00:00:00+00:00</updated><id>http://localhost:4000/post/codeigniter-4-snippets-for-sublime-text-is-here</id><content type="html" xml:base="http://localhost:4000/post/codeigniter-4-snippets-for-sublime-text-is-here/">&lt;p&gt;Codeigniter 4 has been in the works since 2015. It took almost 3 years to have a basic framework working and 2 more to document everything so we can use it in production. This is very exciting news, since codeigniter still holds a place in me. It was PHP framework that I use the most and I still use version 3 at work.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;With this new version up its time to make a new snippets package for Sublime Text 3. I’ve been maintaning the first version of that package for some years now. &lt;a href=&quot;https://blog.marcomonteiro.net/post/thank-you!&quot;&gt;Back then it had 6400+ installs&lt;/a&gt; and I thought that was big, now it has&lt;a href=&quot;https://packagecontrol.io/packages/CodeIgniter%20Snippets&quot;&gt; more than 126k&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let’s make the new one has big as the first one. I made a repo here, and I already have a &lt;a href=&quot;https://github.com/wbond/package_control_channel/pull/7845&quot;&gt;pull request&lt;/a&gt; to have it avaiable to everyone via package control. Until then you can just install it manually. To do that you just have to make a clone of this repository into your packages folder &lt;strong&gt;(Preferences &amp;gt; Browse packages…)&lt;/strong&gt;, like so:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/mpmont/ci4-snippets ci4-snippets
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you feel like helping, you can just send me a pull request and we can sort something out.&lt;/p&gt;

&lt;p&gt;You can know more about Codeigniter 4 by &lt;a href=&quot;https://codeigniter4.github.io/userguide/&quot;&gt;checking the docs&lt;/a&gt;. And the &lt;a href=&quot;https://forum.codeigniter.com/thread-75581.html&quot;&gt;official release post&lt;/a&gt; in the forums.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mpmont/ci4-snippets&quot;&gt;Github repo&lt;/a&gt; with the ci4 snippets.&lt;/p&gt;</content><author><name>Marco Monteiro</name></author><category term="2020,codeigniter,github,open-source,php,programming" /><summary type="html">Codeigniter 4 has been in the works since 2015. It took almost 3 years to have a basic framework working and 2 more to document everything so we can use it in production. This is very exciting news, since codeigniter still holds a place in me. It was PHP framework that I use the most and I still use version 3 at work.</summary></entry><entry><title type="html">Dealing with technical debt</title><link href="http://localhost:4000/post/dealing-with-technical-debt/" rel="alternate" type="text/html" title="Dealing with technical debt" /><published>2020-03-05T00:00:00+00:00</published><updated>2020-03-05T00:00:00+00:00</updated><id>http://localhost:4000/post/dealing-with-technical-debt</id><content type="html" xml:base="http://localhost:4000/post/dealing-with-technical-debt/">&lt;p&gt;Technical debt is just a fancy way of saying that something will bite you in the ass in the long term. However, in every project this is something very real that every Lead Developer has to deal with almost in a daily basis.&lt;/p&gt;

&lt;p&gt;Here I’ll try to describe on how to avoid it it, or at least identify it as soon as possible so you can plan ahead.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;First of all, if we’re talking about technical debt, there’s something that you can be sure, you’ll have to pay it in the future, in one way or another. However I’m not here to say that this is something that should be avoided at all costs. It’s not! There’s some really good reasons  to accept some form of technical debt. Maybe there’s a deadline, or the dreadfull marketing team made some promisses that you’ll have to deal with. Or worst of all, management just made some crazy demands that you have to follow. These are just some examples. There’s many more, but I think these everyone can relate to.&lt;/p&gt;

&lt;p&gt;With this in mind you should always accept some form of technical debt with a deadline in mind, but if you do so, make sure you have a backup plan to fix it in the future. This is how you balance business and your codebase. Never ever, accept technical debt without a backup plan on how to solve it in the future.&lt;/p&gt;

&lt;p&gt;I’m going to quote Martin Fowler here:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you have this kind of exponential relationship, then if you do it more frequently, you can drastically reduce the pain. And this is what happens with Continuous Integration - by integrating every day, the pain of integration almost vanishes. It did hurt, so you did it more often, and now it no longer hurts. - In &lt;a href=&quot;https://martinfowler.com/bliki/FrequencyReducesDifficulty.html&quot;&gt;Frequency Reduces Difficulty&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;center&gt;
![graph](https://martinfowler.com/bliki/images/frequency-reduces-difficulty/graph.png)
&lt;/center&gt;

&lt;p&gt;What I mean is, managing technical debt is something that you’ll learn to do once you start acknowledge is that this is something that you do often. What normally tends to happen is that us, Lead Developers are quite good at identifying these technical debts, however we tend to slack on solve them. Sure this might be ok on smaller projects, where you just have to be sure to avoid them on the next project. But what about big projects? That is just something that you can’t avoid, that will probably mean that somewhere in the future you’ll have a very dificult conversation with management saying that your app needs a complet re-write. I know! I’ve been there and it’s not pleasent.&lt;/p&gt;

&lt;p&gt;How to better understand your codebase so you can identify your technical debt easly?&lt;/p&gt;

&lt;p&gt;First you need to check your version control often. Try and see how your developers interact with your code. See what part of your code is being used most of the time. With this you can identify these key areas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;blockquote&gt;
      &lt;p&gt;&lt;strong&gt;Hotspots&lt;/strong&gt; = where most developers are working&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;blockquote&gt;
      &lt;p&gt;&lt;strong&gt;Refactoring targets&lt;/strong&gt; = prioritize change&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;blockquote&gt;
      &lt;p&gt;&lt;strong&gt;Change coupling&lt;/strong&gt; = implicit change in patters&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;blockquote&gt;
      &lt;p&gt;&lt;strong&gt;Code biomarkers&lt;/strong&gt; = aim to indicate specific properties at very low code base&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then you should ask yourself the following questions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Where should we focus improvements?&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Where are the risk areas?&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;blockquote&gt;
      &lt;p&gt;Is team productivity a problem?&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When you answer those questions, then there’s time for the walk of shame and start paying your debt.&lt;/p&gt;

&lt;center&gt;&lt;iframe src=&quot;https://giphy.com/embed/vX9WcCiWwUF7G&quot; width=&quot;100%&quot; height=&quot;270&quot; frameborder=&quot;0&quot; class=&quot;giphy-embed&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;&lt;/center&gt;

&lt;p&gt;But how?&lt;/p&gt;

&lt;p&gt;You have many options here and you should pick the one that aplies to your case.&lt;/p&gt;

&lt;p&gt;You can allocate more time into the development of said feature and that might solve it because this were rushed. This can be done by making a that a team priority and thats what everyone will be doing until things are solved.&lt;/p&gt;

&lt;p&gt;Another way of paying it is actually making a rulle of having a technical debt day per week or month, were you pick days where everyone in the team will do it.&lt;/p&gt;

&lt;p&gt;You can just choose to educate your team about it, this can be an option with just small debts in small projects, otherwise education can only go so far.&lt;/p&gt;

&lt;p&gt;Should definetly have a talk with management and marketing about it so in the future deadlines wont afect the project as much.&lt;/p&gt;

&lt;p&gt;There’s only one thing that you might be tempted to do, but maybe it’s not really an answer. Hire more developers. This seems like a great idea at first, but sometimes you want to solve these issues with your team before bringing more people into the mix.&lt;/p&gt;</content><author><name>Marco Monteiro</name></author><category term="2020,management,programming,team" /><summary type="html">Technical debt is just a fancy way of saying that something will bite you in the ass in the long term. However, in every project this is something very real that every Lead Developer has to deal with almost in a daily basis.</summary></entry><entry><title type="html">A better man page for your terminal, tldr</title><link href="http://localhost:4000/post/a-better-man-page-for-your-terminal,-tldr/" rel="alternate" type="text/html" title="A better man page for your terminal, tldr" /><published>2020-01-25T00:00:00+00:00</published><updated>2020-01-25T00:00:00+00:00</updated><id>http://localhost:4000/post/a-better-man-page-for-your-terminal,-tldr</id><content type="html" xml:base="http://localhost:4000/post/a-better-man-page-for-your-terminal,-tldr/">&lt;p&gt;I always hated the man pages, I always have a hard time to understand stuff and mostly I have a really hard time finding the option I need.&lt;/p&gt;

&lt;p&gt;The TLDR pages are a community effort to simplify the beloved man pages with practical examples.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Here’s how it works:&lt;/p&gt;

&lt;iframe src=&quot;https://tldr.ostera.io/tar&quot; width=&quot;100%&quot; height=&quot;500px&quot; style=&quot;border: 1px solid&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;As of now, our most mature client is the node.js one, which you can easily install from NPM:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm install -g tldr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Marco Monteiro</name></author><category term="2020,linux,terminal" /><summary type="html">I always hated the man pages, I always have a hard time to understand stuff and mostly I have a really hard time finding the option I need.</summary></entry><entry><title type="html">Prime OS an android based system for your laptop needs</title><link href="http://localhost:4000/post/prime-os-an-android-based-system-for-your-laptop-needs/" rel="alternate" type="text/html" title="Prime OS an android based system for your laptop needs" /><published>2019-03-17T00:00:00+00:00</published><updated>2019-03-17T00:00:00+00:00</updated><id>http://localhost:4000/post/prime-os-an-android-based-system-for-your-laptop-needs</id><content type="html" xml:base="http://localhost:4000/post/prime-os-an-android-based-system-for-your-laptop-needs/">&lt;p&gt;A few months back I got me a cheap chinese laptop mostly for email, browsing the web, some light reading and watching some videos.&lt;/p&gt;

&lt;p&gt;The laptop came with windows, so the first thing I did was remove it and install Ubuntu. However, performance wise it wasn’t the best. So I tried Lubuntu, but then I found out about Prime OS.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;If you already use Android, you’ll love what you can do with PrimeOS. PrimeOS operating system gives a complete desktop experience similar to Windows, MacOS or even Çinux with access to millions of Android apps. It is designed to bring you the best of both worlds - a complete fusion of Android and PC.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://primeos.in/assets/homepage/One.png&quot; alt=&quot;Prime OS&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You install it just like any other Linux distro, just create a bootable USB stick and you’re good to go. Even has live option so you can try it before installing and check if it’s going to perform well on your machine.&lt;/p&gt;

&lt;p&gt;For my everyday laptop use it’s perfect, I already have all my documents on google docs. My main email account is a Google Apps account.&lt;/p&gt;</content><author><name>Marco Monteiro</name></author><category term="2019,android,laptop,linux,primeOS" /><summary type="html">A few months back I got me a cheap chinese laptop mostly for email, browsing the web, some light reading and watching some videos.</summary></entry></feed>